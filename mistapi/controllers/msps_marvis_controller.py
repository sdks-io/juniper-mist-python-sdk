# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from mistapi.api_helper import APIHelper
from mistapi.configuration import Server
from mistapi.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from mistapi.http.http_method_enum import HttpMethodEnum
from apimatic_core.authentication.multiple.single_auth import Single
from apimatic_core.authentication.multiple.and_auth_group import And
from apimatic_core.authentication.multiple.or_auth_group import Or
from mistapi.models.api_v_1_msps_suggestion_count_response import ApiV1MspsSuggestionCountResponse
from mistapi.exceptions.api_exception import APIException
from mistapi.exceptions.api_v_1_msps_suggestion_count_401_error_exception import ApiV1MspsSuggestionCount401ErrorException
from mistapi.exceptions.api_v_1_msps_suggestion_count_403_error_exception import ApiV1MspsSuggestionCount403ErrorException
from mistapi.exceptions.api_v_1_msps_suggestion_count_404_error_exception import ApiV1MspsSuggestionCount404ErrorException


class MspsMarvisController(BaseController):

    """A Controller to access Endpoints in the mistapi API."""
    def __init__(self, config):
        super(MspsMarvisController, self).__init__(config)

    def count_msps_marvis_actions(self,
                                  msp_id,
                                  distinct='org_id',
                                  limit=100,
                                  page=1):
        """Does a GET request to /api/v1/msps/{msp_id}/suggestion/count.

        Count Marvis actions

        Args:
            msp_id (uuid|string): TODO: type description here.
            distinct (Distinct1Enum, optional): TODO: type description here.
                Example: org_id
            limit (int, optional): TODO: type description here. Example: 100
            page (int, optional): TODO: type description here. Example: 1

        Returns:
            ApiV1MspsSuggestionCountResponse: Response from the API. OK

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/api/v1/msps/{msp_id}/suggestion/count')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('msp_id')
                            .value(msp_id)
                            .should_encode(True))
            .query_param(Parameter()
                         .key('distinct')
                         .value(distinct))
            .query_param(Parameter()
                         .key('limit')
                         .value(limit))
            .query_param(Parameter()
                         .key('page')
                         .value(page))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('global'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(ApiV1MspsSuggestionCountResponse.from_dictionary)
            .local_error('400', 'The API endpoint exists but its syntax/payload is incorrect, detail may be given', APIException)
            .local_error('401', 'Unauthorized', ApiV1MspsSuggestionCount401ErrorException)
            .local_error('403', 'Permission Denied', ApiV1MspsSuggestionCount403ErrorException)
            .local_error('404', 'Not found. The API endpoint doesn\'t exist or resource doesn\'t exist', ApiV1MspsSuggestionCount404ErrorException)
        ).execute()
