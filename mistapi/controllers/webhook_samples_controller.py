# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from mistapi.api_helper import APIHelper
from mistapi.configuration import Server
from mistapi.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from mistapi.http.http_method_enum import HttpMethodEnum
from apimatic_core.authentication.multiple.single_auth import Single
from apimatic_core.authentication.multiple.and_auth_group import And
from apimatic_core.authentication.multiple.or_auth_group import Or
from mistapi.exceptions.api_exception import APIException


class WebhookSamplesController(BaseController):

    """A Controller to access Endpoints in the mistapi API."""
    def __init__(self, config):
        super(WebhookSamplesController, self).__init__(config)

    def alarms(self,
               body=None):
        """Does a POST request to /webhook_example/_alarm_.

        Webhook sample for `alarm` topic
        **Note**: The server host will be your own server FQDN where the Mist
        Cloud is sending the webhook messages

        Args:
            body (WebhookAlarms, optional): **N.B.**: Fields like `aps`,
                `bssids`, `ssids` are event specific. They are relevant to
                this event type ( rogue-ap-detected). For a different event
                type, different fields may be sent. These don’t contain all
                affected entities and are representative samples of entities
                (capped at 10). For marvis action related events, we expose
                `details` to include more event specific details.  Events
                specific fields for other alarm event type can be found with
                API https://api.mist.com/api/v1/const/alarm_defs, under
                “fields” array of /alarm_defs response object.

        Returns:
            object: Response from the API. OK

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/webhook_example/_alarm_')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('global'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
        ).execute()

    def asset_raw(self,
                  body=None):
        """Does a POST request to /webhook_example/_asset_raw_.

        Webhook sample for `asset_raw` topic
        **Note**: The server host will be your own server FQDN where the Mist
        Cloud is sending the webhook messages
        **will be deprecated after 03/31/2024**

        Args:
            body (WebhookAssetRaw, optional): TODO: type description here.

        Returns:
            object: Response from the API. OK

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/webhook_example/_asset_raw_')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('global'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
        ).execute()

    def audits(self,
               body=None):
        """Does a POST request to /webhook_example/_audit_.

        Webhook sample for `audit` topic
        **Note**: The server host will be your own server FQDN where the Mist
        Cloud is sending the webhook messages

        Args:
            body (WebhookAudits, optional): TODO: type description here.

        Returns:
            object: Response from the API. OK

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/webhook_example/_audit_')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('global'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
        ).execute()

    def client_join(self,
                    body=None):
        """Does a POST request to /webhook_example/_client_join_.

        Webhook sample for `client_join` topic
        **Note**: The server host will be your own server FQDN where the Mist
        Cloud is sending the webhook messages

        Args:
            body (WebhookClientJoin, optional): TODO: type description here.

        Returns:
            object: Response from the API. OK

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/webhook_example/_client_join_')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('global'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
        ).execute()

    def client_sessions(self,
                        body=None):
        """Does a POST request to /webhook_example/_client_sessions_.

        Webhook sample for `client_sessions` topic
        **Note**: The server host will be your own server FQDN where the Mist
        Cloud is sending the webhook messages

        Args:
            body (WebhookClientSessions, optional): TODO: type description
                here.

        Returns:
            object: Response from the API. OK

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/webhook_example/_client_sessions_')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('global'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .local_error('400', 'The API endpoint exists but its syntax/payload is incorrect, detail may be given', APIException)
        ).execute()

    def device_events(self,
                      body=None):
        """Does a POST request to /webhook_example/_device_events_.

        Webhook sample for `device_events` topic
        **Note**: The server host will be your own server FQDN where the Mist
        Cloud is sending the webhook messages

        Args:
            body (WebhookDeviceEvents, optional): TODO: type description
                here.

        Returns:
            object: Response from the API. OK

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/webhook_example/_device_events_')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('global'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
        ).execute()

    def device_up_down(self,
                       body=None):
        """Does a POST request to /webhook_example/_device_updowns_.

        Webhook sample for `device_updowns` topic
        **Note**: The server host will be your own server FQDN where the Mist
        Cloud is sending the webhook messages

        Args:
            body (WebhookDeviceUpdowns, optional): TODO: type description
                here.

        Returns:
            object: Response from the API. OK

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/webhook_example/_device_updowns_')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('global'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
        ).execute()

    def discovered_raw_rssi(self,
                            body=None):
        """Does a POST request to /webhook_example/_discovered_raw_rssi_.

        Webhook sample for `discovered-raw-rssi` topic
        **Note**: The server host will be your own server FQDN where the Mist
        Cloud is sending the webhook messages

        Args:
            body (WebhookDiscoveredRawRssi, optional): TODO: type description
                here.

        Returns:
            object: Response from the API. OK

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/webhook_example/_discovered_raw_rssi_')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('global'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
        ).execute()

    def location(self,
                 body=None):
        """Does a POST request to /webhook_example/_location_.

        Webhook sample for `location` topic
        **Note**: The server host will be your own server FQDN where the Mist
        Cloud is sending the webhook messages

        Args:
            body (WebhookLocation, optional): TODO: type description here.

        Returns:
            object: Response from the API. OK

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/webhook_example/_location_')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('global'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
        ).execute()

    def occupancy_alerts(self,
                         body=None):
        """Does a POST request to /webhook_example/_occupancy_alerts_.

        Webhook sample for `occupancy_alerts` topic
        **Note**: The server host will be your own server FQDN where the Mist
        Cloud is sending the webhook messages

        Args:
            body (WebhookOccupancyAlerts, optional): TODO: type description
                here.

        Returns:
            object: Response from the API. OK

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/webhook_example/_occupancy_alerts_')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('global'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
        ).execute()

    def ping(self,
             body=None):
        """Does a POST request to /webhook_example/_ping_.

        Webhook sample for `ping` topic
        **Note**: The server host will be your own server FQDN where the Mist
        Cloud is sending the webhook messages

        Args:
            body (WebhookPing, optional): TODO: type description here.

        Returns:
            object: Response from the API. OK

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/webhook_example/_ping_')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('global'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
        ).execute()

    def sdkclient_scan_data(self,
                            body=None):
        """Does a POST request to /webhook_example/_sdkclient_scan_data.

        Webhook sample for `sdkclient_scan_data` topic
        **Note**: The server host will be your own server FQDN where the Mist
        Cloud is sending the webhook messages

        Args:
            body (WebhookSdkclientScanData, optional): TODO: type description
                here.

        Returns:
            object: Response from the API. OK

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/webhook_example/_sdkclient_scan_data')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('global'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
        ).execute()

    def zone(self,
             body=None):
        """Does a POST request to /webhook_example/_zone_.

        Webhook sample for `zone` topic
        **Note**: The server host will be your own server FQDN where the Mist
        Cloud is sending the webhook messages

        Args:
            body (WebhookZone, optional): TODO: type description here.

        Returns:
            object: Response from the API. OK

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/webhook_example/_zone_')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('global'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
        ).execute()
