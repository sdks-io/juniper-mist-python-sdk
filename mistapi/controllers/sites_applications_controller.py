# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from mistapi.api_helper import APIHelper
from mistapi.configuration import Server
from mistapi.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from mistapi.http.http_method_enum import HttpMethodEnum
from apimatic_core.authentication.multiple.single_auth import Single
from apimatic_core.authentication.multiple.and_auth_group import And
from apimatic_core.authentication.multiple.or_auth_group import Or
from mistapi.models.api_v_1_sites_apps_response import ApiV1SitesAppsResponse
from mistapi.models.count import Count
from mistapi.exceptions.api_exception import APIException
from mistapi.exceptions.api_v_1_sites_apps_401_error_exception import ApiV1SitesApps401ErrorException
from mistapi.exceptions.api_v_1_sites_apps_403_error_exception import ApiV1SitesApps403ErrorException
from mistapi.exceptions.api_v_1_sites_apps_404_error_exception import ApiV1SitesApps404ErrorException
from mistapi.exceptions.api_v_1_sites_stats_apps_count_401_error_exception import ApiV1SitesStatsAppsCount401ErrorException
from mistapi.exceptions.api_v_1_sites_stats_apps_count_403_error_exception import ApiV1SitesStatsAppsCount403ErrorException
from mistapi.exceptions.api_v_1_sites_stats_apps_count_404_error_exception import ApiV1SitesStatsAppsCount404ErrorException


class SitesApplicationsController(BaseController):

    """A Controller to access Endpoints in the mistapi API."""
    def __init__(self, config):
        super(SitesApplicationsController, self).__init__(config)

    def list_site_apps(self,
                       site_id):
        """Does a GET request to /api/v1/sites/{site_id}/apps.

        Get List of Site Applications

        Args:
            site_id (uuid|string): TODO: type description here.

        Returns:
            list of ApiV1SitesAppsResponse: Response from the API. OK

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/api/v1/sites/{site_id}/apps')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('site_id')
                            .value(site_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('global'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(ApiV1SitesAppsResponse.from_dictionary)
            .local_error('400', 'The API endpoint exists but its syntax/payload is incorrect, detail may be given', APIException)
            .local_error('401', 'Unauthorized', ApiV1SitesApps401ErrorException)
            .local_error('403', 'Permission Denied', ApiV1SitesApps403ErrorException)
            .local_error('404', 'Not found. The API endpoint doesn\'t exist or resource doesn\'t exist', ApiV1SitesApps404ErrorException)
        ).execute()

    def count_site_apps(self,
                        site_id,
                        distinct=None,
                        device_mac=None,
                        app=None,
                        wired=None):
        """Does a GET request to /api/v1/sites/{site_id}/stats/apps/count.

        Count by Distinct Attributes of Applications

        Args:
            site_id (uuid|string): TODO: type description here.
            distinct (Distinct16Enum, optional): Default for wireless devices
                is `ap`. Default for wired devices is `device_mac`
            device_mac (string, optional): MAC of the device
            app (string, optional): Application name
            wired (string, optional): If a device is wired or wireless.
                Default is False.

        Returns:
            Count: Response from the API. OK

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/api/v1/sites/{site_id}/stats/apps/count')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('site_id')
                            .value(site_id)
                            .should_encode(True))
            .query_param(Parameter()
                         .key('distinct')
                         .value(distinct))
            .query_param(Parameter()
                         .key('device_mac')
                         .value(device_mac))
            .query_param(Parameter()
                         .key('app')
                         .value(app))
            .query_param(Parameter()
                         .key('wired')
                         .value(wired))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('global'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(Count.from_dictionary)
            .local_error('400', 'The API endpoint exists but its syntax/payload is incorrect, detail may be given', APIException)
            .local_error('401', 'Unauthorized', ApiV1SitesStatsAppsCount401ErrorException)
            .local_error('403', 'Permission Denied', ApiV1SitesStatsAppsCount403ErrorException)
            .local_error('404', 'Not found. The API endpoint doesn\'t exist or resource doesn\'t exist', ApiV1SitesStatsAppsCount404ErrorException)
        ).execute()
