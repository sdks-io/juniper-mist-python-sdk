# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mistapi.api_helper import APIHelper


class Celona(object):

    """Implementation of the 'Celona' model.

    TODO: type model description here.

    Attributes:
        api_key (string): TODO: type description here.
        api_prefix (string): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "api_key": 'api_key',
        "api_prefix": 'api_prefix'
    }

    _optionals = [
        'api_key',
        'api_prefix',
    ]

    def __init__(self,
                 api_key=APIHelper.SKIP,
                 api_prefix=APIHelper.SKIP):
        """Constructor for the Celona class"""

        # Initialize members of the class
        if api_key is not APIHelper.SKIP:
            self.api_key = api_key 
        if api_prefix is not APIHelper.SKIP:
            self.api_prefix = api_prefix 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        api_key = dictionary.get("api_key") if dictionary.get("api_key") else APIHelper.SKIP
        api_prefix = dictionary.get("api_prefix") if dictionary.get("api_prefix") else APIHelper.SKIP
        # Return an object of this model
        return cls(api_key,
                   api_prefix)
