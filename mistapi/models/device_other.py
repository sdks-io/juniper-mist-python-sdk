# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mistapi.api_helper import APIHelper


class DeviceOther(object):

    """Implementation of the 'device_other' model.

    TODO: type model description here.

    Attributes:
        created_time (int): TODO: type description here.
        device_mac (string): TODO: type description here.
        id (string): TODO: type description here.
        mac (string): TODO: type description here.
        model (string): TODO: type description here.
        modified_time (int): TODO: type description here.
        name (string): TODO: type description here.
        org_id (string): TODO: type description here.
        serial (string): TODO: type description here.
        site_id (string): TODO: type description here.
        vendor (string): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "created_time": 'created_time',
        "device_mac": 'device_mac',
        "id": 'id',
        "mac": 'mac',
        "model": 'model',
        "modified_time": 'modified_time',
        "name": 'name',
        "org_id": 'org_id',
        "serial": 'serial',
        "site_id": 'site_id',
        "vendor": 'vendor'
    }

    _optionals = [
        'created_time',
        'device_mac',
        'id',
        'mac',
        'model',
        'modified_time',
        'name',
        'org_id',
        'serial',
        'site_id',
        'vendor',
    ]

    def __init__(self,
                 created_time=APIHelper.SKIP,
                 device_mac=APIHelper.SKIP,
                 id=APIHelper.SKIP,
                 mac=APIHelper.SKIP,
                 model=APIHelper.SKIP,
                 modified_time=APIHelper.SKIP,
                 name=APIHelper.SKIP,
                 org_id=APIHelper.SKIP,
                 serial=APIHelper.SKIP,
                 site_id=APIHelper.SKIP,
                 vendor=APIHelper.SKIP):
        """Constructor for the DeviceOther class"""

        # Initialize members of the class
        if created_time is not APIHelper.SKIP:
            self.created_time = created_time 
        if device_mac is not APIHelper.SKIP:
            self.device_mac = device_mac 
        if id is not APIHelper.SKIP:
            self.id = id 
        if mac is not APIHelper.SKIP:
            self.mac = mac 
        if model is not APIHelper.SKIP:
            self.model = model 
        if modified_time is not APIHelper.SKIP:
            self.modified_time = modified_time 
        if name is not APIHelper.SKIP:
            self.name = name 
        if org_id is not APIHelper.SKIP:
            self.org_id = org_id 
        if serial is not APIHelper.SKIP:
            self.serial = serial 
        if site_id is not APIHelper.SKIP:
            self.site_id = site_id 
        if vendor is not APIHelper.SKIP:
            self.vendor = vendor 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        created_time = dictionary.get("created_time") if dictionary.get("created_time") else APIHelper.SKIP
        device_mac = dictionary.get("device_mac") if dictionary.get("device_mac") else APIHelper.SKIP
        id = dictionary.get("id") if dictionary.get("id") else APIHelper.SKIP
        mac = dictionary.get("mac") if dictionary.get("mac") else APIHelper.SKIP
        model = dictionary.get("model") if dictionary.get("model") else APIHelper.SKIP
        modified_time = dictionary.get("modified_time") if dictionary.get("modified_time") else APIHelper.SKIP
        name = dictionary.get("name") if dictionary.get("name") else APIHelper.SKIP
        org_id = dictionary.get("org_id") if dictionary.get("org_id") else APIHelper.SKIP
        serial = dictionary.get("serial") if dictionary.get("serial") else APIHelper.SKIP
        site_id = dictionary.get("site_id") if dictionary.get("site_id") else APIHelper.SKIP
        vendor = dictionary.get("vendor") if dictionary.get("vendor") else APIHelper.SKIP
        # Return an object of this model
        return cls(created_time,
                   device_mac,
                   id,
                   mac,
                   model,
                   modified_time,
                   name,
                   org_id,
                   serial,
                   site_id,
                   vendor)
