# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mistapi.api_helper import APIHelper
from mistapi.models.device_mac_port import DeviceMacPort


class WiredClientResponse(object):

    """Implementation of the 'wired_client.response' model.

    TODO: type model description here.

    Attributes:
        device_mac (list of string): TODO: type description here.
        device_mac_port (list of DeviceMacPort): TODO: type description here.
        ip (list of string): TODO: type description here.
        mac (string): TODO: type description here.
        org_id (string): TODO: type description here.
        port_id (list of string): TODO: type description here.
        site_id (string): TODO: type description here.
        timestamp (float): TODO: type description here.
        vlan (list of int): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "device_mac": 'device_mac',
        "device_mac_port": 'device_mac_port',
        "ip": 'ip',
        "mac": 'mac',
        "org_id": 'org_id',
        "port_id": 'port_id',
        "site_id": 'site_id',
        "timestamp": 'timestamp',
        "vlan": 'vlan'
    }

    _optionals = [
        'device_mac',
        'device_mac_port',
        'ip',
        'mac',
        'org_id',
        'port_id',
        'site_id',
        'timestamp',
        'vlan',
    ]

    def __init__(self,
                 device_mac=APIHelper.SKIP,
                 device_mac_port=APIHelper.SKIP,
                 ip=APIHelper.SKIP,
                 mac=APIHelper.SKIP,
                 org_id=APIHelper.SKIP,
                 port_id=APIHelper.SKIP,
                 site_id=APIHelper.SKIP,
                 timestamp=APIHelper.SKIP,
                 vlan=APIHelper.SKIP):
        """Constructor for the WiredClientResponse class"""

        # Initialize members of the class
        if device_mac is not APIHelper.SKIP:
            self.device_mac = device_mac 
        if device_mac_port is not APIHelper.SKIP:
            self.device_mac_port = device_mac_port 
        if ip is not APIHelper.SKIP:
            self.ip = ip 
        if mac is not APIHelper.SKIP:
            self.mac = mac 
        if org_id is not APIHelper.SKIP:
            self.org_id = org_id 
        if port_id is not APIHelper.SKIP:
            self.port_id = port_id 
        if site_id is not APIHelper.SKIP:
            self.site_id = site_id 
        if timestamp is not APIHelper.SKIP:
            self.timestamp = timestamp 
        if vlan is not APIHelper.SKIP:
            self.vlan = vlan 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        device_mac = dictionary.get("device_mac") if dictionary.get("device_mac") else APIHelper.SKIP
        device_mac_port = None
        if dictionary.get('device_mac_port') is not None:
            device_mac_port = [DeviceMacPort.from_dictionary(x) for x in dictionary.get('device_mac_port')]
        else:
            device_mac_port = APIHelper.SKIP
        ip = dictionary.get("ip") if dictionary.get("ip") else APIHelper.SKIP
        mac = dictionary.get("mac") if dictionary.get("mac") else APIHelper.SKIP
        org_id = dictionary.get("org_id") if dictionary.get("org_id") else APIHelper.SKIP
        port_id = dictionary.get("port_id") if dictionary.get("port_id") else APIHelper.SKIP
        site_id = dictionary.get("site_id") if dictionary.get("site_id") else APIHelper.SKIP
        timestamp = dictionary.get("timestamp") if dictionary.get("timestamp") else APIHelper.SKIP
        vlan = dictionary.get("vlan") if dictionary.get("vlan") else APIHelper.SKIP
        # Return an object of this model
        return cls(device_mac,
                   device_mac_port,
                   ip,
                   mac,
                   org_id,
                   port_id,
                   site_id,
                   timestamp,
                   vlan)
