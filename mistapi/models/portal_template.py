# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mistapi.api_helper import APIHelper


class PortalTemplate(object):

    """Implementation of the 'portal_template' model.

    Portal Template

    Attributes:
        access_code_alternate_email (string): TODO: type description here.
        alignment (string): defines alignment on portal. “left” is default.
        auth_button_amazon (string): label for Amazon auth button
        auth_button_azure (string): label for Azure auth button
        auth_button_email (string): label for Email auth button
        auth_button_facebook (string): label for Facebook auth button
        auth_button_google (string): label for Google auth button
        auth_button_microsoft (string): label for Microsoft auth button
        auth_button_passphrase (string): label for passphrase auth button
        auth_button_sms (string): label for SMS auth button
        auth_button_sponsor (string): label for Sponsor auth button
        auth_label (string): TODO: type description here.
        back_link (string): label of the link to go back to /logon
        color (string): TODO: type description here.
        color_dark (string): TODO: type description here.
        color_light (string): TODO: type description here.
        company (bool): whether company field is required
        company_error (string): error message when company not provided
        company_label (string): label of company field
        created_time (float): TODO: type description here.
        email (bool): whether email field is required
        email_access_domain_error (string): error message when a user has
            valid social login but doesn’t match specified email domains.
        email_cancel (string): TODO: type description here.
        email_code_error (string): TODO: type description here.
        email_error (string): error message when email not provided
        email_field_label (string): TODO: type description here.
        email_label (string): label of email field
        email_message (string): TODO: type description here.
        email_submit (string): TODO: type description here.
        email_title (string): TODO: type description here.
        field_1 (bool): whether to ask field1
        field_1_error (string): error message when field1 not provided
        field_1_label (string): label of field1
        field_1_required (bool): whether field1 is required field
        field_2 (bool): whether to ask field2
        field_2_error (string): error message when field2 not provided
        field_2_label (string): label of field2
        field_2_required (bool): whether field2 is required field
        field_3 (bool): whether to ask field3
        field_3_error (string): error message when field3 not provided
        field_3_label (string): label of field3
        field_3_required (bool): whether field3 is required field
        field_4 (bool): whether to ask field4
        field_4_error (string): error message when field4 not provided
        field_4_label (string): label of field4
        field_4_required (bool): whether field4 is required field
        for_site (bool): TODO: type description here.
        id (uuid|string): TODO: type description here.
        message (string): TODO: type description here.
        modified_time (float): TODO: type description here.
        name (bool): whether name field is required
        name_error (string): error message when name not provided
        name_label (string): label of name field
        optout (bool): whether to display “Do Not Store My Personal
            Information”
        optout_label (string): TODO: type description here.
        org_id (uuid|string): TODO: type description here.
        page_title (string): TODO: type description here.
        passphrase_cancel (string): TODO: type description here.
        passphrase_error (string): error message when invalid passphrase is
            provided
        passphrase_label (string): TODO: type description here.
        passphrase_message (string): TODO: type description here.
        passphrase_submit (string): TODO: type description here.
        passphrase_title (string): Title for passphrase details page
        powered_by (bool): whether to show “Powered by Mist”
        required_field_label (string): label to denote required field
        sign_in_label (string): label of the button to /signin
        site_id (uuid|string): TODO: type description here.
        sms_carrier_default (string): TODO: type description here.
        sms_carrier_error (string): TODO: type description here.
        sms_carrier_field_label (string): label for mobile carrier drop-down
            list
        sms_code_cancel (string): Label for cancel confirmation code
            submission
        sms_code_error (string): error message when confirmation code is
            invalid
        sms_code_field_label (string): TODO: type description here.
        sms_code_message (string): TODO: type description here.
        sms_code_submit (string): Label for confirmation code submit button
        sms_code_title (string): TODO: type description here.
        sms_country_field_label (string): “Country Code”
        sms_country_format (string): TODO: type description here.
        sms_have_access_code (string): Label for checkbox to specify that the
            user has access code
        sms_message_format (string): format of access code sms message.
            {{code}} and {{duration}} are place holders and should be retained
            as is.
        sms_number_cancel (string): label for canceling mobile details for SMS
            auth
        sms_number_error (string): TODO: type description here.
        sms_number_field_label (string): label for field to provide mobile
            number
        sms_number_format (string): TODO: type description here.
        sms_number_message (string): TODO: type description here.
        sms_number_submit (string): label for submit button for code
            generation
        sms_number_title (string): Title for phone number details
        sms_username_format (string): TODO: type description here.
        sms_validity_duration (float): how long confirmation code should be
            considered valid (in minutes)
        sponsor_auto_approved (string): TODO: type description here.
        sponsor_auto_approved_note (string): TODO: type description here.
        sponsor_back_link (string): TODO: type description here.
        sponsor_cancel (string): TODO: type description here.
        sponsor_email (string): label for Sponsor Email
        sponsor_email_error (string): TODO: type description here.
        sponsor_email_template (string): “html template to replace/override
            default sponsor email template”
        sponsor_info_approved (string): TODO: type description here.
        sponsor_info_denied (string): TODO: type description here.
        sponsor_info_pending (string): TODO: type description here.
        sponsor_name (string): label for Sponsor Name
        sponsor_name_error (string): TODO: type description here.
        sponsor_note_pending (string): TODO: type description here.
        sponsor_status_approved (string): text to display if sponsor approves
            request
        sponsor_status_denied (string): text to display when sponsor denies
            request
        sponsor_status_pending (string): text to display if request is still
            pending
        sponsor_submit (string): submit button label to notify sponsor about
            guest request
        sponsors_auto_approved_note (string): TODO: type description here.
        sponsors_error (string): TODO: type description here.
        tos (bool): TODO: type description here.
        tos_accept_label (string): prefix of the label of the link to go to
            /tos
        tos_error (string): error message when tos not accepted
        tos_link (string): label of the link to go to /tos
        tos_text (string): text of the Terms of Service

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "page_title": 'pageTitle',
        "access_code_alternate_email": 'accessCodeAlternateEmail',
        "alignment": 'alignment',
        "auth_button_amazon": 'authButtonAmazon',
        "auth_button_azure": 'authButtonAzure',
        "auth_button_email": 'authButtonEmail',
        "auth_button_facebook": 'authButtonFacebook',
        "auth_button_google": 'authButtonGoogle',
        "auth_button_microsoft": 'authButtonMicrosoft',
        "auth_button_passphrase": 'authButtonPassphrase',
        "auth_button_sms": 'authButtonSms',
        "auth_button_sponsor": 'authButtonSponsor',
        "auth_label": 'authLabel',
        "back_link": 'backLink',
        "color": 'color',
        "color_dark": 'colorDark',
        "color_light": 'colorLight',
        "company": 'company',
        "company_error": 'companyError',
        "company_label": 'companyLabel',
        "created_time": 'created_time',
        "email": 'email',
        "email_access_domain_error": 'emailAccessDomainError',
        "email_cancel": 'emailCancel',
        "email_code_error": 'emailCodeError',
        "email_error": 'emailError',
        "email_field_label": 'emailFieldLabel',
        "email_label": 'emailLabel',
        "email_message": 'emailMessage',
        "email_submit": 'emailSubmit',
        "email_title": 'emailTitle',
        "field_1": 'field1',
        "field_1_error": 'field1Error',
        "field_1_label": 'field1Label',
        "field_1_required": 'field1Required',
        "field_2": 'field2',
        "field_2_error": 'field2Error',
        "field_2_label": 'field2Label',
        "field_2_required": 'field2Required',
        "field_3": 'field3',
        "field_3_error": 'field3Error',
        "field_3_label": 'field3Label',
        "field_3_required": 'field3Required',
        "field_4": 'field4',
        "field_4_error": 'field4Error',
        "field_4_label": 'field4Label',
        "field_4_required": 'field4Required',
        "for_site": 'for_site',
        "id": 'id',
        "message": 'message',
        "modified_time": 'modified_time',
        "name": 'name',
        "name_error": 'nameError',
        "name_label": 'nameLabel',
        "optout": 'optout',
        "optout_label": 'optoutLabel',
        "org_id": 'org_id',
        "passphrase_cancel": 'passphraseCancel',
        "passphrase_error": 'passphraseError',
        "passphrase_label": 'passphraseLabel',
        "passphrase_message": 'passphraseMessage',
        "passphrase_submit": 'passphraseSubmit',
        "passphrase_title": 'passphraseTitle',
        "powered_by": 'poweredBy',
        "required_field_label": 'requiredFieldLabel',
        "sign_in_label": 'signInLabel',
        "site_id": 'site_id',
        "sms_carrier_default": 'smsCarrierDefault',
        "sms_carrier_error": 'smsCarrierError',
        "sms_carrier_field_label": 'smsCarrierFieldLabel',
        "sms_code_cancel": 'smsCodeCancel',
        "sms_code_error": 'smsCodeError',
        "sms_code_field_label": 'smsCodeFieldLabel',
        "sms_code_message": 'smsCodeMessage',
        "sms_code_submit": 'smsCodeSubmit',
        "sms_code_title": 'smsCodeTitle',
        "sms_country_field_label": 'smsCountryFieldLabel',
        "sms_country_format": 'smsCountryFormat',
        "sms_have_access_code": 'smsHaveAccessCode',
        "sms_message_format": 'smsMessageFormat',
        "sms_number_cancel": 'smsNumberCancel',
        "sms_number_error": 'smsNumberError',
        "sms_number_field_label": 'smsNumberFieldLabel',
        "sms_number_format": 'smsNumberFormat',
        "sms_number_message": 'smsNumberMessage',
        "sms_number_submit": 'smsNumberSubmit',
        "sms_number_title": 'smsNumberTitle',
        "sms_username_format": 'smsUsernameFormat',
        "sms_validity_duration": 'smsValidityDuration',
        "sponsor_auto_approved": 'sponsorAutoApproved',
        "sponsor_auto_approved_note": 'sponsorAutoApprovedNote',
        "sponsor_back_link": 'sponsorBackLink',
        "sponsor_cancel": 'sponsorCancel',
        "sponsor_email": 'sponsorEmail',
        "sponsor_email_error": 'sponsorEmailError',
        "sponsor_email_template": 'sponsorEmailTemplate',
        "sponsor_info_approved": 'sponsorInfoApproved',
        "sponsor_info_denied": 'sponsorInfoDenied',
        "sponsor_info_pending": 'sponsorInfoPending',
        "sponsor_name": 'sponsorName',
        "sponsor_name_error": 'sponsorNameError',
        "sponsor_note_pending": 'sponsorNotePending',
        "sponsor_status_approved": 'sponsorStatusApproved',
        "sponsor_status_denied": 'sponsorStatusDenied',
        "sponsor_status_pending": 'sponsorStatusPending',
        "sponsor_submit": 'sponsorSubmit',
        "sponsors_auto_approved_note": 'sponsorsAutoApprovedNote',
        "sponsors_error": 'sponsorsError',
        "tos": 'tos',
        "tos_accept_label": 'tosAcceptLabel',
        "tos_error": 'tosError',
        "tos_link": 'tosLink',
        "tos_text": 'tosText'
    }

    _optionals = [
        'access_code_alternate_email',
        'alignment',
        'auth_button_amazon',
        'auth_button_azure',
        'auth_button_email',
        'auth_button_facebook',
        'auth_button_google',
        'auth_button_microsoft',
        'auth_button_passphrase',
        'auth_button_sms',
        'auth_button_sponsor',
        'auth_label',
        'back_link',
        'color',
        'color_dark',
        'color_light',
        'company',
        'company_error',
        'company_label',
        'created_time',
        'email',
        'email_access_domain_error',
        'email_cancel',
        'email_code_error',
        'email_error',
        'email_field_label',
        'email_label',
        'email_message',
        'email_submit',
        'email_title',
        'field_1',
        'field_1_error',
        'field_1_label',
        'field_1_required',
        'field_2',
        'field_2_error',
        'field_2_label',
        'field_2_required',
        'field_3',
        'field_3_error',
        'field_3_label',
        'field_3_required',
        'field_4',
        'field_4_error',
        'field_4_label',
        'field_4_required',
        'for_site',
        'id',
        'message',
        'modified_time',
        'name',
        'name_error',
        'name_label',
        'optout',
        'optout_label',
        'org_id',
        'passphrase_cancel',
        'passphrase_error',
        'passphrase_label',
        'passphrase_message',
        'passphrase_submit',
        'passphrase_title',
        'powered_by',
        'required_field_label',
        'sign_in_label',
        'site_id',
        'sms_carrier_default',
        'sms_carrier_error',
        'sms_carrier_field_label',
        'sms_code_cancel',
        'sms_code_error',
        'sms_code_field_label',
        'sms_code_message',
        'sms_code_submit',
        'sms_code_title',
        'sms_country_field_label',
        'sms_country_format',
        'sms_have_access_code',
        'sms_message_format',
        'sms_number_cancel',
        'sms_number_error',
        'sms_number_field_label',
        'sms_number_format',
        'sms_number_message',
        'sms_number_submit',
        'sms_number_title',
        'sms_username_format',
        'sms_validity_duration',
        'sponsor_auto_approved',
        'sponsor_auto_approved_note',
        'sponsor_back_link',
        'sponsor_cancel',
        'sponsor_email',
        'sponsor_email_error',
        'sponsor_email_template',
        'sponsor_info_approved',
        'sponsor_info_denied',
        'sponsor_info_pending',
        'sponsor_name',
        'sponsor_name_error',
        'sponsor_note_pending',
        'sponsor_status_approved',
        'sponsor_status_denied',
        'sponsor_status_pending',
        'sponsor_submit',
        'sponsors_auto_approved_note',
        'sponsors_error',
        'tos',
        'tos_accept_label',
        'tos_error',
        'tos_link',
        'tos_text',
    ]

    def __init__(self,
                 page_title='Welcome',
                 access_code_alternate_email='Please provide valid alternate email',
                 alignment=APIHelper.SKIP,
                 auth_button_amazon='Sign in with Amazon',
                 auth_button_azure='Sign in with Azure',
                 auth_button_email='Sign in with Email',
                 auth_button_facebook='Sign in with Facebook',
                 auth_button_google='Sign in with Google',
                 auth_button_microsoft='Sign in with Microsoft',
                 auth_button_passphrase=APIHelper.SKIP,
                 auth_button_sms='Sign in with Text Message',
                 auth_button_sponsor='Sign in as Guest',
                 auth_label='“Connect to WiFi with”',
                 back_link='Go back and edit request form',
                 color='“#1074bc”',
                 color_dark='“#0b5183”',
                 color_light='“#3589c6”',
                 company=False,
                 company_error='Please provide company name',
                 company_label='Company',
                 created_time=APIHelper.SKIP,
                 email=False,
                 email_access_domain_error='Access is restricted by email domain',
                 email_cancel='Cancel',
                 email_code_error='Please provide valid alternate email',
                 email_error='Please provide valid email',
                 email_field_label='Enter your email address',
                 email_label='Email',
                 email_message='We will email you an authentication code which you can use to connect to the WiFi network.',
                 email_submit='“Send Access Code”',
                 email_title='“Sign in with Email”',
                 field_1=False,
                 field_1_error='Please provide field1',
                 field_1_label='Custom1',
                 field_1_required=False,
                 field_2=False,
                 field_2_error='Please provide field2',
                 field_2_label='Custom2',
                 field_2_required=False,
                 field_3=False,
                 field_3_error='Please provide field3',
                 field_3_label='Custom3',
                 field_3_required=False,
                 field_4=False,
                 field_4_error='Please provide field4',
                 field_4_label='Custom4',
                 field_4_required=False,
                 for_site=APIHelper.SKIP,
                 id=APIHelper.SKIP,
                 message='Please enjoy the complimentary Wifi',
                 modified_time=APIHelper.SKIP,
                 name=False,
                 name_error='Please provide your name',
                 name_label='Name',
                 optout=APIHelper.SKIP,
                 optout_label='Do Not Store My Personal Information',
                 org_id=APIHelper.SKIP,
                 passphrase_cancel='Cancel',
                 passphrase_error='Invalid Passphrase',
                 passphrase_label='Passphrase',
                 passphrase_message='Login using passphrase',
                 passphrase_submit='Sign in',
                 passphrase_title='Sign in with Passphrase',
                 powered_by=True,
                 required_field_label='required',
                 sign_in_label='Sign In',
                 site_id=APIHelper.SKIP,
                 sms_carrier_default='Please Select',
                 sms_carrier_error='Please select a mobile carrier',
                 sms_carrier_field_label='Mobile Carrier',
                 sms_code_cancel='Cancel',
                 sms_code_error='Invalid Access Code',
                 sms_code_field_label='Confirmation Code',
                 sms_code_message='Enter the confirmation code',
                 sms_code_submit='Submit Code',
                 sms_code_title='Access Code',
                 sms_country_field_label=APIHelper.SKIP,
                 sms_country_format='“+1”',
                 sms_have_access_code='I have an access code',
                 sms_message_format='Code {{code}} expires in {{duration}} minutes.',
                 sms_number_cancel='Cancel',
                 sms_number_error='Invalid Mobile Number',
                 sms_number_field_label='Mobile Number',
                 sms_number_format='“2125551212 (digits only)”',
                 sms_number_message='We will send an access code to your mobile number which you can use to connect to the WiFi network. Message and data rates may apply.',
                 sms_number_submit='Sign In',
                 sms_number_title='Text Message Confirmation',
                 sms_username_format='username',
                 sms_validity_duration=5,
                 sponsor_auto_approved='Your request was approved.',
                 sponsor_auto_approved_note='Your notification has been sent to',
                 sponsor_back_link='Go back and edit request form',
                 sponsor_cancel='Cancel',
                 sponsor_email='Please provide valid sponsor email',
                 sponsor_email_error='Please provide valid sponsor email',
                 sponsor_email_template=APIHelper.SKIP,
                 sponsor_info_approved='Your request was approved by',
                 sponsor_info_denied='Your request was denied by',
                 sponsor_info_pending='Your notification has been sent to',
                 sponsor_name='Sponsor Name',
                 sponsor_name_error='Please provide sponsor’s name',
                 sponsor_note_pending='Please wait for them to acknowledge.',
                 sponsor_status_approved='Your request was approved',
                 sponsor_status_denied='Your request was denied',
                 sponsor_status_pending='Notification Sent',
                 sponsor_submit='Notify Sponsor',
                 sponsors_auto_approved_note='Your notification has been sent to the sponsors."',
                 sponsors_error='Please select a sponsor',
                 tos=True,
                 tos_accept_label='I accept the Terms of Service',
                 tos_error='Please review and accept terms of service',
                 tos_link='Terms of Service',
                 tos_text='terms of service'):
        """Constructor for the PortalTemplate class"""

        # Initialize members of the class
        self.access_code_alternate_email = access_code_alternate_email 
        if alignment is not APIHelper.SKIP:
            self.alignment = alignment 
        self.auth_button_amazon = auth_button_amazon 
        self.auth_button_azure = auth_button_azure 
        self.auth_button_email = auth_button_email 
        self.auth_button_facebook = auth_button_facebook 
        self.auth_button_google = auth_button_google 
        self.auth_button_microsoft = auth_button_microsoft 
        if auth_button_passphrase is not APIHelper.SKIP:
            self.auth_button_passphrase = auth_button_passphrase 
        self.auth_button_sms = auth_button_sms 
        self.auth_button_sponsor = auth_button_sponsor 
        self.auth_label = auth_label 
        self.back_link = back_link 
        self.color = color 
        self.color_dark = color_dark 
        self.color_light = color_light 
        self.company = company 
        self.company_error = company_error 
        self.company_label = company_label 
        if created_time is not APIHelper.SKIP:
            self.created_time = created_time 
        self.email = email 
        self.email_access_domain_error = email_access_domain_error 
        self.email_cancel = email_cancel 
        self.email_code_error = email_code_error 
        self.email_error = email_error 
        self.email_field_label = email_field_label 
        self.email_label = email_label 
        self.email_message = email_message 
        self.email_submit = email_submit 
        self.email_title = email_title 
        self.field_1 = field_1 
        self.field_1_error = field_1_error 
        self.field_1_label = field_1_label 
        self.field_1_required = field_1_required 
        self.field_2 = field_2 
        self.field_2_error = field_2_error 
        self.field_2_label = field_2_label 
        self.field_2_required = field_2_required 
        self.field_3 = field_3 
        self.field_3_error = field_3_error 
        self.field_3_label = field_3_label 
        self.field_3_required = field_3_required 
        self.field_4 = field_4 
        self.field_4_error = field_4_error 
        self.field_4_label = field_4_label 
        self.field_4_required = field_4_required 
        if for_site is not APIHelper.SKIP:
            self.for_site = for_site 
        if id is not APIHelper.SKIP:
            self.id = id 
        self.message = message 
        if modified_time is not APIHelper.SKIP:
            self.modified_time = modified_time 
        self.name = name 
        self.name_error = name_error 
        self.name_label = name_label 
        if optout is not APIHelper.SKIP:
            self.optout = optout 
        self.optout_label = optout_label 
        if org_id is not APIHelper.SKIP:
            self.org_id = org_id 
        self.page_title = page_title 
        self.passphrase_cancel = passphrase_cancel 
        self.passphrase_error = passphrase_error 
        self.passphrase_label = passphrase_label 
        self.passphrase_message = passphrase_message 
        self.passphrase_submit = passphrase_submit 
        self.passphrase_title = passphrase_title 
        self.powered_by = powered_by 
        self.required_field_label = required_field_label 
        self.sign_in_label = sign_in_label 
        if site_id is not APIHelper.SKIP:
            self.site_id = site_id 
        self.sms_carrier_default = sms_carrier_default 
        self.sms_carrier_error = sms_carrier_error 
        self.sms_carrier_field_label = sms_carrier_field_label 
        self.sms_code_cancel = sms_code_cancel 
        self.sms_code_error = sms_code_error 
        self.sms_code_field_label = sms_code_field_label 
        self.sms_code_message = sms_code_message 
        self.sms_code_submit = sms_code_submit 
        self.sms_code_title = sms_code_title 
        if sms_country_field_label is not APIHelper.SKIP:
            self.sms_country_field_label = sms_country_field_label 
        self.sms_country_format = sms_country_format 
        self.sms_have_access_code = sms_have_access_code 
        self.sms_message_format = sms_message_format 
        self.sms_number_cancel = sms_number_cancel 
        self.sms_number_error = sms_number_error 
        self.sms_number_field_label = sms_number_field_label 
        self.sms_number_format = sms_number_format 
        self.sms_number_message = sms_number_message 
        self.sms_number_submit = sms_number_submit 
        self.sms_number_title = sms_number_title 
        self.sms_username_format = sms_username_format 
        self.sms_validity_duration = sms_validity_duration 
        self.sponsor_auto_approved = sponsor_auto_approved 
        self.sponsor_auto_approved_note = sponsor_auto_approved_note 
        self.sponsor_back_link = sponsor_back_link 
        self.sponsor_cancel = sponsor_cancel 
        self.sponsor_email = sponsor_email 
        self.sponsor_email_error = sponsor_email_error 
        if sponsor_email_template is not APIHelper.SKIP:
            self.sponsor_email_template = sponsor_email_template 
        self.sponsor_info_approved = sponsor_info_approved 
        self.sponsor_info_denied = sponsor_info_denied 
        self.sponsor_info_pending = sponsor_info_pending 
        self.sponsor_name = sponsor_name 
        self.sponsor_name_error = sponsor_name_error 
        self.sponsor_note_pending = sponsor_note_pending 
        self.sponsor_status_approved = sponsor_status_approved 
        self.sponsor_status_denied = sponsor_status_denied 
        self.sponsor_status_pending = sponsor_status_pending 
        self.sponsor_submit = sponsor_submit 
        self.sponsors_auto_approved_note = sponsors_auto_approved_note 
        self.sponsors_error = sponsors_error 
        self.tos = tos 
        self.tos_accept_label = tos_accept_label 
        self.tos_error = tos_error 
        self.tos_link = tos_link 
        self.tos_text = tos_text 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        page_title = dictionary.get("pageTitle") if dictionary.get("pageTitle") else 'Welcome'
        access_code_alternate_email = dictionary.get("accessCodeAlternateEmail") if dictionary.get("accessCodeAlternateEmail") else 'Please provide valid alternate email'
        alignment = dictionary.get("alignment") if dictionary.get("alignment") else APIHelper.SKIP
        auth_button_amazon = dictionary.get("authButtonAmazon") if dictionary.get("authButtonAmazon") else 'Sign in with Amazon'
        auth_button_azure = dictionary.get("authButtonAzure") if dictionary.get("authButtonAzure") else 'Sign in with Azure'
        auth_button_email = dictionary.get("authButtonEmail") if dictionary.get("authButtonEmail") else 'Sign in with Email'
        auth_button_facebook = dictionary.get("authButtonFacebook") if dictionary.get("authButtonFacebook") else 'Sign in with Facebook'
        auth_button_google = dictionary.get("authButtonGoogle") if dictionary.get("authButtonGoogle") else 'Sign in with Google'
        auth_button_microsoft = dictionary.get("authButtonMicrosoft") if dictionary.get("authButtonMicrosoft") else 'Sign in with Microsoft'
        auth_button_passphrase = dictionary.get("authButtonPassphrase") if dictionary.get("authButtonPassphrase") else APIHelper.SKIP
        auth_button_sms = dictionary.get("authButtonSms") if dictionary.get("authButtonSms") else 'Sign in with Text Message'
        auth_button_sponsor = dictionary.get("authButtonSponsor") if dictionary.get("authButtonSponsor") else 'Sign in as Guest'
        auth_label = dictionary.get("authLabel") if dictionary.get("authLabel") else '“Connect to WiFi with”'
        back_link = dictionary.get("backLink") if dictionary.get("backLink") else 'Go back and edit request form'
        color = dictionary.get("color") if dictionary.get("color") else '“#1074bc”'
        color_dark = dictionary.get("colorDark") if dictionary.get("colorDark") else '“#0b5183”'
        color_light = dictionary.get("colorLight") if dictionary.get("colorLight") else '“#3589c6”'
        company = dictionary.get("company") if dictionary.get("company") else False
        company_error = dictionary.get("companyError") if dictionary.get("companyError") else 'Please provide company name'
        company_label = dictionary.get("companyLabel") if dictionary.get("companyLabel") else 'Company'
        created_time = dictionary.get("created_time") if dictionary.get("created_time") else APIHelper.SKIP
        email = dictionary.get("email") if dictionary.get("email") else False
        email_access_domain_error = dictionary.get("emailAccessDomainError") if dictionary.get("emailAccessDomainError") else 'Access is restricted by email domain'
        email_cancel = dictionary.get("emailCancel") if dictionary.get("emailCancel") else 'Cancel'
        email_code_error = dictionary.get("emailCodeError") if dictionary.get("emailCodeError") else 'Please provide valid alternate email'
        email_error = dictionary.get("emailError") if dictionary.get("emailError") else 'Please provide valid email'
        email_field_label = dictionary.get("emailFieldLabel") if dictionary.get("emailFieldLabel") else 'Enter your email address'
        email_label = dictionary.get("emailLabel") if dictionary.get("emailLabel") else 'Email'
        email_message = dictionary.get("emailMessage") if dictionary.get("emailMessage") else 'We will email you an authentication code which you can use to connect to the WiFi network.'
        email_submit = dictionary.get("emailSubmit") if dictionary.get("emailSubmit") else '“Send Access Code”'
        email_title = dictionary.get("emailTitle") if dictionary.get("emailTitle") else '“Sign in with Email”'
        field_1 = dictionary.get("field1") if dictionary.get("field1") else False
        field_1_error = dictionary.get("field1Error") if dictionary.get("field1Error") else 'Please provide field1'
        field_1_label = dictionary.get("field1Label") if dictionary.get("field1Label") else 'Custom1'
        field_1_required = dictionary.get("field1Required") if dictionary.get("field1Required") else False
        field_2 = dictionary.get("field2") if dictionary.get("field2") else False
        field_2_error = dictionary.get("field2Error") if dictionary.get("field2Error") else 'Please provide field2'
        field_2_label = dictionary.get("field2Label") if dictionary.get("field2Label") else 'Custom2'
        field_2_required = dictionary.get("field2Required") if dictionary.get("field2Required") else False
        field_3 = dictionary.get("field3") if dictionary.get("field3") else False
        field_3_error = dictionary.get("field3Error") if dictionary.get("field3Error") else 'Please provide field3'
        field_3_label = dictionary.get("field3Label") if dictionary.get("field3Label") else 'Custom3'
        field_3_required = dictionary.get("field3Required") if dictionary.get("field3Required") else False
        field_4 = dictionary.get("field4") if dictionary.get("field4") else False
        field_4_error = dictionary.get("field4Error") if dictionary.get("field4Error") else 'Please provide field4'
        field_4_label = dictionary.get("field4Label") if dictionary.get("field4Label") else 'Custom4'
        field_4_required = dictionary.get("field4Required") if dictionary.get("field4Required") else False
        for_site = dictionary.get("for_site") if "for_site" in dictionary.keys() else APIHelper.SKIP
        id = dictionary.get("id") if dictionary.get("id") else APIHelper.SKIP
        message = dictionary.get("message") if dictionary.get("message") else 'Please enjoy the complimentary Wifi'
        modified_time = dictionary.get("modified_time") if dictionary.get("modified_time") else APIHelper.SKIP
        name = dictionary.get("name") if dictionary.get("name") else False
        name_error = dictionary.get("nameError") if dictionary.get("nameError") else 'Please provide your name'
        name_label = dictionary.get("nameLabel") if dictionary.get("nameLabel") else 'Name'
        optout = dictionary.get("optout") if "optout" in dictionary.keys() else APIHelper.SKIP
        optout_label = dictionary.get("optoutLabel") if dictionary.get("optoutLabel") else 'Do Not Store My Personal Information'
        org_id = dictionary.get("org_id") if dictionary.get("org_id") else APIHelper.SKIP
        passphrase_cancel = dictionary.get("passphraseCancel") if dictionary.get("passphraseCancel") else 'Cancel'
        passphrase_error = dictionary.get("passphraseError") if dictionary.get("passphraseError") else 'Invalid Passphrase'
        passphrase_label = dictionary.get("passphraseLabel") if dictionary.get("passphraseLabel") else 'Passphrase'
        passphrase_message = dictionary.get("passphraseMessage") if dictionary.get("passphraseMessage") else 'Login using passphrase'
        passphrase_submit = dictionary.get("passphraseSubmit") if dictionary.get("passphraseSubmit") else 'Sign in'
        passphrase_title = dictionary.get("passphraseTitle") if dictionary.get("passphraseTitle") else 'Sign in with Passphrase'
        powered_by = dictionary.get("poweredBy") if dictionary.get("poweredBy") else True
        required_field_label = dictionary.get("requiredFieldLabel") if dictionary.get("requiredFieldLabel") else 'required'
        sign_in_label = dictionary.get("signInLabel") if dictionary.get("signInLabel") else 'Sign In'
        site_id = dictionary.get("site_id") if dictionary.get("site_id") else APIHelper.SKIP
        sms_carrier_default = dictionary.get("smsCarrierDefault") if dictionary.get("smsCarrierDefault") else 'Please Select'
        sms_carrier_error = dictionary.get("smsCarrierError") if dictionary.get("smsCarrierError") else 'Please select a mobile carrier'
        sms_carrier_field_label = dictionary.get("smsCarrierFieldLabel") if dictionary.get("smsCarrierFieldLabel") else 'Mobile Carrier'
        sms_code_cancel = dictionary.get("smsCodeCancel") if dictionary.get("smsCodeCancel") else 'Cancel'
        sms_code_error = dictionary.get("smsCodeError") if dictionary.get("smsCodeError") else 'Invalid Access Code'
        sms_code_field_label = dictionary.get("smsCodeFieldLabel") if dictionary.get("smsCodeFieldLabel") else 'Confirmation Code'
        sms_code_message = dictionary.get("smsCodeMessage") if dictionary.get("smsCodeMessage") else 'Enter the confirmation code'
        sms_code_submit = dictionary.get("smsCodeSubmit") if dictionary.get("smsCodeSubmit") else 'Submit Code'
        sms_code_title = dictionary.get("smsCodeTitle") if dictionary.get("smsCodeTitle") else 'Access Code'
        sms_country_field_label = dictionary.get("smsCountryFieldLabel") if dictionary.get("smsCountryFieldLabel") else APIHelper.SKIP
        sms_country_format = dictionary.get("smsCountryFormat") if dictionary.get("smsCountryFormat") else '“+1”'
        sms_have_access_code = dictionary.get("smsHaveAccessCode") if dictionary.get("smsHaveAccessCode") else 'I have an access code'
        sms_message_format = dictionary.get("smsMessageFormat") if dictionary.get("smsMessageFormat") else 'Code {{code}} expires in {{duration}} minutes.'
        sms_number_cancel = dictionary.get("smsNumberCancel") if dictionary.get("smsNumberCancel") else 'Cancel'
        sms_number_error = dictionary.get("smsNumberError") if dictionary.get("smsNumberError") else 'Invalid Mobile Number'
        sms_number_field_label = dictionary.get("smsNumberFieldLabel") if dictionary.get("smsNumberFieldLabel") else 'Mobile Number'
        sms_number_format = dictionary.get("smsNumberFormat") if dictionary.get("smsNumberFormat") else '“2125551212 (digits only)”'
        sms_number_message = dictionary.get("smsNumberMessage") if dictionary.get("smsNumberMessage") else 'We will send an access code to your mobile number which you can use to connect to the WiFi network. Message and data rates may apply.'
        sms_number_submit = dictionary.get("smsNumberSubmit") if dictionary.get("smsNumberSubmit") else 'Sign In'
        sms_number_title = dictionary.get("smsNumberTitle") if dictionary.get("smsNumberTitle") else 'Text Message Confirmation'
        sms_username_format = dictionary.get("smsUsernameFormat") if dictionary.get("smsUsernameFormat") else 'username'
        sms_validity_duration = dictionary.get("smsValidityDuration") if dictionary.get("smsValidityDuration") else 5
        sponsor_auto_approved = dictionary.get("sponsorAutoApproved") if dictionary.get("sponsorAutoApproved") else 'Your request was approved.'
        sponsor_auto_approved_note = dictionary.get("sponsorAutoApprovedNote") if dictionary.get("sponsorAutoApprovedNote") else 'Your notification has been sent to'
        sponsor_back_link = dictionary.get("sponsorBackLink") if dictionary.get("sponsorBackLink") else 'Go back and edit request form'
        sponsor_cancel = dictionary.get("sponsorCancel") if dictionary.get("sponsorCancel") else 'Cancel'
        sponsor_email = dictionary.get("sponsorEmail") if dictionary.get("sponsorEmail") else 'Please provide valid sponsor email'
        sponsor_email_error = dictionary.get("sponsorEmailError") if dictionary.get("sponsorEmailError") else 'Please provide valid sponsor email'
        sponsor_email_template = dictionary.get("sponsorEmailTemplate") if dictionary.get("sponsorEmailTemplate") else APIHelper.SKIP
        sponsor_info_approved = dictionary.get("sponsorInfoApproved") if dictionary.get("sponsorInfoApproved") else 'Your request was approved by'
        sponsor_info_denied = dictionary.get("sponsorInfoDenied") if dictionary.get("sponsorInfoDenied") else 'Your request was denied by'
        sponsor_info_pending = dictionary.get("sponsorInfoPending") if dictionary.get("sponsorInfoPending") else 'Your notification has been sent to'
        sponsor_name = dictionary.get("sponsorName") if dictionary.get("sponsorName") else 'Sponsor Name'
        sponsor_name_error = dictionary.get("sponsorNameError") if dictionary.get("sponsorNameError") else 'Please provide sponsor’s name'
        sponsor_note_pending = dictionary.get("sponsorNotePending") if dictionary.get("sponsorNotePending") else 'Please wait for them to acknowledge.'
        sponsor_status_approved = dictionary.get("sponsorStatusApproved") if dictionary.get("sponsorStatusApproved") else 'Your request was approved'
        sponsor_status_denied = dictionary.get("sponsorStatusDenied") if dictionary.get("sponsorStatusDenied") else 'Your request was denied'
        sponsor_status_pending = dictionary.get("sponsorStatusPending") if dictionary.get("sponsorStatusPending") else 'Notification Sent'
        sponsor_submit = dictionary.get("sponsorSubmit") if dictionary.get("sponsorSubmit") else 'Notify Sponsor'
        sponsors_auto_approved_note = dictionary.get("sponsorsAutoApprovedNote") if dictionary.get("sponsorsAutoApprovedNote") else 'Your notification has been sent to the sponsors."'
        sponsors_error = dictionary.get("sponsorsError") if dictionary.get("sponsorsError") else 'Please select a sponsor'
        tos = dictionary.get("tos") if dictionary.get("tos") else True
        tos_accept_label = dictionary.get("tosAcceptLabel") if dictionary.get("tosAcceptLabel") else 'I accept the Terms of Service'
        tos_error = dictionary.get("tosError") if dictionary.get("tosError") else 'Please review and accept terms of service'
        tos_link = dictionary.get("tosLink") if dictionary.get("tosLink") else 'Terms of Service'
        tos_text = dictionary.get("tosText") if dictionary.get("tosText") else 'terms of service'
        # Return an object of this model
        return cls(page_title,
                   access_code_alternate_email,
                   alignment,
                   auth_button_amazon,
                   auth_button_azure,
                   auth_button_email,
                   auth_button_facebook,
                   auth_button_google,
                   auth_button_microsoft,
                   auth_button_passphrase,
                   auth_button_sms,
                   auth_button_sponsor,
                   auth_label,
                   back_link,
                   color,
                   color_dark,
                   color_light,
                   company,
                   company_error,
                   company_label,
                   created_time,
                   email,
                   email_access_domain_error,
                   email_cancel,
                   email_code_error,
                   email_error,
                   email_field_label,
                   email_label,
                   email_message,
                   email_submit,
                   email_title,
                   field_1,
                   field_1_error,
                   field_1_label,
                   field_1_required,
                   field_2,
                   field_2_error,
                   field_2_label,
                   field_2_required,
                   field_3,
                   field_3_error,
                   field_3_label,
                   field_3_required,
                   field_4,
                   field_4_error,
                   field_4_label,
                   field_4_required,
                   for_site,
                   id,
                   message,
                   modified_time,
                   name,
                   name_error,
                   name_label,
                   optout,
                   optout_label,
                   org_id,
                   passphrase_cancel,
                   passphrase_error,
                   passphrase_label,
                   passphrase_message,
                   passphrase_submit,
                   passphrase_title,
                   powered_by,
                   required_field_label,
                   sign_in_label,
                   site_id,
                   sms_carrier_default,
                   sms_carrier_error,
                   sms_carrier_field_label,
                   sms_code_cancel,
                   sms_code_error,
                   sms_code_field_label,
                   sms_code_message,
                   sms_code_submit,
                   sms_code_title,
                   sms_country_field_label,
                   sms_country_format,
                   sms_have_access_code,
                   sms_message_format,
                   sms_number_cancel,
                   sms_number_error,
                   sms_number_field_label,
                   sms_number_format,
                   sms_number_message,
                   sms_number_submit,
                   sms_number_title,
                   sms_username_format,
                   sms_validity_duration,
                   sponsor_auto_approved,
                   sponsor_auto_approved_note,
                   sponsor_back_link,
                   sponsor_cancel,
                   sponsor_email,
                   sponsor_email_error,
                   sponsor_email_template,
                   sponsor_info_approved,
                   sponsor_info_denied,
                   sponsor_info_pending,
                   sponsor_name,
                   sponsor_name_error,
                   sponsor_note_pending,
                   sponsor_status_approved,
                   sponsor_status_denied,
                   sponsor_status_pending,
                   sponsor_submit,
                   sponsors_auto_approved_note,
                   sponsors_error,
                   tos,
                   tos_accept_label,
                   tos_error,
                   tos_link,
                   tos_text)
