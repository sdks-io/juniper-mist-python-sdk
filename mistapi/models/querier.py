# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mistapi.api_helper import APIHelper


class Querier(object):

    """Implementation of the 'Querier' model.

    TODO: type model description here.

    Attributes:
        max_response_time (int): querier’s query response interval, in
            tenths-of-seconds
        mtu (int): the MTU we use (needed when forming large IGMPv3 Reports)
        query_interval (int): querier’s query interval, in seconds
        robustness (int): querier’s robustness
        version (int): querier’s maximum protocol version

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "max_response_time": 'max_response_time',
        "mtu": 'mtu',
        "query_interval": 'query_interval',
        "robustness": 'robustness',
        "version": 'version'
    }

    _optionals = [
        'max_response_time',
        'mtu',
        'query_interval',
        'robustness',
        'version',
    ]

    def __init__(self,
                 max_response_time=APIHelper.SKIP,
                 mtu=APIHelper.SKIP,
                 query_interval=APIHelper.SKIP,
                 robustness=APIHelper.SKIP,
                 version=APIHelper.SKIP):
        """Constructor for the Querier class"""

        # Initialize members of the class
        if max_response_time is not APIHelper.SKIP:
            self.max_response_time = max_response_time 
        if mtu is not APIHelper.SKIP:
            self.mtu = mtu 
        if query_interval is not APIHelper.SKIP:
            self.query_interval = query_interval 
        if robustness is not APIHelper.SKIP:
            self.robustness = robustness 
        if version is not APIHelper.SKIP:
            self.version = version 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        max_response_time = dictionary.get("max_response_time") if dictionary.get("max_response_time") else APIHelper.SKIP
        mtu = dictionary.get("mtu") if dictionary.get("mtu") else APIHelper.SKIP
        query_interval = dictionary.get("query_interval") if dictionary.get("query_interval") else APIHelper.SKIP
        robustness = dictionary.get("robustness") if dictionary.get("robustness") else APIHelper.SKIP
        version = dictionary.get("version") if dictionary.get("version") else APIHelper.SKIP
        # Return an object of this model
        return cls(max_response_time,
                   mtu,
                   query_interval,
                   robustness,
                   version)
