# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mistapi.api_helper import APIHelper


class DslConfig(object):

    """Implementation of the 'DslConfig' model.

    if `wan_type`==`dsl`

    Attributes:
        ppoe_auth (PpoeAuthEnum): TODO: type description here.
        ppoe_password (string): TODO: type description here.
        ppoe_username (string): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "ppoe_auth": 'ppoe_auth',
        "ppoe_password": 'ppoe_password',
        "ppoe_username": 'ppoe_username'
    }

    _optionals = [
        'ppoe_auth',
        'ppoe_password',
        'ppoe_username',
    ]

    def __init__(self,
                 ppoe_auth='none',
                 ppoe_password=APIHelper.SKIP,
                 ppoe_username=APIHelper.SKIP):
        """Constructor for the DslConfig class"""

        # Initialize members of the class
        self.ppoe_auth = ppoe_auth 
        if ppoe_password is not APIHelper.SKIP:
            self.ppoe_password = ppoe_password 
        if ppoe_username is not APIHelper.SKIP:
            self.ppoe_username = ppoe_username 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        ppoe_auth = dictionary.get("ppoe_auth") if dictionary.get("ppoe_auth") else 'none'
        ppoe_password = dictionary.get("ppoe_password") if dictionary.get("ppoe_password") else APIHelper.SKIP
        ppoe_username = dictionary.get("ppoe_username") if dictionary.get("ppoe_username") else APIHelper.SKIP
        # Return an object of this model
        return cls(ppoe_auth,
                   ppoe_password,
                   ppoe_username)
