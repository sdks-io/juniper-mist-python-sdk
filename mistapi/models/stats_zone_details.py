# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mistapi.api_helper import APIHelper
from mistapi.models.client_waits import ClientWaits


class StatsZoneDetails(object):

    """Implementation of the 'stats_zone_details' model.

    Zone details statistics

    Attributes:
        assets (list of string): list of ble assets currently in the zone and
            when they entered
        client_waits (ClientWaits): client wait time right now
        clients (list of string): list of clients currently in the zone and
            when they entered
        id (uuid|string): id of the zone
        map_id (uuid|string): map_id of the zone
        name (string): name of the zone
        num_clients (int): TODO: type description here.
        num_sdkclients (int): sdkclient wait time right now
        sdkclients (list of string): list of sdkclients currently in the zone
            and when they entered

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "client_waits": 'client_waits',
        "id": 'id',
        "map_id": 'map_id',
        "name": 'name',
        "num_clients": 'num_clients',
        "num_sdkclients": 'num_sdkclients',
        "assets": 'assets',
        "clients": 'clients',
        "sdkclients": 'sdkclients'
    }

    _optionals = [
        'assets',
        'clients',
        'sdkclients',
    ]

    def __init__(self,
                 client_waits=None,
                 id=None,
                 map_id=None,
                 name=None,
                 num_clients=None,
                 num_sdkclients=None,
                 assets=APIHelper.SKIP,
                 clients=APIHelper.SKIP,
                 sdkclients=APIHelper.SKIP):
        """Constructor for the StatsZoneDetails class"""

        # Initialize members of the class
        if assets is not APIHelper.SKIP:
            self.assets = assets 
        self.client_waits = client_waits 
        if clients is not APIHelper.SKIP:
            self.clients = clients 
        self.id = id 
        self.map_id = map_id 
        self.name = name 
        self.num_clients = num_clients 
        self.num_sdkclients = num_sdkclients 
        if sdkclients is not APIHelper.SKIP:
            self.sdkclients = sdkclients 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        client_waits = ClientWaits.from_dictionary(dictionary.get('client_waits')) if dictionary.get('client_waits') else None
        id = dictionary.get("id") if dictionary.get("id") else None
        map_id = dictionary.get("map_id") if dictionary.get("map_id") else None
        name = dictionary.get("name") if dictionary.get("name") else None
        num_clients = dictionary.get("num_clients") if dictionary.get("num_clients") else None
        num_sdkclients = dictionary.get("num_sdkclients") if dictionary.get("num_sdkclients") else None
        assets = dictionary.get("assets") if dictionary.get("assets") else APIHelper.SKIP
        clients = dictionary.get("clients") if dictionary.get("clients") else APIHelper.SKIP
        sdkclients = dictionary.get("sdkclients") if dictionary.get("sdkclients") else APIHelper.SKIP
        # Return an object of this model
        return cls(client_waits,
                   id,
                   map_id,
                   name,
                   num_clients,
                   num_sdkclients,
                   assets,
                   clients,
                   sdkclients)
