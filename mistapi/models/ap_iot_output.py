# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mistapi.api_helper import APIHelper


class ApIotOutput(object):

    """Implementation of the 'ap_iot_output' model.

    IoT output AP settings

    Attributes:
        enabled (bool): whether to enable a pin
        name (string): optional; descriptive pin name
        output (bool): whether the pin is configured as an output. DO and
            A1-A4 can be repurposed by changing
        pullup (PullupEnum): the type of pull-up the pin uses (internal,
            external, none), default none
        value (int): output pin signal level, default 0

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "enabled": 'enabled',
        "name": 'name',
        "output": 'output',
        "pullup": 'pullup',
        "value": 'value'
    }

    _optionals = [
        'enabled',
        'name',
        'output',
        'pullup',
        'value',
    ]

    def __init__(self,
                 enabled=False,
                 name=APIHelper.SKIP,
                 output=APIHelper.SKIP,
                 pullup=APIHelper.SKIP,
                 value=APIHelper.SKIP):
        """Constructor for the ApIotOutput class"""

        # Initialize members of the class
        self.enabled = enabled 
        if name is not APIHelper.SKIP:
            self.name = name 
        if output is not APIHelper.SKIP:
            self.output = output 
        if pullup is not APIHelper.SKIP:
            self.pullup = pullup 
        if value is not APIHelper.SKIP:
            self.value = value 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        enabled = dictionary.get("enabled") if dictionary.get("enabled") else False
        name = dictionary.get("name") if dictionary.get("name") else APIHelper.SKIP
        output = dictionary.get("output") if "output" in dictionary.keys() else APIHelper.SKIP
        pullup = dictionary.get("pullup") if dictionary.get("pullup") else APIHelper.SKIP
        value = dictionary.get("value") if dictionary.get("value") else APIHelper.SKIP
        # Return an object of this model
        return cls(enabled,
                   name,
                   output,
                   pullup,
                   value)
