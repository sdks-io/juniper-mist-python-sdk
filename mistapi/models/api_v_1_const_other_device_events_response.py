# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mistapi.api_helper import APIHelper
from mistapi.models.event_otherdevice import EventOtherdevice


class ApiV1ConstOtherDeviceEventsResponse(object):

    """Implementation of the 'Api V1 Const Other Device Events Response' model.

    TODO: type model description here.

    Attributes:
        display (string): TODO: type description here.
        example (EventOtherdevice): TODO: type description here.
        key (string): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "display": 'display',
        "example": 'example',
        "key": 'key'
    }

    _optionals = [
        'display',
        'example',
        'key',
    ]

    def __init__(self,
                 display=APIHelper.SKIP,
                 example=APIHelper.SKIP,
                 key=APIHelper.SKIP):
        """Constructor for the ApiV1ConstOtherDeviceEventsResponse class"""

        # Initialize members of the class
        if display is not APIHelper.SKIP:
            self.display = display 
        if example is not APIHelper.SKIP:
            self.example = example 
        if key is not APIHelper.SKIP:
            self.key = key 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        display = dictionary.get("display") if dictionary.get("display") else APIHelper.SKIP
        example = EventOtherdevice.from_dictionary(dictionary.get('example')) if 'example' in dictionary.keys() else APIHelper.SKIP
        key = dictionary.get("key") if dictionary.get("key") else APIHelper.SKIP
        # Return an object of this model
        return cls(display,
                   example,
                   key)
