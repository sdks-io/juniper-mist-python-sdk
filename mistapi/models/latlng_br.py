# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mistapi.api_helper import APIHelper


class LatlngBr(object):

    """Implementation of the 'LatlngBr' model.

    when type=google, latitude / longitude of the bottom-right corner

    Attributes:
        lat (string): TODO: type description here.
        lng (string): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "lat": 'lat',
        "lng": 'lng'
    }

    _optionals = [
        'lat',
        'lng',
    ]

    def __init__(self,
                 lat=APIHelper.SKIP,
                 lng=APIHelper.SKIP):
        """Constructor for the LatlngBr class"""

        # Initialize members of the class
        if lat is not APIHelper.SKIP:
            self.lat = lat 
        if lng is not APIHelper.SKIP:
            self.lng = lng 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        lat = dictionary.get("lat") if dictionary.get("lat") else APIHelper.SKIP
        lng = dictionary.get("lng") if dictionary.get("lng") else APIHelper.SKIP
        # Return an object of this model
        return cls(lat,
                   lng)
