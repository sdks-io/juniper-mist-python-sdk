# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mistapi.api_helper import APIHelper


class SiteAutoUpgrade(object):

    """Implementation of the 'site_auto_upgrade' model.

    Auto Upgrade Settings

    Attributes:
        custom_versions (dict): custom versions for different models. The
            property key is the model name (e.g. "AP41")
        day_of_week (DayOfWeekEnum): TODO: type description here.
        enabled (bool): whether auto upgrade should happen (Note that Mist may
            auto-upgrade if the version is not supported)
        time_of_day (string): any / HH:MM (24-hour format), upgrade will
            happen within up to 1-hour from this time
        version (Version2Enum): desired version

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "custom_versions": 'custom_versions',
        "day_of_week": 'day_of_week',
        "enabled": 'enabled',
        "time_of_day": 'time_of_day',
        "version": 'version'
    }

    _optionals = [
        'custom_versions',
        'day_of_week',
        'enabled',
        'time_of_day',
        'version',
    ]

    _nullables = [
        'day_of_week',
    ]

    def __init__(self,
                 custom_versions=APIHelper.SKIP,
                 day_of_week=APIHelper.SKIP,
                 enabled=False,
                 time_of_day=APIHelper.SKIP,
                 version='stable'):
        """Constructor for the SiteAutoUpgrade class"""

        # Initialize members of the class
        if custom_versions is not APIHelper.SKIP:
            self.custom_versions = custom_versions 
        if day_of_week is not APIHelper.SKIP:
            self.day_of_week = day_of_week 
        self.enabled = enabled 
        if time_of_day is not APIHelper.SKIP:
            self.time_of_day = time_of_day 
        self.version = version 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        custom_versions = dictionary.get("custom_versions") if dictionary.get("custom_versions") else APIHelper.SKIP
        day_of_week = dictionary.get("day_of_week") if "day_of_week" in dictionary.keys() else APIHelper.SKIP
        enabled = dictionary.get("enabled") if dictionary.get("enabled") else False
        time_of_day = dictionary.get("time_of_day") if dictionary.get("time_of_day") else APIHelper.SKIP
        version = dictionary.get("version") if dictionary.get("version") else 'stable'
        # Return an object of this model
        return cls(custom_versions,
                   day_of_week,
                   enabled,
                   time_of_day,
                   version)
