# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mistapi.api_helper import APIHelper


class AcctServer1(object):

    """Implementation of the 'AcctServer1' model.

    TODO: type model description here.

    Attributes:
        host (string): ip / hostname of RADIUS server
        port (int): Acct port of RADIUS server
        secret (string): secret of RADIUS server
        ssids (list of string): list of ssids that will use this server if
            match_ssid is true and match is found

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "host": 'host',
        "port": 'port',
        "secret": 'secret',
        "ssids": 'ssids'
    }

    _optionals = [
        'host',
        'port',
        'secret',
        'ssids',
    ]

    def __init__(self,
                 host=APIHelper.SKIP,
                 port=1813,
                 secret=APIHelper.SKIP,
                 ssids=APIHelper.SKIP):
        """Constructor for the AcctServer1 class"""

        # Initialize members of the class
        if host is not APIHelper.SKIP:
            self.host = host 
        self.port = port 
        if secret is not APIHelper.SKIP:
            self.secret = secret 
        if ssids is not APIHelper.SKIP:
            self.ssids = ssids 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        host = dictionary.get("host") if dictionary.get("host") else APIHelper.SKIP
        port = dictionary.get("port") if dictionary.get("port") else 1813
        secret = dictionary.get("secret") if dictionary.get("secret") else APIHelper.SKIP
        ssids = dictionary.get("ssids") if dictionary.get("ssids") else APIHelper.SKIP
        # Return an object of this model
        return cls(host,
                   port,
                   secret,
                   ssids)
