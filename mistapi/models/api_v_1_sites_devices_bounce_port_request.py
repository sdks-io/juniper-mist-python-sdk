# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mistapi.api_helper import APIHelper


class ApiV1SitesDevicesBouncePortRequest(object):

    """Implementation of the 'Api V1 Sites Devices Bounce Port Request' model.

    TODO: type model description here.

    Attributes:
        port (string): the port to bounce
        ports (list of string): list of ports to bounce

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "port": 'port',
        "ports": 'ports'
    }

    _optionals = [
        'port',
        'ports',
    ]

    def __init__(self,
                 port=APIHelper.SKIP,
                 ports=APIHelper.SKIP):
        """Constructor for the ApiV1SitesDevicesBouncePortRequest class"""

        # Initialize members of the class
        if port is not APIHelper.SKIP:
            self.port = port 
        if ports is not APIHelper.SKIP:
            self.ports = ports 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        port = dictionary.get("port") if dictionary.get("port") else APIHelper.SKIP
        ports = dictionary.get("ports") if dictionary.get("ports") else APIHelper.SKIP
        # Return an object of this model
        return cls(port,
                   ports)
