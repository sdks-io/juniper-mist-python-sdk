# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mistapi.api_helper import APIHelper


class PcapStatus(object):

    """Implementation of the 'PcapStatus' model.

    TODO: type model description here.

    Attributes:
        ap_mac (string): TODO: type description here.
        aps (list of string): List of target APs to capture packets
        client_mac (string): TODO: type description here.
        duration (int): TODO: type description here.
        failed (list of string): List of APs where configuration attempt
            failed
        gateways (list of string): List of target Gateways to capture packets
            if a gateway capture type is specified
        id (uuid|string): unique id for the capture
        includes_mcast (bool): TODO: type description here.
        max_num_packets (int): max number of packets configured by user
        max_pkt_len (int): TODO: type description here.
        num_packets (int): total number of packets captured by all AP, not
            applicable for type [client, new_assoc]
        ok (list of string): List of target APs successfully configured to
            capture packets
        radiotap_tcpdump_expression (string): when `type`==`radiotap`,
            radiotap_tcpdump_expression expression provided by the user
        scan_tcpdump_expression (string): when `type`==`scan`,
            scan_tcpdump_expression provided by the user
        ssid (string): TODO: type description here.
        started_time (int): TODO: type description here.
        tcpdump_expression (string): tcpdump expression provided by the user
            (common)
        mtype (Type59Enum): TODO: type description here.
        wired_tcpdump_expression (string): when `type`==`wired`,
            wired_tcpdump_expression provided by the user
        wireless_tcpdump_expression (string): when `type`==`‘wireless’`,
            wireless_tcpdump_expression provided by the user

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "id": 'id',
        "mtype": 'type',
        "ap_mac": 'ap_mac',
        "aps": 'aps',
        "client_mac": 'client_mac',
        "duration": 'duration',
        "failed": 'failed',
        "gateways": 'gateways',
        "includes_mcast": 'includes_mcast',
        "max_num_packets": 'max_num_packets',
        "max_pkt_len": 'max_pkt_len',
        "num_packets": 'num_packets',
        "ok": 'ok',
        "radiotap_tcpdump_expression": 'radiotap_tcpdump_expression',
        "scan_tcpdump_expression": 'scan_tcpdump_expression',
        "ssid": 'ssid',
        "started_time": 'started_time',
        "tcpdump_expression": 'tcpdump_expression',
        "wired_tcpdump_expression": 'wired_tcpdump_expression',
        "wireless_tcpdump_expression": 'wireless_tcpdump_expression'
    }

    _optionals = [
        'ap_mac',
        'aps',
        'client_mac',
        'duration',
        'failed',
        'gateways',
        'includes_mcast',
        'max_num_packets',
        'max_pkt_len',
        'num_packets',
        'ok',
        'radiotap_tcpdump_expression',
        'scan_tcpdump_expression',
        'ssid',
        'started_time',
        'tcpdump_expression',
        'wired_tcpdump_expression',
        'wireless_tcpdump_expression',
    ]

    _nullables = [
        'ap_mac',
        'client_mac',
        'ssid',
    ]

    def __init__(self,
                 id=None,
                 mtype=None,
                 ap_mac=APIHelper.SKIP,
                 aps=APIHelper.SKIP,
                 client_mac=APIHelper.SKIP,
                 duration=APIHelper.SKIP,
                 failed=APIHelper.SKIP,
                 gateways=APIHelper.SKIP,
                 includes_mcast=APIHelper.SKIP,
                 max_num_packets=APIHelper.SKIP,
                 max_pkt_len=APIHelper.SKIP,
                 num_packets=APIHelper.SKIP,
                 ok=APIHelper.SKIP,
                 radiotap_tcpdump_expression=APIHelper.SKIP,
                 scan_tcpdump_expression=APIHelper.SKIP,
                 ssid=APIHelper.SKIP,
                 started_time=APIHelper.SKIP,
                 tcpdump_expression=APIHelper.SKIP,
                 wired_tcpdump_expression=APIHelper.SKIP,
                 wireless_tcpdump_expression=APIHelper.SKIP):
        """Constructor for the PcapStatus class"""

        # Initialize members of the class
        if ap_mac is not APIHelper.SKIP:
            self.ap_mac = ap_mac 
        if aps is not APIHelper.SKIP:
            self.aps = aps 
        if client_mac is not APIHelper.SKIP:
            self.client_mac = client_mac 
        if duration is not APIHelper.SKIP:
            self.duration = duration 
        if failed is not APIHelper.SKIP:
            self.failed = failed 
        if gateways is not APIHelper.SKIP:
            self.gateways = gateways 
        self.id = id 
        if includes_mcast is not APIHelper.SKIP:
            self.includes_mcast = includes_mcast 
        if max_num_packets is not APIHelper.SKIP:
            self.max_num_packets = max_num_packets 
        if max_pkt_len is not APIHelper.SKIP:
            self.max_pkt_len = max_pkt_len 
        if num_packets is not APIHelper.SKIP:
            self.num_packets = num_packets 
        if ok is not APIHelper.SKIP:
            self.ok = ok 
        if radiotap_tcpdump_expression is not APIHelper.SKIP:
            self.radiotap_tcpdump_expression = radiotap_tcpdump_expression 
        if scan_tcpdump_expression is not APIHelper.SKIP:
            self.scan_tcpdump_expression = scan_tcpdump_expression 
        if ssid is not APIHelper.SKIP:
            self.ssid = ssid 
        if started_time is not APIHelper.SKIP:
            self.started_time = started_time 
        if tcpdump_expression is not APIHelper.SKIP:
            self.tcpdump_expression = tcpdump_expression 
        self.mtype = mtype 
        if wired_tcpdump_expression is not APIHelper.SKIP:
            self.wired_tcpdump_expression = wired_tcpdump_expression 
        if wireless_tcpdump_expression is not APIHelper.SKIP:
            self.wireless_tcpdump_expression = wireless_tcpdump_expression 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        id = dictionary.get("id") if dictionary.get("id") else None
        mtype = dictionary.get("type") if dictionary.get("type") else None
        ap_mac = dictionary.get("ap_mac") if "ap_mac" in dictionary.keys() else APIHelper.SKIP
        aps = dictionary.get("aps") if dictionary.get("aps") else APIHelper.SKIP
        client_mac = dictionary.get("client_mac") if "client_mac" in dictionary.keys() else APIHelper.SKIP
        duration = dictionary.get("duration") if dictionary.get("duration") else APIHelper.SKIP
        failed = dictionary.get("failed") if dictionary.get("failed") else APIHelper.SKIP
        gateways = dictionary.get("gateways") if dictionary.get("gateways") else APIHelper.SKIP
        includes_mcast = dictionary.get("includes_mcast") if "includes_mcast" in dictionary.keys() else APIHelper.SKIP
        max_num_packets = dictionary.get("max_num_packets") if dictionary.get("max_num_packets") else APIHelper.SKIP
        max_pkt_len = dictionary.get("max_pkt_len") if dictionary.get("max_pkt_len") else APIHelper.SKIP
        num_packets = dictionary.get("num_packets") if dictionary.get("num_packets") else APIHelper.SKIP
        ok = dictionary.get("ok") if dictionary.get("ok") else APIHelper.SKIP
        radiotap_tcpdump_expression = dictionary.get("radiotap_tcpdump_expression") if dictionary.get("radiotap_tcpdump_expression") else APIHelper.SKIP
        scan_tcpdump_expression = dictionary.get("scan_tcpdump_expression") if dictionary.get("scan_tcpdump_expression") else APIHelper.SKIP
        ssid = dictionary.get("ssid") if "ssid" in dictionary.keys() else APIHelper.SKIP
        started_time = dictionary.get("started_time") if dictionary.get("started_time") else APIHelper.SKIP
        tcpdump_expression = dictionary.get("tcpdump_expression") if dictionary.get("tcpdump_expression") else APIHelper.SKIP
        wired_tcpdump_expression = dictionary.get("wired_tcpdump_expression") if dictionary.get("wired_tcpdump_expression") else APIHelper.SKIP
        wireless_tcpdump_expression = dictionary.get("wireless_tcpdump_expression") if dictionary.get("wireless_tcpdump_expression") else APIHelper.SKIP
        # Return an object of this model
        return cls(id,
                   mtype,
                   ap_mac,
                   aps,
                   client_mac,
                   duration,
                   failed,
                   gateways,
                   includes_mcast,
                   max_num_packets,
                   max_pkt_len,
                   num_packets,
                   ok,
                   radiotap_tcpdump_expression,
                   scan_tcpdump_expression,
                   ssid,
                   started_time,
                   tcpdump_expression,
                   wired_tcpdump_expression,
                   wireless_tcpdump_expression)
