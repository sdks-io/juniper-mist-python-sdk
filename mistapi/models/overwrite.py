# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mistapi.api_helper import APIHelper
from mistapi.models.matching import Matching


class Overwrite(object):

    """Implementation of the 'Overwrite' model.

    TODO: type model description here.

    Attributes:
        action (Action2Enum): - alert (default)  - drop: siliently dropping
            packets - close: notify client/server to close connection
        matching (Matching): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "action": 'action',
        "matching": 'matching'
    }

    _optionals = [
        'action',
        'matching',
    ]

    def __init__(self,
                 action='alert',
                 matching=APIHelper.SKIP):
        """Constructor for the Overwrite class"""

        # Initialize members of the class
        self.action = action 
        if matching is not APIHelper.SKIP:
            self.matching = matching 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        action = dictionary.get("action") if dictionary.get("action") else 'alert'
        matching = Matching.from_dictionary(dictionary.get('matching')) if 'matching' in dictionary.keys() else APIHelper.SKIP
        # Return an object of this model
        return cls(action,
                   matching)
