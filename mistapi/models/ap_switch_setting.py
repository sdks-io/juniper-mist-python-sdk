# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mistapi.api_helper import APIHelper


class ApSwitchSetting(object):

    """Implementation of the 'ap_switch_setting' model.

    TODO: type model description here.

    Attributes:
        additional_vlan_ids (list of int): additional VLAN IDs, only valid in
            mesh base mode
        enable_vlan (bool): TODO: type description here.
        port_vlan_id (object): native VLAN id, optional
        vlan_ids (list of int): list of VLAN ids this

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "additional_vlan_ids": 'additional_vlan_ids',
        "enable_vlan": 'enable_vlan',
        "port_vlan_id": 'port_vlan_id',
        "vlan_ids": 'vlan_ids'
    }

    _optionals = [
        'additional_vlan_ids',
        'enable_vlan',
        'port_vlan_id',
        'vlan_ids',
    ]

    def __init__(self,
                 additional_vlan_ids=APIHelper.SKIP,
                 enable_vlan=APIHelper.SKIP,
                 port_vlan_id=APIHelper.SKIP,
                 vlan_ids=APIHelper.SKIP):
        """Constructor for the ApSwitchSetting class"""

        # Initialize members of the class
        if additional_vlan_ids is not APIHelper.SKIP:
            self.additional_vlan_ids = additional_vlan_ids 
        if enable_vlan is not APIHelper.SKIP:
            self.enable_vlan = enable_vlan 
        if port_vlan_id is not APIHelper.SKIP:
            self.port_vlan_id = port_vlan_id 
        if vlan_ids is not APIHelper.SKIP:
            self.vlan_ids = vlan_ids 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        additional_vlan_ids = dictionary.get("additional_vlan_ids") if dictionary.get("additional_vlan_ids") else APIHelper.SKIP
        enable_vlan = dictionary.get("enable_vlan") if "enable_vlan" in dictionary.keys() else APIHelper.SKIP
        port_vlan_id = dictionary.get("port_vlan_id") if dictionary.get("port_vlan_id") else APIHelper.SKIP
        vlan_ids = dictionary.get("vlan_ids") if dictionary.get("vlan_ids") else APIHelper.SKIP
        # Return an object of this model
        return cls(additional_vlan_ids,
                   enable_vlan,
                   port_vlan_id,
                   vlan_ids)
