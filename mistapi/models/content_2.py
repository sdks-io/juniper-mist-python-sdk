# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mistapi.api_helper import APIHelper


class Content2(object):

    """Implementation of the 'Content2' model.

    TODO: type model description here.

    Attributes:
        facility (FacilityEnum): TODO: type description here.
        severity (Severity1Enum): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "facility": 'facility',
        "severity": 'severity'
    }

    _optionals = [
        'facility',
        'severity',
    ]

    def __init__(self,
                 facility=APIHelper.SKIP,
                 severity=APIHelper.SKIP):
        """Constructor for the Content2 class"""

        # Initialize members of the class
        if facility is not APIHelper.SKIP:
            self.facility = facility 
        if severity is not APIHelper.SKIP:
            self.severity = severity 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        facility = dictionary.get("facility") if dictionary.get("facility") else APIHelper.SKIP
        severity = dictionary.get("severity") if dictionary.get("severity") else APIHelper.SKIP
        # Return an object of this model
        return cls(facility,
                   severity)
