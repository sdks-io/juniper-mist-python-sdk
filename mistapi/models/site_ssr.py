# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mistapi.api_helper import APIHelper


class SiteSsr(object):

    """Implementation of the 'site_ssr' model.

    TODO: type model description here.

    Attributes:
        conductor_hosts (list of string): TODO: type description here.
        disable_stats (bool): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "conductor_hosts": 'conductor_hosts',
        "disable_stats": 'disable_stats'
    }

    _optionals = [
        'conductor_hosts',
        'disable_stats',
    ]

    def __init__(self,
                 conductor_hosts=APIHelper.SKIP,
                 disable_stats=APIHelper.SKIP):
        """Constructor for the SiteSsr class"""

        # Initialize members of the class
        if conductor_hosts is not APIHelper.SKIP:
            self.conductor_hosts = conductor_hosts 
        if disable_stats is not APIHelper.SKIP:
            self.disable_stats = disable_stats 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        conductor_hosts = dictionary.get("conductor_hosts") if dictionary.get("conductor_hosts") else APIHelper.SKIP
        disable_stats = dictionary.get("disable_stats") if "disable_stats" in dictionary.keys() else APIHelper.SKIP
        # Return an object of this model
        return cls(conductor_hosts,
                   disable_stats)
