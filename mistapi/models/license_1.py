# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mistapi.api_helper import APIHelper


class License1(object):

    """Implementation of the 'License1' model.

    TODO: type model description here.

    Attributes:
        created_time (float): TODO: type description here.
        end_time (int): end date of the license term
        id (uuid|string): TODO: type description here.
        modified_time (float): TODO: type description here.
        order_id (string): TODO: type description here.
        org_id (uuid|string): TODO: type description here.
        quantity (int): number of devices entitled for this license
        remaining_quantity (int): Number of licences left in this
            subscription
        start_time (int): start date of the license term
        subscription_id (string): TODO: type description here.
        mtype (Type28Enum): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "created_time": 'created_time',
        "end_time": 'end_time',
        "id": 'id',
        "modified_time": 'modified_time',
        "order_id": 'order_id',
        "org_id": 'org_id',
        "quantity": 'quantity',
        "remaining_quantity": 'remaining_quantity',
        "start_time": 'start_time',
        "subscription_id": 'subscription_id',
        "mtype": 'type'
    }

    _optionals = [
        'created_time',
        'end_time',
        'id',
        'modified_time',
        'order_id',
        'org_id',
        'quantity',
        'remaining_quantity',
        'start_time',
        'subscription_id',
        'mtype',
    ]

    def __init__(self,
                 created_time=APIHelper.SKIP,
                 end_time=APIHelper.SKIP,
                 id=APIHelper.SKIP,
                 modified_time=APIHelper.SKIP,
                 order_id=APIHelper.SKIP,
                 org_id=APIHelper.SKIP,
                 quantity=APIHelper.SKIP,
                 remaining_quantity=APIHelper.SKIP,
                 start_time=APIHelper.SKIP,
                 subscription_id=APIHelper.SKIP,
                 mtype=APIHelper.SKIP):
        """Constructor for the License1 class"""

        # Initialize members of the class
        if created_time is not APIHelper.SKIP:
            self.created_time = created_time 
        if end_time is not APIHelper.SKIP:
            self.end_time = end_time 
        if id is not APIHelper.SKIP:
            self.id = id 
        if modified_time is not APIHelper.SKIP:
            self.modified_time = modified_time 
        if order_id is not APIHelper.SKIP:
            self.order_id = order_id 
        if org_id is not APIHelper.SKIP:
            self.org_id = org_id 
        if quantity is not APIHelper.SKIP:
            self.quantity = quantity 
        if remaining_quantity is not APIHelper.SKIP:
            self.remaining_quantity = remaining_quantity 
        if start_time is not APIHelper.SKIP:
            self.start_time = start_time 
        if subscription_id is not APIHelper.SKIP:
            self.subscription_id = subscription_id 
        if mtype is not APIHelper.SKIP:
            self.mtype = mtype 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        created_time = dictionary.get("created_time") if dictionary.get("created_time") else APIHelper.SKIP
        end_time = dictionary.get("end_time") if dictionary.get("end_time") else APIHelper.SKIP
        id = dictionary.get("id") if dictionary.get("id") else APIHelper.SKIP
        modified_time = dictionary.get("modified_time") if dictionary.get("modified_time") else APIHelper.SKIP
        order_id = dictionary.get("order_id") if dictionary.get("order_id") else APIHelper.SKIP
        org_id = dictionary.get("org_id") if dictionary.get("org_id") else APIHelper.SKIP
        quantity = dictionary.get("quantity") if dictionary.get("quantity") else APIHelper.SKIP
        remaining_quantity = dictionary.get("remaining_quantity") if dictionary.get("remaining_quantity") else APIHelper.SKIP
        start_time = dictionary.get("start_time") if dictionary.get("start_time") else APIHelper.SKIP
        subscription_id = dictionary.get("subscription_id") if dictionary.get("subscription_id") else APIHelper.SKIP
        mtype = dictionary.get("type") if dictionary.get("type") else APIHelper.SKIP
        # Return an object of this model
        return cls(created_time,
                   end_time,
                   id,
                   modified_time,
                   order_id,
                   org_id,
                   quantity,
                   remaining_quantity,
                   start_time,
                   subscription_id,
                   mtype)
