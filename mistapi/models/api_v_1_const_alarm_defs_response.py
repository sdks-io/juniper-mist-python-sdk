# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mistapi.api_helper import APIHelper


class ApiV1ConstAlarmDefsResponse(object):

    """Implementation of the 'Api V1 Const Alarm Defs Response' model.

    TODO: type model description here.

    Attributes:
        display (string): Description of the alarm type
        fields (list of string): List of fields available in an alarm details
            payload (in REST APIs & Webhooks); e.g. `aps`, `switches`,
            `gateways`, `hostnames`, `ssids`, `bssids`
        group (string): Group to which the alarm belongs
        key (string): Key name of an alarm type
        marvis_suggestion_category (string): Marvis defined category to which
            the alarm belongs
        severity (string): Severity of the alarm

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "display": 'display',
        "fields": 'fields',
        "group": 'group',
        "key": 'key',
        "severity": 'severity',
        "marvis_suggestion_category": 'marvis_suggestion_category'
    }

    _optionals = [
        'marvis_suggestion_category',
    ]

    def __init__(self,
                 display=None,
                 fields=None,
                 group=None,
                 key=None,
                 severity=None,
                 marvis_suggestion_category=APIHelper.SKIP):
        """Constructor for the ApiV1ConstAlarmDefsResponse class"""

        # Initialize members of the class
        self.display = display 
        self.fields = fields 
        self.group = group 
        self.key = key 
        if marvis_suggestion_category is not APIHelper.SKIP:
            self.marvis_suggestion_category = marvis_suggestion_category 
        self.severity = severity 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        display = dictionary.get("display") if dictionary.get("display") else None
        fields = dictionary.get("fields") if dictionary.get("fields") else None
        group = dictionary.get("group") if dictionary.get("group") else None
        key = dictionary.get("key") if dictionary.get("key") else None
        severity = dictionary.get("severity") if dictionary.get("severity") else None
        marvis_suggestion_category = dictionary.get("marvis_suggestion_category") if dictionary.get("marvis_suggestion_category") else APIHelper.SKIP
        # Return an object of this model
        return cls(display,
                   fields,
                   group,
                   key,
                   severity,
                   marvis_suggestion_category)
