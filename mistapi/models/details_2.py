# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mistapi.models.major_version import MajorVersion


class Details2(object):

    """Implementation of the 'Details2' model.

    TODO: type model description here.

    Attributes:
        major_versions (list of MajorVersion): TODO: type description here.
        total_switch_count (int): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "major_versions": 'major_versions',
        "total_switch_count": 'total_switch_count'
    }

    def __init__(self,
                 major_versions=None,
                 total_switch_count=None):
        """Constructor for the Details2 class"""

        # Initialize members of the class
        self.major_versions = major_versions 
        self.total_switch_count = total_switch_count 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        major_versions = None
        if dictionary.get('major_versions') is not None:
            major_versions = [MajorVersion.from_dictionary(x) for x in dictionary.get('major_versions')]
        total_switch_count = dictionary.get("total_switch_count") if dictionary.get("total_switch_count") else None
        # Return an object of this model
        return cls(major_versions,
                   total_switch_count)
