# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mistapi.api_helper import APIHelper


class StatsClientsWan(object):

    """Implementation of the 'stats_clients_wan' model.

    TODO: type model description here.

    Attributes:
        when (string): TODO: type description here.
        hostname (list of string): TODO: type description here.
        ip (list of string): TODO: type description here.
        last_hostname (string): TODO: type description here.
        last_ip (string): TODO: type description here.
        mfg (string): TODO: type description here.
        org_id (string): TODO: type description here.
        site_id (string): TODO: type description here.
        wcid (string): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "when": 'When',
        "hostname": 'hostname',
        "ip": 'ip',
        "last_hostname": 'last_hostname',
        "last_ip": 'last_ip',
        "mfg": 'mfg',
        "org_id": 'org_id',
        "site_id": 'site_id',
        "wcid": 'wcid'
    }

    _optionals = [
        'when',
        'hostname',
        'ip',
        'last_hostname',
        'last_ip',
        'mfg',
        'org_id',
        'site_id',
        'wcid',
    ]

    def __init__(self,
                 when=APIHelper.SKIP,
                 hostname=APIHelper.SKIP,
                 ip=APIHelper.SKIP,
                 last_hostname=APIHelper.SKIP,
                 last_ip=APIHelper.SKIP,
                 mfg=APIHelper.SKIP,
                 org_id=APIHelper.SKIP,
                 site_id=APIHelper.SKIP,
                 wcid=APIHelper.SKIP):
        """Constructor for the StatsClientsWan class"""

        # Initialize members of the class
        if when is not APIHelper.SKIP:
            self.when = when 
        if hostname is not APIHelper.SKIP:
            self.hostname = hostname 
        if ip is not APIHelper.SKIP:
            self.ip = ip 
        if last_hostname is not APIHelper.SKIP:
            self.last_hostname = last_hostname 
        if last_ip is not APIHelper.SKIP:
            self.last_ip = last_ip 
        if mfg is not APIHelper.SKIP:
            self.mfg = mfg 
        if org_id is not APIHelper.SKIP:
            self.org_id = org_id 
        if site_id is not APIHelper.SKIP:
            self.site_id = site_id 
        if wcid is not APIHelper.SKIP:
            self.wcid = wcid 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        when = dictionary.get("When") if dictionary.get("When") else APIHelper.SKIP
        hostname = dictionary.get("hostname") if dictionary.get("hostname") else APIHelper.SKIP
        ip = dictionary.get("ip") if dictionary.get("ip") else APIHelper.SKIP
        last_hostname = dictionary.get("last_hostname") if dictionary.get("last_hostname") else APIHelper.SKIP
        last_ip = dictionary.get("last_ip") if dictionary.get("last_ip") else APIHelper.SKIP
        mfg = dictionary.get("mfg") if dictionary.get("mfg") else APIHelper.SKIP
        org_id = dictionary.get("org_id") if dictionary.get("org_id") else APIHelper.SKIP
        site_id = dictionary.get("site_id") if dictionary.get("site_id") else APIHelper.SKIP
        wcid = dictionary.get("wcid") if dictionary.get("wcid") else APIHelper.SKIP
        # Return an object of this model
        return cls(when,
                   hostname,
                   ip,
                   last_hostname,
                   last_ip,
                   mfg,
                   org_id,
                   site_id,
                   wcid)
