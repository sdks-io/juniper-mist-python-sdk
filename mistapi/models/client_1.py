# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mistapi.api_helper import APIHelper


class Client1(object):

    """Implementation of the 'Client1' model.

    TODO: type model description here.

    Attributes:
        device_mac (string): TODO: type description here.
        hostname (string): TODO: type description here.
        mac (string): TODO: type description here.
        port_id (string): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "device_mac": 'device_mac',
        "hostname": 'hostname',
        "mac": 'mac',
        "port_id": 'port_id'
    }

    _optionals = [
        'device_mac',
        'hostname',
        'mac',
        'port_id',
    ]

    def __init__(self,
                 device_mac=APIHelper.SKIP,
                 hostname=APIHelper.SKIP,
                 mac=APIHelper.SKIP,
                 port_id=APIHelper.SKIP):
        """Constructor for the Client1 class"""

        # Initialize members of the class
        if device_mac is not APIHelper.SKIP:
            self.device_mac = device_mac 
        if hostname is not APIHelper.SKIP:
            self.hostname = hostname 
        if mac is not APIHelper.SKIP:
            self.mac = mac 
        if port_id is not APIHelper.SKIP:
            self.port_id = port_id 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        device_mac = dictionary.get("device_mac") if dictionary.get("device_mac") else APIHelper.SKIP
        hostname = dictionary.get("hostname") if dictionary.get("hostname") else APIHelper.SKIP
        mac = dictionary.get("mac") if dictionary.get("mac") else APIHelper.SKIP
        port_id = dictionary.get("port_id") if dictionary.get("port_id") else APIHelper.SKIP
        # Return an object of this model
        return cls(device_mac,
                   hostname,
                   mac,
                   port_id)
