# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mistapi.api_helper import APIHelper


class EventsDeviceAp(object):

    """Implementation of the 'events_device_ap' model.

    ap events

    Attributes:
        last_reboot_time (float): TODO: type description here.
        text (string): TODO: type description here.
        timestamp (float): TODO: type description here.
        mtype (string): TODO: type description here.
        type_code (int): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "timestamp": 'timestamp',
        "last_reboot_time": 'last_reboot_time',
        "text": 'text',
        "mtype": 'type',
        "type_code": 'type_code'
    }

    _optionals = [
        'last_reboot_time',
        'text',
        'mtype',
        'type_code',
    ]

    def __init__(self,
                 timestamp=None,
                 last_reboot_time=APIHelper.SKIP,
                 text=APIHelper.SKIP,
                 mtype=APIHelper.SKIP,
                 type_code=APIHelper.SKIP):
        """Constructor for the EventsDeviceAp class"""

        # Initialize members of the class
        if last_reboot_time is not APIHelper.SKIP:
            self.last_reboot_time = last_reboot_time 
        if text is not APIHelper.SKIP:
            self.text = text 
        self.timestamp = timestamp 
        if mtype is not APIHelper.SKIP:
            self.mtype = mtype 
        if type_code is not APIHelper.SKIP:
            self.type_code = type_code 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        timestamp = dictionary.get("timestamp") if dictionary.get("timestamp") else None
        last_reboot_time = dictionary.get("last_reboot_time") if dictionary.get("last_reboot_time") else APIHelper.SKIP
        text = dictionary.get("text") if dictionary.get("text") else APIHelper.SKIP
        mtype = dictionary.get("type") if dictionary.get("type") else APIHelper.SKIP
        type_code = dictionary.get("type_code") if dictionary.get("type_code") else APIHelper.SKIP
        # Return an object of this model
        return cls(timestamp,
                   last_reboot_time,
                   text,
                   mtype,
                   type_code)
