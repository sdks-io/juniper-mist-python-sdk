# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mistapi.api_helper import APIHelper


class Schedule(object):

    """Implementation of the 'Schedule' model.

    WLAN operating schedule, default is disabled

    Attributes:
        enabled (bool): TODO: type description here.
        hours (object): time ranges, the key is mon / tue / wed / thu / fri /
            sat / sun, the value is time range in “HH:MM-HH:MM” (24-hour
            format), the minimum resolution is 30 minute

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "enabled": 'enabled',
        "hours": 'hours'
    }

    _optionals = [
        'enabled',
        'hours',
    ]

    def __init__(self,
                 enabled=False,
                 hours=APIHelper.SKIP):
        """Constructor for the Schedule class"""

        # Initialize members of the class
        self.enabled = enabled 
        if hours is not APIHelper.SKIP:
            self.hours = hours 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        enabled = dictionary.get("enabled") if dictionary.get("enabled") else False
        hours = dictionary.get("hours") if dictionary.get("hours") else APIHelper.SKIP
        # Return an object of this model
        return cls(enabled,
                   hours)
