# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mistapi.api_helper import APIHelper


class WanSourceNat(object):

    """Implementation of the 'WanSourceNat' model.

    optional, by default, source-NAT is performed on all WAN Ports using the
    interface-ip

    Attributes:
        disabled (bool): or to disable the source-nat
        nat_pool (string): if alternative nat_pool is desired

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "disabled": 'disabled',
        "nat_pool": 'nat_pool'
    }

    _optionals = [
        'disabled',
        'nat_pool',
    ]

    def __init__(self,
                 disabled=False,
                 nat_pool=APIHelper.SKIP):
        """Constructor for the WanSourceNat class"""

        # Initialize members of the class
        self.disabled = disabled 
        if nat_pool is not APIHelper.SKIP:
            self.nat_pool = nat_pool 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        disabled = dictionary.get("disabled") if dictionary.get("disabled") else False
        nat_pool = dictionary.get("nat_pool") if dictionary.get("nat_pool") else APIHelper.SKIP
        # Return an object of this model
        return cls(disabled,
                   nat_pool)
