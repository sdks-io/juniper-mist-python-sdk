# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mistapi.api_helper import APIHelper


class ApiV1RegisterRequest(object):

    """Implementation of the 'Api V1 Register Request' model.

    TODO: type model description here.

    Attributes:
        account_only (bool): skip creating initial setup if true
        allow_mist (bool): whether to allow Mist to look at this org
        email (string): TODO: type description here.
        first_name (string): TODO: type description here.
        invite_code (string): required initially
        last_name (string): TODO: type description here.
        org_name (string): TODO: type description here.
        password (string): TODO: type description here.
        recaptcha (string): TODO: type description here.
        referer_invite_token (string): the invite token to apply after account
            creation
        return_to (string): the url the user should be redirected back to

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "email": 'email',
        "first_name": 'first_name',
        "last_name": 'last_name',
        "org_name": 'org_name',
        "password": 'password',
        "recaptcha": 'recaptcha',
        "account_only": 'account_only',
        "allow_mist": 'allow_mist',
        "invite_code": 'invite_code',
        "referer_invite_token": 'referer_invite_token',
        "return_to": 'return_to'
    }

    _optionals = [
        'account_only',
        'allow_mist',
        'invite_code',
        'referer_invite_token',
        'return_to',
    ]

    def __init__(self,
                 email=None,
                 first_name=None,
                 last_name=None,
                 org_name=None,
                 password=None,
                 recaptcha=None,
                 account_only=False,
                 allow_mist=False,
                 invite_code=APIHelper.SKIP,
                 referer_invite_token=APIHelper.SKIP,
                 return_to=APIHelper.SKIP):
        """Constructor for the ApiV1RegisterRequest class"""

        # Initialize members of the class
        self.account_only = account_only 
        self.allow_mist = allow_mist 
        self.email = email 
        self.first_name = first_name 
        if invite_code is not APIHelper.SKIP:
            self.invite_code = invite_code 
        self.last_name = last_name 
        self.org_name = org_name 
        self.password = password 
        self.recaptcha = recaptcha 
        if referer_invite_token is not APIHelper.SKIP:
            self.referer_invite_token = referer_invite_token 
        if return_to is not APIHelper.SKIP:
            self.return_to = return_to 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        email = dictionary.get("email") if dictionary.get("email") else None
        first_name = dictionary.get("first_name") if dictionary.get("first_name") else None
        last_name = dictionary.get("last_name") if dictionary.get("last_name") else None
        org_name = dictionary.get("org_name") if dictionary.get("org_name") else None
        password = dictionary.get("password") if dictionary.get("password") else None
        recaptcha = dictionary.get("recaptcha") if dictionary.get("recaptcha") else None
        account_only = dictionary.get("account_only") if dictionary.get("account_only") else False
        allow_mist = dictionary.get("allow_mist") if dictionary.get("allow_mist") else False
        invite_code = dictionary.get("invite_code") if dictionary.get("invite_code") else APIHelper.SKIP
        referer_invite_token = dictionary.get("referer_invite_token") if dictionary.get("referer_invite_token") else APIHelper.SKIP
        return_to = dictionary.get("return_to") if dictionary.get("return_to") else APIHelper.SKIP
        # Return an object of this model
        return cls(email,
                   first_name,
                   last_name,
                   org_name,
                   password,
                   recaptcha,
                   account_only,
                   allow_mist,
                   invite_code,
                   referer_invite_token,
                   return_to)
