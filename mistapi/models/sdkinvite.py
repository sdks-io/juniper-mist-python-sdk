# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mistapi.api_helper import APIHelper


class Sdkinvite(object):

    """Implementation of the 'sdkinvite' model.

    SDK invite

    Attributes:
        created_time (float): TODO: type description here.
        enabled (bool): TODO: type description here.
        expire_time (int): TODO: type description here.
        id (uuid|string): TODO: type description here.
        modified_time (float): TODO: type description here.
        name (string): name, will show up in mobile
        org_id (uuid|string): TODO: type description here.
        quota (int): number of time this invite can be used
        quota_limited (bool): whether quota limiting is enabled
        site_id (uuid|string): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "name": 'name',
        "created_time": 'created_time',
        "enabled": 'enabled',
        "expire_time": 'expire_time',
        "id": 'id',
        "modified_time": 'modified_time',
        "org_id": 'org_id',
        "quota": 'quota',
        "quota_limited": 'quota_limited',
        "site_id": 'site_id'
    }

    _optionals = [
        'created_time',
        'enabled',
        'expire_time',
        'id',
        'modified_time',
        'org_id',
        'quota',
        'quota_limited',
        'site_id',
    ]

    def __init__(self,
                 name=None,
                 created_time=APIHelper.SKIP,
                 enabled=True,
                 expire_time=APIHelper.SKIP,
                 id=APIHelper.SKIP,
                 modified_time=APIHelper.SKIP,
                 org_id=APIHelper.SKIP,
                 quota=APIHelper.SKIP,
                 quota_limited=False,
                 site_id=APIHelper.SKIP):
        """Constructor for the Sdkinvite class"""

        # Initialize members of the class
        if created_time is not APIHelper.SKIP:
            self.created_time = created_time 
        self.enabled = enabled 
        if expire_time is not APIHelper.SKIP:
            self.expire_time = expire_time 
        if id is not APIHelper.SKIP:
            self.id = id 
        if modified_time is not APIHelper.SKIP:
            self.modified_time = modified_time 
        self.name = name 
        if org_id is not APIHelper.SKIP:
            self.org_id = org_id 
        if quota is not APIHelper.SKIP:
            self.quota = quota 
        self.quota_limited = quota_limited 
        if site_id is not APIHelper.SKIP:
            self.site_id = site_id 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        name = dictionary.get("name") if dictionary.get("name") else None
        created_time = dictionary.get("created_time") if dictionary.get("created_time") else APIHelper.SKIP
        enabled = dictionary.get("enabled") if dictionary.get("enabled") else True
        expire_time = dictionary.get("expire_time") if dictionary.get("expire_time") else APIHelper.SKIP
        id = dictionary.get("id") if dictionary.get("id") else APIHelper.SKIP
        modified_time = dictionary.get("modified_time") if dictionary.get("modified_time") else APIHelper.SKIP
        org_id = dictionary.get("org_id") if dictionary.get("org_id") else APIHelper.SKIP
        quota = dictionary.get("quota") if dictionary.get("quota") else APIHelper.SKIP
        quota_limited = dictionary.get("quota_limited") if dictionary.get("quota_limited") else False
        site_id = dictionary.get("site_id") if dictionary.get("site_id") else APIHelper.SKIP
        # Return an object of this model
        return cls(name,
                   created_time,
                   enabled,
                   expire_time,
                   id,
                   modified_time,
                   org_id,
                   quota,
                   quota_limited,
                   site_id)
