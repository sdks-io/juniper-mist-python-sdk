# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mistapi.api_helper import APIHelper


class ApiV1SitesDevicesClearArpRequest(object):

    """Implementation of the 'Api V1 Sites Devices Clear Arp Request' model.

    TODO: type model description here.

    Attributes:
        ip (string): The IP address for which to clear an ARP entry. port_id
            must be specified. Both vlan and ip cannot be specified.
        node (NodeEnum): only for HA
        port_id (string): The device interface on which to clear the ARP
            cache.
        vlan (int): The VLAN on which to clear the ARP cache. port_id must be
            specified. Both vlan and ip cannot be specified.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "ip": 'ip',
        "node": 'node',
        "port_id": 'port_id',
        "vlan": 'vlan'
    }

    _optionals = [
        'ip',
        'node',
        'port_id',
        'vlan',
    ]

    def __init__(self,
                 ip=APIHelper.SKIP,
                 node=APIHelper.SKIP,
                 port_id=APIHelper.SKIP,
                 vlan=APIHelper.SKIP):
        """Constructor for the ApiV1SitesDevicesClearArpRequest class"""

        # Initialize members of the class
        if ip is not APIHelper.SKIP:
            self.ip = ip 
        if node is not APIHelper.SKIP:
            self.node = node 
        if port_id is not APIHelper.SKIP:
            self.port_id = port_id 
        if vlan is not APIHelper.SKIP:
            self.vlan = vlan 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        ip = dictionary.get("ip") if dictionary.get("ip") else APIHelper.SKIP
        node = dictionary.get("node") if dictionary.get("node") else APIHelper.SKIP
        port_id = dictionary.get("port_id") if dictionary.get("port_id") else APIHelper.SKIP
        vlan = dictionary.get("vlan") if dictionary.get("vlan") else APIHelper.SKIP
        # Return an object of this model
        return cls(ip,
                   node,
                   port_id,
                   vlan)
