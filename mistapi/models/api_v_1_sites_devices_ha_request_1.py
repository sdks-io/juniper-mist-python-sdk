# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mistapi.api_helper import APIHelper


class ApiV1SitesDevicesHaRequest1(object):

    """Implementation of the 'Api V1 Sites Devices Ha Request1' model.

    TODO: type model description here.

    Attributes:
        mac (string): when `op` ==`replacement_nodeX`, new node1 's MAC, the
            device has to be standalone and assigned to the same site
        op (Op4Enum): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "op": 'op',
        "mac": 'mac'
    }

    _optionals = [
        'mac',
    ]

    def __init__(self,
                 op='swap',
                 mac=APIHelper.SKIP):
        """Constructor for the ApiV1SitesDevicesHaRequest1 class"""

        # Initialize members of the class
        if mac is not APIHelper.SKIP:
            self.mac = mac 
        self.op = op 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        op = dictionary.get("op") if dictionary.get("op") else 'swap'
        mac = dictionary.get("mac") if dictionary.get("mac") else APIHelper.SKIP
        # Return an object of this model
        return cls(op,
                   mac)
