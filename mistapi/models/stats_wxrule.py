# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class StatsWxrule(object):

    """Implementation of the 'stats_wxrule' model.

    Wxrule statistics

    Attributes:
        action (string): TODO: type description here.
        client_mac (list of string): TODO: type description here.
        dst_allow_wxtags (list of string): TODO: type description here.
        dst_deny_wxtags (list of string): TODO: type description here.
        dst_wxtags (list of string): TODO: type description here.
        name (string): TODO: type description here.
        order (int): TODO: type description here.
        src_wxtags (list of string): TODO: type description here.
        usage (object): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "action": 'action',
        "client_mac": 'client_mac',
        "dst_allow_wxtags": 'dst_allow_wxtags',
        "dst_deny_wxtags": 'dst_deny_wxtags',
        "dst_wxtags": 'dst_wxtags',
        "name": 'name',
        "order": 'order',
        "src_wxtags": 'src_wxtags',
        "usage": 'usage'
    }

    def __init__(self,
                 action=None,
                 client_mac=None,
                 dst_allow_wxtags=None,
                 dst_deny_wxtags=None,
                 dst_wxtags=None,
                 name=None,
                 order=None,
                 src_wxtags=None,
                 usage=None):
        """Constructor for the StatsWxrule class"""

        # Initialize members of the class
        self.action = action 
        self.client_mac = client_mac 
        self.dst_allow_wxtags = dst_allow_wxtags 
        self.dst_deny_wxtags = dst_deny_wxtags 
        self.dst_wxtags = dst_wxtags 
        self.name = name 
        self.order = order 
        self.src_wxtags = src_wxtags 
        self.usage = usage 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        action = dictionary.get("action") if dictionary.get("action") else None
        client_mac = dictionary.get("client_mac") if dictionary.get("client_mac") else None
        dst_allow_wxtags = dictionary.get("dst_allow_wxtags") if dictionary.get("dst_allow_wxtags") else None
        dst_deny_wxtags = dictionary.get("dst_deny_wxtags") if dictionary.get("dst_deny_wxtags") else None
        dst_wxtags = dictionary.get("dst_wxtags") if dictionary.get("dst_wxtags") else None
        name = dictionary.get("name") if dictionary.get("name") else None
        order = dictionary.get("order") if dictionary.get("order") else None
        src_wxtags = dictionary.get("src_wxtags") if dictionary.get("src_wxtags") else None
        usage = dictionary.get("usage") if dictionary.get("usage") else None
        # Return an object of this model
        return cls(action,
                   client_mac,
                   dst_allow_wxtags,
                   dst_deny_wxtags,
                   dst_wxtags,
                   name,
                   order,
                   src_wxtags,
                   usage)
