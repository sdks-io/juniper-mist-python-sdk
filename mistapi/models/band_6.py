# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mistapi.api_helper import APIHelper


class Band6(object):

    """Implementation of the 'Band6' model.

    TODO: type model description here.

    Attributes:
        max_clients (int): TODO: type description here.
        max_power (int): TODO: type description here.
        min_power (int): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "max_clients": 'max_clients',
        "max_power": 'max_power',
        "min_power": 'min_power'
    }

    _optionals = [
        'max_clients',
        'max_power',
        'min_power',
    ]

    def __init__(self,
                 max_clients=APIHelper.SKIP,
                 max_power=APIHelper.SKIP,
                 min_power=APIHelper.SKIP):
        """Constructor for the Band6 class"""

        # Initialize members of the class
        if max_clients is not APIHelper.SKIP:
            self.max_clients = max_clients 
        if max_power is not APIHelper.SKIP:
            self.max_power = max_power 
        if min_power is not APIHelper.SKIP:
            self.min_power = min_power 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        max_clients = dictionary.get("max_clients") if dictionary.get("max_clients") else APIHelper.SKIP
        max_power = dictionary.get("max_power") if dictionary.get("max_power") else APIHelper.SKIP
        min_power = dictionary.get("min_power") if dictionary.get("min_power") else APIHelper.SKIP
        # Return an object of this model
        return cls(max_clients,
                   max_power,
                   min_power)
