# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mistapi.api_helper import APIHelper


class ApiV1SitesDevicesUpgradeRequest(object):

    """Implementation of the 'Api V1 Sites Devices Upgrade Request' model.

    TODO: type model description here.

    Attributes:
        reboot (bool): Reboot device immediately after upgrade is completed
            (Available on Junos OS devices)
        snapshot (bool): Perform recovery snapshot after device is rebooted
            (Available on Junos OS devices)
        version (string): specific `version` / `stable`, default is to use the
            latest

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "version": 'version',
        "reboot": 'reboot',
        "snapshot": 'snapshot'
    }

    _optionals = [
        'reboot',
        'snapshot',
    ]

    def __init__(self,
                 version='stable',
                 reboot=False,
                 snapshot=False):
        """Constructor for the ApiV1SitesDevicesUpgradeRequest class"""

        # Initialize members of the class
        self.reboot = reboot 
        self.snapshot = snapshot 
        self.version = version 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        version = dictionary.get("version") if dictionary.get("version") else 'stable'
        reboot = dictionary.get("reboot") if dictionary.get("reboot") else False
        snapshot = dictionary.get("snapshot") if dictionary.get("snapshot") else False
        # Return an object of this model
        return cls(version,
                   reboot,
                   snapshot)
