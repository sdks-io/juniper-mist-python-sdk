# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mistapi.api_helper import APIHelper


class EventsSkyatp(object):

    """Implementation of the 'events_skyatp' model.

    SkyATP events

    Attributes:
        device_mac (string): TODO: type description here.
        for_site (bool): TODO: type description here.
        ip (string): TODO: type description here.
        mac (string): TODO: type description here.
        org_id (uuid|string): TODO: type description here.
        site_id (uuid|string): TODO: type description here.
        threat_level (int): TODO: type description here.
        timestamp (float): TODO: type description here.
        mtype (string): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "device_mac": 'device_mac',
        "ip": 'ip',
        "mac": 'mac',
        "org_id": 'org_id',
        "site_id": 'site_id',
        "threat_level": 'threat_level',
        "timestamp": 'timestamp',
        "mtype": 'type',
        "for_site": 'for_site'
    }

    _optionals = [
        'for_site',
    ]

    def __init__(self,
                 device_mac=None,
                 ip=None,
                 mac=None,
                 org_id=None,
                 site_id=None,
                 threat_level=None,
                 timestamp=None,
                 mtype=None,
                 for_site=APIHelper.SKIP):
        """Constructor for the EventsSkyatp class"""

        # Initialize members of the class
        self.device_mac = device_mac 
        if for_site is not APIHelper.SKIP:
            self.for_site = for_site 
        self.ip = ip 
        self.mac = mac 
        self.org_id = org_id 
        self.site_id = site_id 
        self.threat_level = threat_level 
        self.timestamp = timestamp 
        self.mtype = mtype 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        device_mac = dictionary.get("device_mac") if dictionary.get("device_mac") else None
        ip = dictionary.get("ip") if dictionary.get("ip") else None
        mac = dictionary.get("mac") if dictionary.get("mac") else None
        org_id = dictionary.get("org_id") if dictionary.get("org_id") else None
        site_id = dictionary.get("site_id") if dictionary.get("site_id") else None
        threat_level = dictionary.get("threat_level") if dictionary.get("threat_level") else None
        timestamp = dictionary.get("timestamp") if dictionary.get("timestamp") else None
        mtype = dictionary.get("type") if dictionary.get("type") else None
        for_site = dictionary.get("for_site") if "for_site" in dictionary.keys() else APIHelper.SKIP
        # Return an object of this model
        return cls(device_mac,
                   ip,
                   mac,
                   org_id,
                   site_id,
                   threat_level,
                   timestamp,
                   mtype,
                   for_site)
