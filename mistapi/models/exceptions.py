# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mistapi.api_helper import APIHelper


class Exceptions(object):

    """Implementation of the 'Exceptions' model.

    where this template should not be applied to (takes precedence)

    Attributes:
        site_ids (list of uuid|string): list of site ids
        sitegroup_ids (list of uuid|string): list of sitegroup ids

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "site_ids": 'site_ids',
        "sitegroup_ids": 'sitegroup_ids'
    }

    _optionals = [
        'site_ids',
        'sitegroup_ids',
    ]

    def __init__(self,
                 site_ids=APIHelper.SKIP,
                 sitegroup_ids=APIHelper.SKIP):
        """Constructor for the Exceptions class"""

        # Initialize members of the class
        if site_ids is not APIHelper.SKIP:
            self.site_ids = site_ids 
        if sitegroup_ids is not APIHelper.SKIP:
            self.sitegroup_ids = sitegroup_ids 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        site_ids = dictionary.get("site_ids") if dictionary.get("site_ids") else APIHelper.SKIP
        sitegroup_ids = dictionary.get("sitegroup_ids") if dictionary.get("sitegroup_ids") else APIHelper.SKIP
        # Return an object of this model
        return cls(site_ids,
                   sitegroup_ids)
