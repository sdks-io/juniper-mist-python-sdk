# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mistapi.api_helper import APIHelper


class Member2(object):

    """Implementation of the 'Member2' model.

    TODO: type model description here.

    Attributes:
        member (float): TODO: type description here.
        vc_ports (list of string): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "member": 'member',
        "vc_ports": 'vc_ports'
    }

    _optionals = [
        'vc_ports',
    ]

    def __init__(self,
                 member=None,
                 vc_ports=APIHelper.SKIP):
        """Constructor for the Member2 class"""

        # Initialize members of the class
        self.member = member 
        if vc_ports is not APIHelper.SKIP:
            self.vc_ports = vc_ports 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        member = dictionary.get("member") if dictionary.get("member") else None
        vc_ports = dictionary.get("vc_ports") if dictionary.get("vc_ports") else APIHelper.SKIP
        # Return an object of this model
        return cls(member,
                   vc_ports)
