# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mistapi.api_helper import APIHelper


class DynamicPsk(object):

    """Implementation of the 'DynamicPsk' model.

    for dynamic PSK where we get per-user PSK from Radius
    dynamic_psk allows PSK to be selected at runtime depending on context
    (wlan/site/user/...) thus following configurations are assumed
    (currently)
    - PSK will come from RADIUS server
    - AP sends client MAC as username ans password (i.e. `enable_mac_auth` is
    assumed)
    - AP sends BSSID:SSID as Caller-Station-ID
    - `auth_servers` is required
    - PSK will come from cloud WLC if source is cloud_psks
    - default_psk will be used if cloud WLC is not available
    - `multi_psk_only` and `psk` is ignored
    - `pairwise` can only be wpa2-ccmp (for now, wpa3 support on the roadmap)

    Attributes:
        default_psk (string): default PSK to use if cloud WLC is not
            available, 8-63 characters
        default_vlan_id (int): TODO: type description here.
        enabled (bool): TODO: type description here.
        source (Source1Enum): TODO: type description here.
        vlan_ids (list of int): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "default_psk": 'default_psk',
        "default_vlan_id": 'default_vlan_id',
        "enabled": 'enabled',
        "source": 'source',
        "vlan_ids": 'vlan_ids'
    }

    _optionals = [
        'default_psk',
        'default_vlan_id',
        'enabled',
        'source',
        'vlan_ids',
    ]

    _nullables = [
        'default_vlan_id',
    ]

    def __init__(self,
                 default_psk=APIHelper.SKIP,
                 default_vlan_id=APIHelper.SKIP,
                 enabled=APIHelper.SKIP,
                 source='radius',
                 vlan_ids=APIHelper.SKIP):
        """Constructor for the DynamicPsk class"""

        # Initialize members of the class
        if default_psk is not APIHelper.SKIP:
            self.default_psk = default_psk 
        if default_vlan_id is not APIHelper.SKIP:
            self.default_vlan_id = default_vlan_id 
        if enabled is not APIHelper.SKIP:
            self.enabled = enabled 
        self.source = source 
        if vlan_ids is not APIHelper.SKIP:
            self.vlan_ids = vlan_ids 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        default_psk = dictionary.get("default_psk") if dictionary.get("default_psk") else APIHelper.SKIP
        default_vlan_id = dictionary.get("default_vlan_id") if "default_vlan_id" in dictionary.keys() else APIHelper.SKIP
        enabled = dictionary.get("enabled") if "enabled" in dictionary.keys() else APIHelper.SKIP
        source = dictionary.get("source") if dictionary.get("source") else 'radius'
        vlan_ids = dictionary.get("vlan_ids") if dictionary.get("vlan_ids") else APIHelper.SKIP
        # Return an object of this model
        return cls(default_psk,
                   default_vlan_id,
                   enabled,
                   source,
                   vlan_ids)
