# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mistapi.api_helper import APIHelper
from mistapi.models.sessions import Sessions


class SpuStat(object):

    """Implementation of the 'SpuStat' model.

    TODO: type model description here.

    Attributes:
        cpu (float): TODO: type description here.
        memory (float): TODO: type description here.
        sessions (Sessions): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "cpu": 'cpu',
        "memory": 'memory',
        "sessions": 'sessions'
    }

    _optionals = [
        'cpu',
        'memory',
        'sessions',
    ]

    def __init__(self,
                 cpu=APIHelper.SKIP,
                 memory=APIHelper.SKIP,
                 sessions=APIHelper.SKIP):
        """Constructor for the SpuStat class"""

        # Initialize members of the class
        if cpu is not APIHelper.SKIP:
            self.cpu = cpu 
        if memory is not APIHelper.SKIP:
            self.memory = memory 
        if sessions is not APIHelper.SKIP:
            self.sessions = sessions 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        cpu = dictionary.get("cpu") if dictionary.get("cpu") else APIHelper.SKIP
        memory = dictionary.get("memory") if dictionary.get("memory") else APIHelper.SKIP
        sessions = Sessions.from_dictionary(dictionary.get('sessions')) if 'sessions' in dictionary.keys() else APIHelper.SKIP
        # Return an object of this model
        return cls(cpu,
                   memory,
                   sessions)
