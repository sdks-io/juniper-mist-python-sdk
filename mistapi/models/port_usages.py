# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mistapi.api_helper import APIHelper
from mistapi.models.junos_port_usages_dynamic import JunosPortUsagesDynamic


class PortUsages(object):

    """Implementation of the 'PortUsages' model.

    The property key is the port profile name

    Attributes:
        dynamic (JunosPortUsagesDynamic): This is a special mode where the
            actually usage is determined by a set of rules the port will start
            with `access` mode and isolated depending on the rules, if
            resolved, the port will have the resolved usage applied.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "dynamic": 'dynamic'
    }

    _optionals = [
        'dynamic',
    ]

    def __init__(self,
                 dynamic=APIHelper.SKIP):
        """Constructor for the PortUsages class"""

        # Initialize members of the class
        if dynamic is not APIHelper.SKIP:
            self.dynamic = dynamic 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        dynamic = JunosPortUsagesDynamic.from_dictionary(dictionary.get('dynamic')) if 'dynamic' in dictionary.keys() else APIHelper.SKIP
        # Return an object of this model
        return cls(dynamic)
