# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mistapi.api_helper import APIHelper


class Cradlepoint(object):

    """Implementation of the 'Cradlepoint' model.

    TODO: type model description here.

    Attributes:
        cp_api_id (string): TODO: type description here.
        cp_api_key (string): TODO: type description here.
        ecm_api_id (string): TODO: type description here.
        ecm_api_key (string): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "cp_api_id": 'cp_api_id',
        "cp_api_key": 'cp_api_key',
        "ecm_api_id": 'ecm_api_id',
        "ecm_api_key": 'ecm_api_key'
    }

    _optionals = [
        'cp_api_id',
        'cp_api_key',
        'ecm_api_id',
        'ecm_api_key',
    ]

    def __init__(self,
                 cp_api_id=APIHelper.SKIP,
                 cp_api_key=APIHelper.SKIP,
                 ecm_api_id=APIHelper.SKIP,
                 ecm_api_key=APIHelper.SKIP):
        """Constructor for the Cradlepoint class"""

        # Initialize members of the class
        if cp_api_id is not APIHelper.SKIP:
            self.cp_api_id = cp_api_id 
        if cp_api_key is not APIHelper.SKIP:
            self.cp_api_key = cp_api_key 
        if ecm_api_id is not APIHelper.SKIP:
            self.ecm_api_id = ecm_api_id 
        if ecm_api_key is not APIHelper.SKIP:
            self.ecm_api_key = ecm_api_key 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        cp_api_id = dictionary.get("cp_api_id") if dictionary.get("cp_api_id") else APIHelper.SKIP
        cp_api_key = dictionary.get("cp_api_key") if dictionary.get("cp_api_key") else APIHelper.SKIP
        ecm_api_id = dictionary.get("ecm_api_id") if dictionary.get("ecm_api_id") else APIHelper.SKIP
        ecm_api_key = dictionary.get("ecm_api_key") if dictionary.get("ecm_api_key") else APIHelper.SKIP
        # Return an object of this model
        return cls(cp_api_id,
                   cp_api_key,
                   ecm_api_id,
                   ecm_api_key)
