# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mistapi.api_helper import APIHelper


class ApiV1SitesDevicesSnapshotResponse(object):

    """Implementation of the 'Api V1 Sites Devices Snapshot Response' model.

    TODO: type model description here.

    Attributes:
        status_id (string): the internal status id
        staus (StausEnum): TODO: type description here.
        timestamp (float): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "status_id": 'status_id',
        "staus": 'staus',
        "timestamp": 'timestamp'
    }

    _optionals = [
        'status_id',
        'staus',
        'timestamp',
    ]

    def __init__(self,
                 status_id=APIHelper.SKIP,
                 staus=APIHelper.SKIP,
                 timestamp=APIHelper.SKIP):
        """Constructor for the ApiV1SitesDevicesSnapshotResponse class"""

        # Initialize members of the class
        if status_id is not APIHelper.SKIP:
            self.status_id = status_id 
        if staus is not APIHelper.SKIP:
            self.staus = staus 
        if timestamp is not APIHelper.SKIP:
            self.timestamp = timestamp 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        status_id = dictionary.get("status_id") if dictionary.get("status_id") else APIHelper.SKIP
        staus = dictionary.get("staus") if dictionary.get("staus") else APIHelper.SKIP
        timestamp = dictionary.get("timestamp") if dictionary.get("timestamp") else APIHelper.SKIP
        # Return an object of this model
        return cls(status_id,
                   staus,
                   timestamp)
