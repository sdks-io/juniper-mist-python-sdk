# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class ClientWaits(object):

    """Implementation of the 'ClientWaits' model.

    client wait time right now

    Attributes:
        avg (int): average wait time in seconds
        max (int): longest wait time in seconds
        min (int): shortest wait time in seconds
        p_95 (int): 95th percentile of all the wait time(s)

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "avg": 'avg',
        "max": 'max',
        "min": 'min',
        "p_95": 'p95'
    }

    def __init__(self,
                 avg=None,
                 max=None,
                 min=None,
                 p_95=None):
        """Constructor for the ClientWaits class"""

        # Initialize members of the class
        self.avg = avg 
        self.max = max 
        self.min = min 
        self.p_95 = p_95 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        avg = dictionary.get("avg") if dictionary.get("avg") else None
        max = dictionary.get("max") if dictionary.get("max") else None
        min = dictionary.get("min") if dictionary.get("min") else None
        p_95 = dictionary.get("p95") if dictionary.get("p95") else None
        # Return an object of this model
        return cls(avg,
                   max,
                   min,
                   p_95)
