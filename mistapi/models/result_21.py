# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mistapi.api_helper import APIHelper


class Result21(object):

    """Implementation of the 'Result21' model.

    TODO: type model description here.

    Attributes:
        ap_macs (list of string): TODO: type description here.
        timestamp (float): TODO: type description here.
        mtype (string): TODO: type description here.
        url (string): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "timestamp": 'timestamp',
        "mtype": 'type',
        "url": 'url',
        "ap_macs": 'ap_macs'
    }

    _optionals = [
        'ap_macs',
    ]

    def __init__(self,
                 timestamp=None,
                 mtype=None,
                 url=None,
                 ap_macs=APIHelper.SKIP):
        """Constructor for the Result21 class"""

        # Initialize members of the class
        if ap_macs is not APIHelper.SKIP:
            self.ap_macs = ap_macs 
        self.timestamp = timestamp 
        self.mtype = mtype 
        self.url = url 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        timestamp = dictionary.get("timestamp") if dictionary.get("timestamp") else None
        mtype = dictionary.get("type") if dictionary.get("type") else None
        url = dictionary.get("url") if dictionary.get("url") else None
        ap_macs = dictionary.get("ap_macs") if dictionary.get("ap_macs") else APIHelper.SKIP
        # Return an object of this model
        return cls(timestamp,
                   mtype,
                   url,
                   ap_macs)
