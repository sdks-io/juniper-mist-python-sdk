# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mistapi.api_helper import APIHelper


class ApiV1SitesDevicesClearBgpRequest(object):

    """Implementation of the 'Api V1 Sites Devices Clear Bgp Request' model.

    TODO: type model description here.

    Attributes:
        neighbor (string): neighbor ip-address or `all`
        mtype (Type53Enum): TODO: type description here.
        vrf (string): vrf name

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "neighbor": 'neighbor',
        "mtype": 'type',
        "vrf": 'vrf'
    }

    _optionals = [
        'mtype',
        'vrf',
    ]

    def __init__(self,
                 neighbor=None,
                 mtype='hard',
                 vrf=APIHelper.SKIP):
        """Constructor for the ApiV1SitesDevicesClearBgpRequest class"""

        # Initialize members of the class
        self.neighbor = neighbor 
        self.mtype = mtype 
        if vrf is not APIHelper.SKIP:
            self.vrf = vrf 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        neighbor = dictionary.get("neighbor") if dictionary.get("neighbor") else None
        mtype = dictionary.get("type") if dictionary.get("type") else 'hard'
        vrf = dictionary.get("vrf") if dictionary.get("vrf") else APIHelper.SKIP
        # Return an object of this model
        return cls(neighbor,
                   mtype,
                   vrf)
