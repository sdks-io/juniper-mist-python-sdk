# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class Event2(object):

    """Implementation of the 'Event2' model.

    TODO: type model description here.

    Attributes:
        admin_name (string): TODO: type description here.
        device_id (uuid|string): TODO: type description here.
        id (uuid|string): TODO: type description here.
        message (string): TODO: type description here.
        org_id (uuid|string): TODO: type description here.
        site_id (uuid|string): TODO: type description here.
        src_ip (string): TODO: type description here.
        timestamp (float): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "admin_name": 'admin_name',
        "device_id": 'device_id',
        "id": 'id',
        "message": 'message',
        "org_id": 'org_id',
        "site_id": 'site_id',
        "src_ip": 'src_ip',
        "timestamp": 'timestamp'
    }

    def __init__(self,
                 admin_name=None,
                 device_id=None,
                 id=None,
                 message=None,
                 org_id=None,
                 site_id=None,
                 src_ip=None,
                 timestamp=None):
        """Constructor for the Event2 class"""

        # Initialize members of the class
        self.admin_name = admin_name 
        self.device_id = device_id 
        self.id = id 
        self.message = message 
        self.org_id = org_id 
        self.site_id = site_id 
        self.src_ip = src_ip 
        self.timestamp = timestamp 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        admin_name = dictionary.get("admin_name") if dictionary.get("admin_name") else None
        device_id = dictionary.get("device_id") if dictionary.get("device_id") else None
        id = dictionary.get("id") if dictionary.get("id") else None
        message = dictionary.get("message") if dictionary.get("message") else None
        org_id = dictionary.get("org_id") if dictionary.get("org_id") else None
        site_id = dictionary.get("site_id") if dictionary.get("site_id") else None
        src_ip = dictionary.get("src_ip") if dictionary.get("src_ip") else None
        timestamp = dictionary.get("timestamp") if dictionary.get("timestamp") else None
        # Return an object of this model
        return cls(admin_name,
                   device_id,
                   id,
                   message,
                   org_id,
                   site_id,
                   src_ip,
                   timestamp)
