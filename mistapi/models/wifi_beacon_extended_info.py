# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mistapi.api_helper import APIHelper


class WifiBeaconExtendedInfo(object):

    """Implementation of the 'WifiBeaconExtendedInfo' model.

    TODO: type model description here.

    Attributes:
        frame_ctrl (int): frame control field of 802.11 header
        payload (string): Extended Info Payload associated with frame
        seq_ctrl (int): sequence control field of 802.11 header

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "frame_ctrl": 'frame_ctrl',
        "payload": 'payload',
        "seq_ctrl": 'seq_ctrl'
    }

    _optionals = [
        'frame_ctrl',
        'payload',
        'seq_ctrl',
    ]

    def __init__(self,
                 frame_ctrl=APIHelper.SKIP,
                 payload=APIHelper.SKIP,
                 seq_ctrl=APIHelper.SKIP):
        """Constructor for the WifiBeaconExtendedInfo class"""

        # Initialize members of the class
        if frame_ctrl is not APIHelper.SKIP:
            self.frame_ctrl = frame_ctrl 
        if payload is not APIHelper.SKIP:
            self.payload = payload 
        if seq_ctrl is not APIHelper.SKIP:
            self.seq_ctrl = seq_ctrl 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        frame_ctrl = dictionary.get("frame_ctrl") if dictionary.get("frame_ctrl") else APIHelper.SKIP
        payload = dictionary.get("payload") if dictionary.get("payload") else APIHelper.SKIP
        seq_ctrl = dictionary.get("seq_ctrl") if dictionary.get("seq_ctrl") else APIHelper.SKIP
        # Return an object of this model
        return cls(frame_ctrl,
                   payload,
                   seq_ctrl)
