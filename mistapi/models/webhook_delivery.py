# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mistapi.api_helper import APIHelper


class WebhookDelivery(object):

    """Implementation of the 'webhook_delivery' model.

    TODO: type model description here.

    Attributes:
        error (string): error message, if there is one
        id (uuid|string): delivery ID
        org_id (uuid|string): TODO: type description here.
        req_headers (string): HTTP request headers
        req_payload (string): HTTP request payload
        req_url (string): HTTP request URL
        resp_body (string): HTTP response body
        resp_headers (string): HTTP response headers
        site_id (uuid|string): TODO: type description here.
        status_code (int): TODO: type description here.
        timestamp (float): TODO: type description here.
        topic (Topic1Enum): webhook topic
        webhook_id (uuid|string): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "error": 'error',
        "id": 'id',
        "org_id": 'org_id',
        "req_headers": 'req_headers',
        "req_payload": 'req_payload',
        "req_url": 'req_url',
        "resp_body": 'resp_body',
        "resp_headers": 'resp_headers',
        "site_id": 'site_id',
        "status_code": 'status_code',
        "timestamp": 'timestamp',
        "topic": 'topic',
        "webhook_id": 'webhook_id'
    }

    _optionals = [
        'error',
        'id',
        'org_id',
        'req_headers',
        'req_payload',
        'req_url',
        'resp_body',
        'resp_headers',
        'site_id',
        'status_code',
        'timestamp',
        'topic',
        'webhook_id',
    ]

    def __init__(self,
                 error=APIHelper.SKIP,
                 id=APIHelper.SKIP,
                 org_id=APIHelper.SKIP,
                 req_headers=APIHelper.SKIP,
                 req_payload=APIHelper.SKIP,
                 req_url=APIHelper.SKIP,
                 resp_body=APIHelper.SKIP,
                 resp_headers=APIHelper.SKIP,
                 site_id=APIHelper.SKIP,
                 status_code=APIHelper.SKIP,
                 timestamp=APIHelper.SKIP,
                 topic=APIHelper.SKIP,
                 webhook_id=APIHelper.SKIP):
        """Constructor for the WebhookDelivery class"""

        # Initialize members of the class
        if error is not APIHelper.SKIP:
            self.error = error 
        if id is not APIHelper.SKIP:
            self.id = id 
        if org_id is not APIHelper.SKIP:
            self.org_id = org_id 
        if req_headers is not APIHelper.SKIP:
            self.req_headers = req_headers 
        if req_payload is not APIHelper.SKIP:
            self.req_payload = req_payload 
        if req_url is not APIHelper.SKIP:
            self.req_url = req_url 
        if resp_body is not APIHelper.SKIP:
            self.resp_body = resp_body 
        if resp_headers is not APIHelper.SKIP:
            self.resp_headers = resp_headers 
        if site_id is not APIHelper.SKIP:
            self.site_id = site_id 
        if status_code is not APIHelper.SKIP:
            self.status_code = status_code 
        if timestamp is not APIHelper.SKIP:
            self.timestamp = timestamp 
        if topic is not APIHelper.SKIP:
            self.topic = topic 
        if webhook_id is not APIHelper.SKIP:
            self.webhook_id = webhook_id 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        error = dictionary.get("error") if dictionary.get("error") else APIHelper.SKIP
        id = dictionary.get("id") if dictionary.get("id") else APIHelper.SKIP
        org_id = dictionary.get("org_id") if dictionary.get("org_id") else APIHelper.SKIP
        req_headers = dictionary.get("req_headers") if dictionary.get("req_headers") else APIHelper.SKIP
        req_payload = dictionary.get("req_payload") if dictionary.get("req_payload") else APIHelper.SKIP
        req_url = dictionary.get("req_url") if dictionary.get("req_url") else APIHelper.SKIP
        resp_body = dictionary.get("resp_body") if dictionary.get("resp_body") else APIHelper.SKIP
        resp_headers = dictionary.get("resp_headers") if dictionary.get("resp_headers") else APIHelper.SKIP
        site_id = dictionary.get("site_id") if dictionary.get("site_id") else APIHelper.SKIP
        status_code = dictionary.get("status_code") if dictionary.get("status_code") else APIHelper.SKIP
        timestamp = dictionary.get("timestamp") if dictionary.get("timestamp") else APIHelper.SKIP
        topic = dictionary.get("topic") if dictionary.get("topic") else APIHelper.SKIP
        webhook_id = dictionary.get("webhook_id") if dictionary.get("webhook_id") else APIHelper.SKIP
        # Return an object of this model
        return cls(error,
                   id,
                   org_id,
                   req_headers,
                   req_payload,
                   req_url,
                   resp_body,
                   resp_headers,
                   site_id,
                   status_code,
                   timestamp,
                   topic,
                   webhook_id)
