# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mistapi.api_helper import APIHelper


class TuntermIpConfig1(object):

    """Implementation of the 'TuntermIpConfig1' model.

    TODO: type model description here.

    Attributes:
        gateway (string): TODO: type description here.
        ip (string): TODO: type description here.
        netmask (string): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "gateway": 'gateway',
        "ip": 'ip',
        "netmask": 'netmask'
    }

    _optionals = [
        'gateway',
        'ip',
        'netmask',
    ]

    def __init__(self,
                 gateway=APIHelper.SKIP,
                 ip=APIHelper.SKIP,
                 netmask=APIHelper.SKIP):
        """Constructor for the TuntermIpConfig1 class"""

        # Initialize members of the class
        if gateway is not APIHelper.SKIP:
            self.gateway = gateway 
        if ip is not APIHelper.SKIP:
            self.ip = ip 
        if netmask is not APIHelper.SKIP:
            self.netmask = netmask 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        gateway = dictionary.get("gateway") if dictionary.get("gateway") else APIHelper.SKIP
        ip = dictionary.get("ip") if dictionary.get("ip") else APIHelper.SKIP
        netmask = dictionary.get("netmask") if dictionary.get("netmask") else APIHelper.SKIP
        # Return an object of this model
        return cls(gateway,
                   ip,
                   netmask)
