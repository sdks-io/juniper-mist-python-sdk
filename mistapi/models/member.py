# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mistapi.api_helper import APIHelper


class Member(object):

    """Implementation of the 'Member' model.

    TODO: type model description here.

    Attributes:
        mac (string): fpc0, same as the mac of device_id
        vc_role (VcRoleEnum): Both vc_role master and backup will be matched
            to routing-engine role in Junos preprovisioned VC config

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "mac": 'mac',
        "vc_role": 'vc_role'
    }

    _optionals = [
        'mac',
        'vc_role',
    ]

    def __init__(self,
                 mac=APIHelper.SKIP,
                 vc_role=APIHelper.SKIP):
        """Constructor for the Member class"""

        # Initialize members of the class
        if mac is not APIHelper.SKIP:
            self.mac = mac 
        if vc_role is not APIHelper.SKIP:
            self.vc_role = vc_role 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        mac = dictionary.get("mac") if dictionary.get("mac") else APIHelper.SKIP
        vc_role = dictionary.get("vc_role") if dictionary.get("vc_role") else APIHelper.SKIP
        # Return an object of this model
        return cls(mac,
                   vc_role)
