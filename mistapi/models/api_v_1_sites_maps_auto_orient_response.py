# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mistapi.api_helper import APIHelper


class ApiV1SitesMapsAutoOrientResponse(object):

    """Implementation of the 'Api V1 Sites Maps Auto Orient Response' model.

    TODO: type model description here.

    Attributes:
        state (State2Enum): The state of auto orient for a given map derived
            from an Enum
        time_queued (float): Time when auto orient process was last queued for
            this map

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "state": 'state',
        "time_queued": 'time_queued'
    }

    _optionals = [
        'state',
        'time_queued',
    ]

    def __init__(self,
                 state=APIHelper.SKIP,
                 time_queued=APIHelper.SKIP):
        """Constructor for the ApiV1SitesMapsAutoOrientResponse class"""

        # Initialize members of the class
        if state is not APIHelper.SKIP:
            self.state = state 
        if time_queued is not APIHelper.SKIP:
            self.time_queued = time_queued 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        state = dictionary.get("state") if dictionary.get("state") else APIHelper.SKIP
        time_queued = dictionary.get("time_queued") if dictionary.get("time_queued") else APIHelper.SKIP
        # Return an object of this model
        return cls(state,
                   time_queued)
