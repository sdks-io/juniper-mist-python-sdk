# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mistapi.api_helper import APIHelper


class ApiV1SitesMapsAutoPlacementResponse(object):

    """Implementation of the 'Api V1 Sites Maps Auto Placement Response' model.

    TODO: type model description here.

    Attributes:
        end_time (float): time when autoplacement completed or was manually
            stopped
        estimated_time_left (float): estimate of the time to completion
        start_time (float): time when autoplacement process was last queued
            for this map
        status (Status8Enum): the status of autoplacement for a given map

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "end_time": 'end_time',
        "estimated_time_left": 'estimated_time_left',
        "start_time": 'start_time',
        "status": 'status'
    }

    _optionals = [
        'end_time',
        'estimated_time_left',
        'start_time',
        'status',
    ]

    def __init__(self,
                 end_time=APIHelper.SKIP,
                 estimated_time_left=APIHelper.SKIP,
                 start_time=APIHelper.SKIP,
                 status=APIHelper.SKIP):
        """Constructor for the ApiV1SitesMapsAutoPlacementResponse class"""

        # Initialize members of the class
        if end_time is not APIHelper.SKIP:
            self.end_time = end_time 
        if estimated_time_left is not APIHelper.SKIP:
            self.estimated_time_left = estimated_time_left 
        if start_time is not APIHelper.SKIP:
            self.start_time = start_time 
        if status is not APIHelper.SKIP:
            self.status = status 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        end_time = dictionary.get("end_time") if dictionary.get("end_time") else APIHelper.SKIP
        estimated_time_left = dictionary.get("estimated_time_left") if dictionary.get("estimated_time_left") else APIHelper.SKIP
        start_time = dictionary.get("start_time") if dictionary.get("start_time") else APIHelper.SKIP
        status = dictionary.get("status") if dictionary.get("status") else APIHelper.SKIP
        # Return an object of this model
        return cls(end_time,
                   estimated_time_left,
                   start_time,
                   status)
