# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mistapi.api_helper import APIHelper


class AuthServer1(object):

    """Implementation of the 'AuthServer1' model.

    TODO: type model description here.

    Attributes:
        host (string): ip / hostname of RADIUS server
        keywrap_enabled (bool): if used for Mist APs, enable keywrap
            algorithm. Default is false
        keywrap_format (KeywrapFormatEnum): if used for Mist APs
        keywrap_kek (string): if used for Mist APs, encryption key
        keywrap_mack (string): if used for Mist APs, Message Authentication
            Code Key
        port (int): Auth port of RADIUS server
        secret (string): secret of RADIUS server
        ssids (list of string): list of ssids that will use this server if
            match_ssid is true and match is found

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "host": 'host',
        "keywrap_enabled": 'keywrap_enabled',
        "keywrap_format": 'keywrap_format',
        "keywrap_kek": 'keywrap_kek',
        "keywrap_mack": 'keywrap_mack',
        "port": 'port',
        "secret": 'secret',
        "ssids": 'ssids'
    }

    _optionals = [
        'host',
        'keywrap_enabled',
        'keywrap_format',
        'keywrap_kek',
        'keywrap_mack',
        'port',
        'secret',
        'ssids',
    ]

    def __init__(self,
                 host=APIHelper.SKIP,
                 keywrap_enabled=APIHelper.SKIP,
                 keywrap_format=APIHelper.SKIP,
                 keywrap_kek=APIHelper.SKIP,
                 keywrap_mack=APIHelper.SKIP,
                 port=1812,
                 secret=APIHelper.SKIP,
                 ssids=APIHelper.SKIP):
        """Constructor for the AuthServer1 class"""

        # Initialize members of the class
        if host is not APIHelper.SKIP:
            self.host = host 
        if keywrap_enabled is not APIHelper.SKIP:
            self.keywrap_enabled = keywrap_enabled 
        if keywrap_format is not APIHelper.SKIP:
            self.keywrap_format = keywrap_format 
        if keywrap_kek is not APIHelper.SKIP:
            self.keywrap_kek = keywrap_kek 
        if keywrap_mack is not APIHelper.SKIP:
            self.keywrap_mack = keywrap_mack 
        self.port = port 
        if secret is not APIHelper.SKIP:
            self.secret = secret 
        if ssids is not APIHelper.SKIP:
            self.ssids = ssids 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        host = dictionary.get("host") if dictionary.get("host") else APIHelper.SKIP
        keywrap_enabled = dictionary.get("keywrap_enabled") if "keywrap_enabled" in dictionary.keys() else APIHelper.SKIP
        keywrap_format = dictionary.get("keywrap_format") if dictionary.get("keywrap_format") else APIHelper.SKIP
        keywrap_kek = dictionary.get("keywrap_kek") if dictionary.get("keywrap_kek") else APIHelper.SKIP
        keywrap_mack = dictionary.get("keywrap_mack") if dictionary.get("keywrap_mack") else APIHelper.SKIP
        port = dictionary.get("port") if dictionary.get("port") else 1812
        secret = dictionary.get("secret") if dictionary.get("secret") else APIHelper.SKIP
        ssids = dictionary.get("ssids") if dictionary.get("ssids") else APIHelper.SKIP
        # Return an object of this model
        return cls(host,
                   keywrap_enabled,
                   keywrap_format,
                   keywrap_kek,
                   keywrap_mack,
                   port,
                   secret,
                   ssids)
