# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mistapi.api_helper import APIHelper


class Apps1(object):

    """Implementation of the 'Apps1' model.

    TODO: type model description here.

    Attributes:
        app (string): TODO: type description here.
        degraded (int): TODO: type description here.
        duration (int): TODO: type description here.
        name (string): TODO: type description here.
        threshold (int): TODO: type description here.
        total (int): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "app": 'app',
        "degraded": 'degraded',
        "duration": 'duration',
        "name": 'name',
        "threshold": 'threshold',
        "total": 'total'
    }

    _optionals = [
        'app',
        'degraded',
        'duration',
        'name',
        'threshold',
        'total',
    ]

    def __init__(self,
                 app=APIHelper.SKIP,
                 degraded=APIHelper.SKIP,
                 duration=APIHelper.SKIP,
                 name=APIHelper.SKIP,
                 threshold=APIHelper.SKIP,
                 total=APIHelper.SKIP):
        """Constructor for the Apps1 class"""

        # Initialize members of the class
        if app is not APIHelper.SKIP:
            self.app = app 
        if degraded is not APIHelper.SKIP:
            self.degraded = degraded 
        if duration is not APIHelper.SKIP:
            self.duration = duration 
        if name is not APIHelper.SKIP:
            self.name = name 
        if threshold is not APIHelper.SKIP:
            self.threshold = threshold 
        if total is not APIHelper.SKIP:
            self.total = total 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        app = dictionary.get("app") if dictionary.get("app") else APIHelper.SKIP
        degraded = dictionary.get("degraded") if dictionary.get("degraded") else APIHelper.SKIP
        duration = dictionary.get("duration") if dictionary.get("duration") else APIHelper.SKIP
        name = dictionary.get("name") if dictionary.get("name") else APIHelper.SKIP
        threshold = dictionary.get("threshold") if dictionary.get("threshold") else APIHelper.SKIP
        total = dictionary.get("total") if dictionary.get("total") else APIHelper.SKIP
        # Return an object of this model
        return cls(app,
                   degraded,
                   duration,
                   name,
                   threshold,
                   total)
