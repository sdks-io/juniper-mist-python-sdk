# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mistapi.api_helper import APIHelper


class ApiV1MspsLicensesRequest(object):

    """Implementation of the 'Api V1 Msps Licenses Request' model.

    TODO: type model description here.

    Attributes:
        dst_org_id (string): required if `op`==`amend`, destination org id
        notes (string): required if `op`== `annotate`
        op (Op2Enum): TODO: type description here.
        quantity (float): required if `op`==`amend`
        subscription_id (string): required if `op`==`unamend` or `op`==
            `annotate`

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "op": 'op',
        "dst_org_id": 'dst_org_id',
        "notes": 'notes',
        "quantity": 'quantity',
        "subscription_id": 'subscription_id'
    }

    _optionals = [
        'dst_org_id',
        'notes',
        'quantity',
        'subscription_id',
    ]

    def __init__(self,
                 op=None,
                 dst_org_id=APIHelper.SKIP,
                 notes=APIHelper.SKIP,
                 quantity=APIHelper.SKIP,
                 subscription_id=APIHelper.SKIP):
        """Constructor for the ApiV1MspsLicensesRequest class"""

        # Initialize members of the class
        if dst_org_id is not APIHelper.SKIP:
            self.dst_org_id = dst_org_id 
        if notes is not APIHelper.SKIP:
            self.notes = notes 
        self.op = op 
        if quantity is not APIHelper.SKIP:
            self.quantity = quantity 
        if subscription_id is not APIHelper.SKIP:
            self.subscription_id = subscription_id 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        op = dictionary.get("op") if dictionary.get("op") else None
        dst_org_id = dictionary.get("dst_org_id") if dictionary.get("dst_org_id") else APIHelper.SKIP
        notes = dictionary.get("notes") if dictionary.get("notes") else APIHelper.SKIP
        quantity = dictionary.get("quantity") if dictionary.get("quantity") else APIHelper.SKIP
        subscription_id = dictionary.get("subscription_id") if dictionary.get("subscription_id") else APIHelper.SKIP
        # Return an object of this model
        return cls(op,
                   dst_org_id,
                   notes,
                   quantity,
                   subscription_id)
