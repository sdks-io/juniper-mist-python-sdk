# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mistapi.api_helper import APIHelper


class Total(object):

    """Implementation of the 'Total' model.

    TODO: type model description here.

    Attributes:
        num_aps (string): TODO: type description here.
        num_clients (string): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "num_aps": 'num_aps',
        "num_clients": 'num_clients'
    }

    _optionals = [
        'num_aps',
        'num_clients',
    ]

    def __init__(self,
                 num_aps=APIHelper.SKIP,
                 num_clients=APIHelper.SKIP):
        """Constructor for the Total class"""

        # Initialize members of the class
        if num_aps is not APIHelper.SKIP:
            self.num_aps = num_aps 
        if num_clients is not APIHelper.SKIP:
            self.num_clients = num_clients 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        num_aps = dictionary.get("num_aps") if dictionary.get("num_aps") else APIHelper.SKIP
        num_clients = dictionary.get("num_clients") if dictionary.get("num_clients") else APIHelper.SKIP
        # Return an object of this model
        return cls(num_aps,
                   num_clients)
