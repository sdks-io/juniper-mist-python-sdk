# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mistapi.api_helper import APIHelper


class SwitchMgmt3(object):

    """Implementation of the 'SwitchMgmt3' model.

    TODO: type model description here.

    Attributes:
        ap_affinity_threshold (int): If the field is set in both site/setting
            and org/setting, the value from site/setting will be used.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "ap_affinity_threshold": 'ap_affinity_threshold'
    }

    _optionals = [
        'ap_affinity_threshold',
    ]

    def __init__(self,
                 ap_affinity_threshold=12):
        """Constructor for the SwitchMgmt3 class"""

        # Initialize members of the class
        self.ap_affinity_threshold = ap_affinity_threshold 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        ap_affinity_threshold = dictionary.get("ap_affinity_threshold") if dictionary.get("ap_affinity_threshold") else 12
        # Return an object of this model
        return cls(ap_affinity_threshold)
