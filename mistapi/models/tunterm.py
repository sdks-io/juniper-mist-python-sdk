# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mistapi.api_helper import APIHelper


class Tunterm(object):

    """Implementation of the 'Tunterm' model.

    TODO: type model description here.

    Attributes:
        ext_ip (string): external IP from ep-terminatorâ€™s point of view. valid
            only for service having its own cloud connection
        last_seen (int): timestamp when the last stats is seen (cloud unix
            time, in second). valid only for service having its own stats or
            whole system (last among last_seen of all services)
        package_state (string): package/service installation state.
        package_version (string): package/service installation state.
        running_state (string): service running state.
        uptime (int): service uptime.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "ext_ip": 'ext_ip',
        "last_seen": 'last_seen',
        "package_state": 'package_state',
        "package_version": 'package_version',
        "running_state": 'running_state',
        "uptime": 'uptime'
    }

    _optionals = [
        'ext_ip',
        'last_seen',
        'package_state',
        'package_version',
        'running_state',
        'uptime',
    ]

    def __init__(self,
                 ext_ip=APIHelper.SKIP,
                 last_seen=APIHelper.SKIP,
                 package_state=APIHelper.SKIP,
                 package_version=APIHelper.SKIP,
                 running_state=APIHelper.SKIP,
                 uptime=APIHelper.SKIP):
        """Constructor for the Tunterm class"""

        # Initialize members of the class
        if ext_ip is not APIHelper.SKIP:
            self.ext_ip = ext_ip 
        if last_seen is not APIHelper.SKIP:
            self.last_seen = last_seen 
        if package_state is not APIHelper.SKIP:
            self.package_state = package_state 
        if package_version is not APIHelper.SKIP:
            self.package_version = package_version 
        if running_state is not APIHelper.SKIP:
            self.running_state = running_state 
        if uptime is not APIHelper.SKIP:
            self.uptime = uptime 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        ext_ip = dictionary.get("ext_ip") if dictionary.get("ext_ip") else APIHelper.SKIP
        last_seen = dictionary.get("last_seen") if dictionary.get("last_seen") else APIHelper.SKIP
        package_state = dictionary.get("package_state") if dictionary.get("package_state") else APIHelper.SKIP
        package_version = dictionary.get("package_version") if dictionary.get("package_version") else APIHelper.SKIP
        running_state = dictionary.get("running_state") if dictionary.get("running_state") else APIHelper.SKIP
        uptime = dictionary.get("uptime") if dictionary.get("uptime") else APIHelper.SKIP
        # Return an object of this model
        return cls(ext_ip,
                   last_seen,
                   package_state,
                   package_version,
                   running_state,
                   uptime)
