# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mistapi.api_helper import APIHelper


class ApiV1LoginRequest(object):

    """Implementation of the 'Api V1 Login Request' model.

    TODO: type model description here.

    Attributes:
        email (string): TODO: type description here.
        password (string): TODO: type description here.
        two_factor (string): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "email": 'email',
        "password": 'password',
        "two_factor": 'two_factor'
    }

    _optionals = [
        'two_factor',
    ]

    def __init__(self,
                 email=None,
                 password=None,
                 two_factor=APIHelper.SKIP):
        """Constructor for the ApiV1LoginRequest class"""

        # Initialize members of the class
        self.email = email 
        self.password = password 
        if two_factor is not APIHelper.SKIP:
            self.two_factor = two_factor 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        email = dictionary.get("email") if dictionary.get("email") else None
        password = dictionary.get("password") if dictionary.get("password") else None
        two_factor = dictionary.get("two_factor") if dictionary.get("two_factor") else APIHelper.SKIP
        # Return an object of this model
        return cls(email,
                   password,
                   two_factor)
