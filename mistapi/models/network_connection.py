# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class NetworkConnection(object):

    """Implementation of the 'NetworkConnection' model.

    various network connection info for the SDK client (if known, else
    omitted), with RSSI in dBm, and signal level as

    Attributes:
        mac (string): TODO: type description here.
        rssi (float): TODO: type description here.
        signal_level (float): TODO: type description here.
        mtype (string): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "mac": 'mac',
        "rssi": 'rssi',
        "signal_level": 'signal_level',
        "mtype": 'type'
    }

    def __init__(self,
                 mac=None,
                 rssi=None,
                 signal_level=None,
                 mtype=None):
        """Constructor for the NetworkConnection class"""

        # Initialize members of the class
        self.mac = mac 
        self.rssi = rssi 
        self.signal_level = signal_level 
        self.mtype = mtype 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        mac = dictionary.get("mac") if dictionary.get("mac") else None
        rssi = dictionary.get("rssi") if dictionary.get("rssi") else None
        signal_level = dictionary.get("signal_level") if dictionary.get("signal_level") else None
        mtype = dictionary.get("type") if dictionary.get("type") else None
        # Return an object of this model
        return cls(mac,
                   rssi,
                   signal_level,
                   mtype)
