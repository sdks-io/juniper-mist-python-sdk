# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mistapi.api_helper import APIHelper


class StatsClientWired(object):

    """Implementation of the 'stats_client_wired' model.

    TODO: type model description here.

    Attributes:
        id (string): TODO: type description here.
        ttl (float): TTL of the validity of the stat
        auth_state (string): client authorization status
        device_id (string): Device ID the client is connected to
        eth_port (string): port on AP where the wired client is connected
        last_seen (float): time when last Tx/Rx observed
        mac (string): client mac
        rx_bytes (float): amount of traffic sent to client since client
            connects
        rx_pkts (float): amount of traffic sent to client since client
            connects
        site_id (string): TODO: type description here.
        tx_bytes (float): amount of traffic received from client since client
            connects
        tx_pkts (float): amount of traffic received from client since client
            connects
        uptime (float): how long, in seconds, has the client been connected
        vlan_id (float): vlan id, could be empty

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "mac": 'mac',
        "id": '_id',
        "ttl": '_ttl',
        "auth_state": 'auth_state',
        "device_id": 'device_id',
        "eth_port": 'eth_port',
        "last_seen": 'last_seen',
        "rx_bytes": 'rx_bytes',
        "rx_pkts": 'rx_pkts',
        "site_id": 'site_id',
        "tx_bytes": 'tx_bytes',
        "tx_pkts": 'tx_pkts',
        "uptime": 'uptime',
        "vlan_id": 'vlan_id'
    }

    _optionals = [
        'id',
        'ttl',
        'auth_state',
        'device_id',
        'eth_port',
        'last_seen',
        'rx_bytes',
        'rx_pkts',
        'site_id',
        'tx_bytes',
        'tx_pkts',
        'uptime',
        'vlan_id',
    ]

    def __init__(self,
                 mac=None,
                 id=APIHelper.SKIP,
                 ttl=APIHelper.SKIP,
                 auth_state=APIHelper.SKIP,
                 device_id=APIHelper.SKIP,
                 eth_port=APIHelper.SKIP,
                 last_seen=APIHelper.SKIP,
                 rx_bytes=APIHelper.SKIP,
                 rx_pkts=APIHelper.SKIP,
                 site_id=APIHelper.SKIP,
                 tx_bytes=APIHelper.SKIP,
                 tx_pkts=APIHelper.SKIP,
                 uptime=APIHelper.SKIP,
                 vlan_id=APIHelper.SKIP):
        """Constructor for the StatsClientWired class"""

        # Initialize members of the class
        if id is not APIHelper.SKIP:
            self.id = id 
        if ttl is not APIHelper.SKIP:
            self.ttl = ttl 
        if auth_state is not APIHelper.SKIP:
            self.auth_state = auth_state 
        if device_id is not APIHelper.SKIP:
            self.device_id = device_id 
        if eth_port is not APIHelper.SKIP:
            self.eth_port = eth_port 
        if last_seen is not APIHelper.SKIP:
            self.last_seen = last_seen 
        self.mac = mac 
        if rx_bytes is not APIHelper.SKIP:
            self.rx_bytes = rx_bytes 
        if rx_pkts is not APIHelper.SKIP:
            self.rx_pkts = rx_pkts 
        if site_id is not APIHelper.SKIP:
            self.site_id = site_id 
        if tx_bytes is not APIHelper.SKIP:
            self.tx_bytes = tx_bytes 
        if tx_pkts is not APIHelper.SKIP:
            self.tx_pkts = tx_pkts 
        if uptime is not APIHelper.SKIP:
            self.uptime = uptime 
        if vlan_id is not APIHelper.SKIP:
            self.vlan_id = vlan_id 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        mac = dictionary.get("mac") if dictionary.get("mac") else None
        id = dictionary.get("_id") if dictionary.get("_id") else APIHelper.SKIP
        ttl = dictionary.get("_ttl") if dictionary.get("_ttl") else APIHelper.SKIP
        auth_state = dictionary.get("auth_state") if dictionary.get("auth_state") else APIHelper.SKIP
        device_id = dictionary.get("device_id") if dictionary.get("device_id") else APIHelper.SKIP
        eth_port = dictionary.get("eth_port") if dictionary.get("eth_port") else APIHelper.SKIP
        last_seen = dictionary.get("last_seen") if dictionary.get("last_seen") else APIHelper.SKIP
        rx_bytes = dictionary.get("rx_bytes") if dictionary.get("rx_bytes") else APIHelper.SKIP
        rx_pkts = dictionary.get("rx_pkts") if dictionary.get("rx_pkts") else APIHelper.SKIP
        site_id = dictionary.get("site_id") if dictionary.get("site_id") else APIHelper.SKIP
        tx_bytes = dictionary.get("tx_bytes") if dictionary.get("tx_bytes") else APIHelper.SKIP
        tx_pkts = dictionary.get("tx_pkts") if dictionary.get("tx_pkts") else APIHelper.SKIP
        uptime = dictionary.get("uptime") if dictionary.get("uptime") else APIHelper.SKIP
        vlan_id = dictionary.get("vlan_id") if dictionary.get("vlan_id") else APIHelper.SKIP
        # Return an object of this model
        return cls(mac,
                   id,
                   ttl,
                   auth_state,
                   device_id,
                   eth_port,
                   last_seen,
                   rx_bytes,
                   rx_pkts,
                   site_id,
                   tx_bytes,
                   tx_pkts,
                   uptime,
                   vlan_id)
