# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mistapi.api_helper import APIHelper


class DeviceVersion(object):

    """Implementation of the 'DeviceVersion' model.

    TODO: type model description here.

    Attributes:
        model (string): Device model (as seen in the device stats)
        tag (string): annotation, stable / beta / alpha. Or it can be empty or
            nothing which is likely a dev build
        version (string): firmware version

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "model": 'model',
        "version": 'version',
        "tag": 'tag'
    }

    _optionals = [
        'tag',
    ]

    def __init__(self,
                 model=None,
                 version=None,
                 tag=APIHelper.SKIP):
        """Constructor for the DeviceVersion class"""

        # Initialize members of the class
        self.model = model 
        if tag is not APIHelper.SKIP:
            self.tag = tag 
        self.version = version 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        model = dictionary.get("model") if dictionary.get("model") else None
        version = dictionary.get("version") if dictionary.get("version") else None
        tag = dictionary.get("tag") if dictionary.get("tag") else APIHelper.SKIP
        # Return an object of this model
        return cls(model,
                   version,
                   tag)
