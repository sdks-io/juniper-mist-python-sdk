# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mistapi.api_helper import APIHelper


class Result16(object):

    """Implementation of the 'Result16' model.

    TODO: type model description here.

    Attributes:
        ap_mac (string): TODO: type description here.
        client_mac (string): TODO: type description here.
        fromap (string): TODO: type description here.
        latency (float): TODO: type description here.
        ssid (string): TODO: type description here.
        subtype (string): TODO: type description here.
        timestamp (float): timestamp of the event in nsec
        mtype (Type56Enum): success / fail / none / poor/ pingpong / slow

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "ap_mac": 'ap_mac',
        "client_mac": 'client_mac',
        "fromap": 'fromap',
        "latency": 'latency',
        "ssid": 'ssid',
        "timestamp": 'timestamp',
        "subtype": 'subtype',
        "mtype": 'type'
    }

    _optionals = [
        'subtype',
        'mtype',
    ]

    def __init__(self,
                 ap_mac=None,
                 client_mac=None,
                 fromap=None,
                 latency=None,
                 ssid=None,
                 timestamp=None,
                 subtype=APIHelper.SKIP,
                 mtype=APIHelper.SKIP):
        """Constructor for the Result16 class"""

        # Initialize members of the class
        self.ap_mac = ap_mac 
        self.client_mac = client_mac 
        self.fromap = fromap 
        self.latency = latency 
        self.ssid = ssid 
        if subtype is not APIHelper.SKIP:
            self.subtype = subtype 
        self.timestamp = timestamp 
        if mtype is not APIHelper.SKIP:
            self.mtype = mtype 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        ap_mac = dictionary.get("ap_mac") if dictionary.get("ap_mac") else None
        client_mac = dictionary.get("client_mac") if dictionary.get("client_mac") else None
        fromap = dictionary.get("fromap") if dictionary.get("fromap") else None
        latency = dictionary.get("latency") if dictionary.get("latency") else None
        ssid = dictionary.get("ssid") if dictionary.get("ssid") else None
        timestamp = dictionary.get("timestamp") if dictionary.get("timestamp") else None
        subtype = dictionary.get("subtype") if dictionary.get("subtype") else APIHelper.SKIP
        mtype = dictionary.get("type") if dictionary.get("type") else APIHelper.SKIP
        # Return an object of this model
        return cls(ap_mac,
                   client_mac,
                   fromap,
                   latency,
                   ssid,
                   timestamp,
                   subtype,
                   mtype)
