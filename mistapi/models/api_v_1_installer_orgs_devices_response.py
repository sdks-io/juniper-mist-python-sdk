# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mistapi.api_helper import APIHelper


class ApiV1InstallerOrgsDevicesResponse(object):

    """Implementation of the 'Api V1 Installer Orgs Devices Response' model.

    TODO: type model description here.

    Attributes:
        connected (bool): TODO: type description here.
        height (float): TODO: type description here.
        map_id (uuid|string): TODO: type description here.
        orientation (float): TODO: type description here.
        x (float): TODO: type description here.
        y (float): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "connected": 'connected',
        "height": 'height',
        "map_id": 'map_id',
        "orientation": 'orientation',
        "x": 'x',
        "y": 'y'
    }

    _optionals = [
        'height',
        'map_id',
        'orientation',
        'x',
        'y',
    ]

    def __init__(self,
                 connected=None,
                 height=APIHelper.SKIP,
                 map_id=APIHelper.SKIP,
                 orientation=APIHelper.SKIP,
                 x=APIHelper.SKIP,
                 y=APIHelper.SKIP):
        """Constructor for the ApiV1InstallerOrgsDevicesResponse class"""

        # Initialize members of the class
        self.connected = connected 
        if height is not APIHelper.SKIP:
            self.height = height 
        if map_id is not APIHelper.SKIP:
            self.map_id = map_id 
        if orientation is not APIHelper.SKIP:
            self.orientation = orientation 
        if x is not APIHelper.SKIP:
            self.x = x 
        if y is not APIHelper.SKIP:
            self.y = y 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        connected = dictionary.get("connected") if "connected" in dictionary.keys() else None
        height = dictionary.get("height") if dictionary.get("height") else APIHelper.SKIP
        map_id = dictionary.get("map_id") if dictionary.get("map_id") else APIHelper.SKIP
        orientation = dictionary.get("orientation") if dictionary.get("orientation") else APIHelper.SKIP
        x = dictionary.get("x") if dictionary.get("x") else APIHelper.SKIP
        y = dictionary.get("y") if dictionary.get("y") else APIHelper.SKIP
        # Return an object of this model
        return cls(connected,
                   height,
                   map_id,
                   orientation,
                   x,
                   y)
