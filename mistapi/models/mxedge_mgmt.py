# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mistapi.api_helper import APIHelper


class MxedgeMgmt(object):

    """Implementation of the 'mxedge_mgmt' model.

    TODO: type model description here.

    Attributes:
        mist_password (string): TODO: type description here.
        root_password (string): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "mist_password": 'mist_password',
        "root_password": 'root_password'
    }

    _optionals = [
        'mist_password',
        'root_password',
    ]

    def __init__(self,
                 mist_password=APIHelper.SKIP,
                 root_password=APIHelper.SKIP):
        """Constructor for the MxedgeMgmt class"""

        # Initialize members of the class
        if mist_password is not APIHelper.SKIP:
            self.mist_password = mist_password 
        if root_password is not APIHelper.SKIP:
            self.root_password = root_password 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        mist_password = dictionary.get("mist_password") if dictionary.get("mist_password") else APIHelper.SKIP
        root_password = dictionary.get("root_password") if dictionary.get("root_password") else APIHelper.SKIP
        # Return an object of this model
        return cls(mist_password,
                   root_password)
