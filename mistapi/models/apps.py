# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mistapi.api_helper import APIHelper
from mistapi.models.skype_business_video import SkypeBusinessVideo
from mistapi.models.skype_business_voice import SkypeBusinessVoice


class Apps(object):

    """Implementation of the 'Apps' model.

    TODO: type model description here.

    Attributes:
        skype_business_video (SkypeBusinessVideo): TODO: type description
            here.
        skype_business_voice (SkypeBusinessVoice): TODO: type description
            here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "skype_business_video": 'skype-business-video',
        "skype_business_voice": 'skype-business-voice'
    }

    _optionals = [
        'skype_business_video',
        'skype_business_voice',
    ]

    def __init__(self,
                 skype_business_video=APIHelper.SKIP,
                 skype_business_voice=APIHelper.SKIP):
        """Constructor for the Apps class"""

        # Initialize members of the class
        if skype_business_video is not APIHelper.SKIP:
            self.skype_business_video = skype_business_video 
        if skype_business_voice is not APIHelper.SKIP:
            self.skype_business_voice = skype_business_voice 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        skype_business_video = SkypeBusinessVideo.from_dictionary(dictionary.get('skype-business-video')) if 'skype-business-video' in dictionary.keys() else APIHelper.SKIP
        skype_business_voice = SkypeBusinessVoice.from_dictionary(dictionary.get('skype-business-voice')) if 'skype-business-voice' in dictionary.keys() else APIHelper.SKIP
        # Return an object of this model
        return cls(skype_business_video,
                   skype_business_voice)
