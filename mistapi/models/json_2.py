# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mistapi.api_helper import APIHelper
from mistapi.models.transform import Transform


class Json2(object):

    """Implementation of the 'json2' model.

    TODO: type model description here.

    Attributes:
        transform (Transform): If `transform` is provided, all the locations
            of the objects on the map (AP, Zone, Vbeacon, Beacon) will be
            transformed as well (relative to the new Map)

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "transform": 'transform'
    }

    _optionals = [
        'transform',
    ]

    def __init__(self,
                 transform=APIHelper.SKIP):
        """Constructor for the Json2 class"""

        # Initialize members of the class
        if transform is not APIHelper.SKIP:
            self.transform = transform 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        transform = Transform.from_dictionary(dictionary.get('transform')) if 'transform' in dictionary.keys() else APIHelper.SKIP
        # Return an object of this model
        return cls(transform)
