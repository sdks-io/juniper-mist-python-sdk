# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mistapi.api_helper import APIHelper


class Account(object):

    """Implementation of the 'Account' model.

    TODO: type model description here.

    Attributes:
        account_id (string): Linked apps(zoom/teams/intune/jamf) tenant id
        error (string): This error is provided only when the apps(zoom)
            account refresh token fails in the backend
        last_status (object): TODO: type description here.
        last_sync (object): TODO: type description here.
        linked_by (string): First name of the user who linked the
            apps(zoom/teams/intune/jamf) account
        name (string): Name of the company whose (zoom/teams/intune/jamf)
            account mist has subscribed to

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "account_id": 'account_id',
        "error": 'error',
        "last_status": 'last_status',
        "last_sync": 'last_sync',
        "linked_by": 'linked_by',
        "name": 'name'
    }

    _optionals = [
        'account_id',
        'error',
        'last_status',
        'last_sync',
        'linked_by',
        'name',
    ]

    def __init__(self,
                 account_id=APIHelper.SKIP,
                 error=APIHelper.SKIP,
                 last_status=APIHelper.SKIP,
                 last_sync=APIHelper.SKIP,
                 linked_by=APIHelper.SKIP,
                 name=APIHelper.SKIP):
        """Constructor for the Account class"""

        # Initialize members of the class
        if account_id is not APIHelper.SKIP:
            self.account_id = account_id 
        if error is not APIHelper.SKIP:
            self.error = error 
        if last_status is not APIHelper.SKIP:
            self.last_status = last_status 
        if last_sync is not APIHelper.SKIP:
            self.last_sync = last_sync 
        if linked_by is not APIHelper.SKIP:
            self.linked_by = linked_by 
        if name is not APIHelper.SKIP:
            self.name = name 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        account_id = dictionary.get("account_id") if dictionary.get("account_id") else APIHelper.SKIP
        error = dictionary.get("error") if dictionary.get("error") else APIHelper.SKIP
        last_status = dictionary.get("last_status") if dictionary.get("last_status") else APIHelper.SKIP
        last_sync = dictionary.get("last_sync") if dictionary.get("last_sync") else APIHelper.SKIP
        linked_by = dictionary.get("linked_by") if dictionary.get("linked_by") else APIHelper.SKIP
        name = dictionary.get("name") if dictionary.get("name") else APIHelper.SKIP
        # Return an object of this model
        return cls(account_id,
                   error,
                   last_status,
                   last_sync,
                   linked_by,
                   name)
