# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mistapi.api_helper import APIHelper


class SkypeBusinessVideo(object):

    """Implementation of the 'SkypeBusinessVideo' model.

    TODO: type model description here.

    Attributes:
        dscp (int): TODO: type description here.
        dst_subnet (string): TODO: type description here.
        src_subnet (string): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "dscp": 'dscp',
        "dst_subnet": 'dst_subnet',
        "src_subnet": 'src_subnet'
    }

    _optionals = [
        'dscp',
        'dst_subnet',
        'src_subnet',
    ]

    def __init__(self,
                 dscp=APIHelper.SKIP,
                 dst_subnet=APIHelper.SKIP,
                 src_subnet=APIHelper.SKIP):
        """Constructor for the SkypeBusinessVideo class"""

        # Initialize members of the class
        if dscp is not APIHelper.SKIP:
            self.dscp = dscp 
        if dst_subnet is not APIHelper.SKIP:
            self.dst_subnet = dst_subnet 
        if src_subnet is not APIHelper.SKIP:
            self.src_subnet = src_subnet 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        dscp = dictionary.get("dscp") if dictionary.get("dscp") else APIHelper.SKIP
        dst_subnet = dictionary.get("dst_subnet") if dictionary.get("dst_subnet") else APIHelper.SKIP
        src_subnet = dictionary.get("src_subnet") if dictionary.get("src_subnet") else APIHelper.SKIP
        # Return an object of this model
        return cls(dscp,
                   dst_subnet,
                   src_subnet)
