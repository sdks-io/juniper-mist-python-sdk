# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mistapi.api_helper import APIHelper


class Result(object):

    """Implementation of the 'Result' model.

    TODO: type model description here.

    Attributes:
        application_health (float): TODO: type description here.
        gateway_health (float): TODO: type description here.
        num_clients (float): TODO: type description here.
        num_gateways (float): TODO: type description here.
        site_id (uuid|string): TODO: type description here.
        wan_link_health (float): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "site_id": 'site_id',
        "application_health": 'application-health',
        "gateway_health": 'gateway-health',
        "num_clients": 'num_clients',
        "num_gateways": 'num_gateways',
        "wan_link_health": 'wan-link-health'
    }

    _optionals = [
        'application_health',
        'gateway_health',
        'num_clients',
        'num_gateways',
        'wan_link_health',
    ]

    def __init__(self,
                 site_id=None,
                 application_health=APIHelper.SKIP,
                 gateway_health=APIHelper.SKIP,
                 num_clients=APIHelper.SKIP,
                 num_gateways=APIHelper.SKIP,
                 wan_link_health=APIHelper.SKIP):
        """Constructor for the Result class"""

        # Initialize members of the class
        if application_health is not APIHelper.SKIP:
            self.application_health = application_health 
        if gateway_health is not APIHelper.SKIP:
            self.gateway_health = gateway_health 
        if num_clients is not APIHelper.SKIP:
            self.num_clients = num_clients 
        if num_gateways is not APIHelper.SKIP:
            self.num_gateways = num_gateways 
        self.site_id = site_id 
        if wan_link_health is not APIHelper.SKIP:
            self.wan_link_health = wan_link_health 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        site_id = dictionary.get("site_id") if dictionary.get("site_id") else None
        application_health = dictionary.get("application-health") if dictionary.get("application-health") else APIHelper.SKIP
        gateway_health = dictionary.get("gateway-health") if dictionary.get("gateway-health") else APIHelper.SKIP
        num_clients = dictionary.get("num_clients") if dictionary.get("num_clients") else APIHelper.SKIP
        num_gateways = dictionary.get("num_gateways") if dictionary.get("num_gateways") else APIHelper.SKIP
        wan_link_health = dictionary.get("wan-link-health") if dictionary.get("wan-link-health") else APIHelper.SKIP
        # Return an object of this model
        return cls(site_id,
                   application_health,
                   gateway_health,
                   num_clients,
                   num_gateways,
                   wan_link_health)
