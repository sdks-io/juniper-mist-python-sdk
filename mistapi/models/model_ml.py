# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mistapi.api_helper import APIHelper


class ModelMl(object):

    """Implementation of the 'Model_ml' model.

    TODO: type model description here.

    Attributes:
        int (int): TODO: type description here.
        ple (int): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "int": 'int',
        "ple": 'ple'
    }

    _optionals = [
        'int',
        'ple',
    ]

    def __init__(self,
                 int=APIHelper.SKIP,
                 ple=APIHelper.SKIP):
        """Constructor for the ModelMl class"""

        # Initialize members of the class
        if int is not APIHelper.SKIP:
            self.int = int 
        if ple is not APIHelper.SKIP:
            self.ple = ple 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        int = dictionary.get("int") if dictionary.get("int") else APIHelper.SKIP
        ple = dictionary.get("ple") if dictionary.get("ple") else APIHelper.SKIP
        # Return an object of this model
        return cls(int,
                   ple)
