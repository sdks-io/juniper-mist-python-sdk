# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mistapi.api_helper import APIHelper
from mistapi.models.mxagent import Mxagent
from mistapi.models.tunterm import Tunterm


class ServiceStat(object):

    """Implementation of the 'ServiceStat' model.

    stat for each services

    Attributes:
        mxagent (Mxagent): TODO: type description here.
        tunterm (Tunterm): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "mxagent": 'mxagent',
        "tunterm": 'tunterm'
    }

    _optionals = [
        'mxagent',
        'tunterm',
    ]

    def __init__(self,
                 mxagent=APIHelper.SKIP,
                 tunterm=APIHelper.SKIP):
        """Constructor for the ServiceStat class"""

        # Initialize members of the class
        if mxagent is not APIHelper.SKIP:
            self.mxagent = mxagent 
        if tunterm is not APIHelper.SKIP:
            self.tunterm = tunterm 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        mxagent = Mxagent.from_dictionary(dictionary.get('mxagent')) if 'mxagent' in dictionary.keys() else APIHelper.SKIP
        tunterm = Tunterm.from_dictionary(dictionary.get('tunterm')) if 'tunterm' in dictionary.keys() else APIHelper.SKIP
        # Return an object of this model
        return cls(mxagent,
                   tunterm)
