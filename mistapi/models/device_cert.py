# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mistapi.api_helper import APIHelper


class DeviceCert(object):

    """Implementation of the 'DeviceCert' model.

    common device cert, optional

    Attributes:
        cert (string): TODO: type description here.
        key (string): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "cert": 'cert',
        "key": 'key'
    }

    _optionals = [
        'cert',
        'key',
    ]

    def __init__(self,
                 cert=APIHelper.SKIP,
                 key=APIHelper.SKIP):
        """Constructor for the DeviceCert class"""

        # Initialize members of the class
        if cert is not APIHelper.SKIP:
            self.cert = cert 
        if key is not APIHelper.SKIP:
            self.key = key 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        cert = dictionary.get("cert") if dictionary.get("cert") else APIHelper.SKIP
        key = dictionary.get("key") if dictionary.get("key") else APIHelper.SKIP
        # Return an object of this model
        return cls(cert,
                   key)
