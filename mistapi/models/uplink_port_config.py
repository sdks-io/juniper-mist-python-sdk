# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mistapi.api_helper import APIHelper


class UplinkPortConfig(object):

    """Implementation of the 'UplinkPortConfig' model.

    TODO: type model description here.

    Attributes:
        dot_1_x (bool): Whether to do 802.1x against uplink switch. When
            enaled, AP cert will be used to do EAP-TLS and the Org's CA Cert
            has to be provisioned at the switch
        keep_wlans_up_if_down (bool): by default, WLANs are disabled when
            uplink is down. In some scenario, like SiteSurvey, one would want
            the AP to keep sending beacons.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "dot_1_x": 'dot1x',
        "keep_wlans_up_if_down": 'keep_wlans_up_if_down'
    }

    _optionals = [
        'dot_1_x',
        'keep_wlans_up_if_down',
    ]

    def __init__(self,
                 dot_1_x=False,
                 keep_wlans_up_if_down=False):
        """Constructor for the UplinkPortConfig class"""

        # Initialize members of the class
        self.dot_1_x = dot_1_x 
        self.keep_wlans_up_if_down = keep_wlans_up_if_down 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        dot_1_x = dictionary.get("dot1x") if dictionary.get("dot1x") else False
        keep_wlans_up_if_down = dictionary.get("keep_wlans_up_if_down") if dictionary.get("keep_wlans_up_if_down") else False
        # Return an object of this model
        return cls(dot_1_x,
                   keep_wlans_up_if_down)
