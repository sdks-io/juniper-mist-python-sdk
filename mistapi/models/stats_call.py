# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mistapi.api_helper import APIHelper


class StatsCall(object):

    """Implementation of the 'stats_call' model.

    TODO: type model description here.

    Attributes:
        app (string): TODO: type description here.
        audio_quality (int): TODO: type description here.
        end_time (int): TODO: type description here.
        mac (string): TODO: type description here.
        meeting_id (string): TODO: type description here.
        org_id (string): TODO: type description here.
        rating (int): TODO: type description here.
        screen_share_quality (int): TODO: type description here.
        site_id (string): TODO: type description here.
        start_time (int): TODO: type description here.
        video_quality (int): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "app": 'app',
        "audio_quality": 'audio_quality',
        "end_time": 'end_time',
        "mac": 'mac',
        "meeting_id": 'meeting_id',
        "org_id": 'org_id',
        "rating": 'rating',
        "screen_share_quality": 'screen_share_quality',
        "site_id": 'site_id',
        "start_time": 'start_time',
        "video_quality": 'video_quality'
    }

    _optionals = [
        'app',
        'audio_quality',
        'end_time',
        'mac',
        'meeting_id',
        'org_id',
        'rating',
        'screen_share_quality',
        'site_id',
        'start_time',
        'video_quality',
    ]

    def __init__(self,
                 app=APIHelper.SKIP,
                 audio_quality=APIHelper.SKIP,
                 end_time=APIHelper.SKIP,
                 mac=APIHelper.SKIP,
                 meeting_id=APIHelper.SKIP,
                 org_id=APIHelper.SKIP,
                 rating=APIHelper.SKIP,
                 screen_share_quality=APIHelper.SKIP,
                 site_id=APIHelper.SKIP,
                 start_time=APIHelper.SKIP,
                 video_quality=APIHelper.SKIP):
        """Constructor for the StatsCall class"""

        # Initialize members of the class
        if app is not APIHelper.SKIP:
            self.app = app 
        if audio_quality is not APIHelper.SKIP:
            self.audio_quality = audio_quality 
        if end_time is not APIHelper.SKIP:
            self.end_time = end_time 
        if mac is not APIHelper.SKIP:
            self.mac = mac 
        if meeting_id is not APIHelper.SKIP:
            self.meeting_id = meeting_id 
        if org_id is not APIHelper.SKIP:
            self.org_id = org_id 
        if rating is not APIHelper.SKIP:
            self.rating = rating 
        if screen_share_quality is not APIHelper.SKIP:
            self.screen_share_quality = screen_share_quality 
        if site_id is not APIHelper.SKIP:
            self.site_id = site_id 
        if start_time is not APIHelper.SKIP:
            self.start_time = start_time 
        if video_quality is not APIHelper.SKIP:
            self.video_quality = video_quality 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        app = dictionary.get("app") if dictionary.get("app") else APIHelper.SKIP
        audio_quality = dictionary.get("audio_quality") if dictionary.get("audio_quality") else APIHelper.SKIP
        end_time = dictionary.get("end_time") if dictionary.get("end_time") else APIHelper.SKIP
        mac = dictionary.get("mac") if dictionary.get("mac") else APIHelper.SKIP
        meeting_id = dictionary.get("meeting_id") if dictionary.get("meeting_id") else APIHelper.SKIP
        org_id = dictionary.get("org_id") if dictionary.get("org_id") else APIHelper.SKIP
        rating = dictionary.get("rating") if dictionary.get("rating") else APIHelper.SKIP
        screen_share_quality = dictionary.get("screen_share_quality") if dictionary.get("screen_share_quality") else APIHelper.SKIP
        site_id = dictionary.get("site_id") if dictionary.get("site_id") else APIHelper.SKIP
        start_time = dictionary.get("start_time") if dictionary.get("start_time") else APIHelper.SKIP
        video_quality = dictionary.get("video_quality") if dictionary.get("video_quality") else APIHelper.SKIP
        # Return an object of this model
        return cls(app,
                   audio_quality,
                   end_time,
                   mac,
                   meeting_id,
                   org_id,
                   rating,
                   screen_share_quality,
                   site_id,
                   start_time,
                   video_quality)
