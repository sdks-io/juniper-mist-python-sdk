# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mistapi.api_helper import APIHelper


class DeviceSearchSwitchGateway(object):

    """Implementation of the 'device_search_switch_gateway' model.

    TODO: type model description here.

    Attributes:
        ext_ip (string): TODO: type description here.
        hostname (list of string): TODO: type description here.
        ip (string): TODO: type description here.
        last_hostname (string): TODO: type description here.
        mac (string): TODO: type description here.
        model (string): TODO: type description here.
        num_members (int): TODO: type description here.
        org_id (string): TODO: type description here.
        site_id (string): TODO: type description here.
        timestamp (float): TODO: type description here.
        mtype (string): TODO: type description here.
        uptime (int): TODO: type description here.
        version (string): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "ext_ip": 'ext_ip',
        "hostname": 'hostname',
        "ip": 'ip',
        "last_hostname": 'last_hostname',
        "mac": 'mac',
        "model": 'model',
        "num_members": 'num_members',
        "org_id": 'org_id',
        "site_id": 'site_id',
        "timestamp": 'timestamp',
        "mtype": 'type',
        "uptime": 'uptime',
        "version": 'version'
    }

    _optionals = [
        'ext_ip',
        'hostname',
        'ip',
        'last_hostname',
        'mac',
        'model',
        'num_members',
        'org_id',
        'site_id',
        'timestamp',
        'mtype',
        'uptime',
        'version',
    ]

    def __init__(self,
                 ext_ip=APIHelper.SKIP,
                 hostname=APIHelper.SKIP,
                 ip=APIHelper.SKIP,
                 last_hostname=APIHelper.SKIP,
                 mac=APIHelper.SKIP,
                 model=APIHelper.SKIP,
                 num_members=APIHelper.SKIP,
                 org_id=APIHelper.SKIP,
                 site_id=APIHelper.SKIP,
                 timestamp=APIHelper.SKIP,
                 mtype=APIHelper.SKIP,
                 uptime=APIHelper.SKIP,
                 version=APIHelper.SKIP):
        """Constructor for the DeviceSearchSwitchGateway class"""

        # Initialize members of the class
        if ext_ip is not APIHelper.SKIP:
            self.ext_ip = ext_ip 
        if hostname is not APIHelper.SKIP:
            self.hostname = hostname 
        if ip is not APIHelper.SKIP:
            self.ip = ip 
        if last_hostname is not APIHelper.SKIP:
            self.last_hostname = last_hostname 
        if mac is not APIHelper.SKIP:
            self.mac = mac 
        if model is not APIHelper.SKIP:
            self.model = model 
        if num_members is not APIHelper.SKIP:
            self.num_members = num_members 
        if org_id is not APIHelper.SKIP:
            self.org_id = org_id 
        if site_id is not APIHelper.SKIP:
            self.site_id = site_id 
        if timestamp is not APIHelper.SKIP:
            self.timestamp = timestamp 
        if mtype is not APIHelper.SKIP:
            self.mtype = mtype 
        if uptime is not APIHelper.SKIP:
            self.uptime = uptime 
        if version is not APIHelper.SKIP:
            self.version = version 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        ext_ip = dictionary.get("ext_ip") if dictionary.get("ext_ip") else APIHelper.SKIP
        hostname = dictionary.get("hostname") if dictionary.get("hostname") else APIHelper.SKIP
        ip = dictionary.get("ip") if dictionary.get("ip") else APIHelper.SKIP
        last_hostname = dictionary.get("last_hostname") if dictionary.get("last_hostname") else APIHelper.SKIP
        mac = dictionary.get("mac") if dictionary.get("mac") else APIHelper.SKIP
        model = dictionary.get("model") if dictionary.get("model") else APIHelper.SKIP
        num_members = dictionary.get("num_members") if dictionary.get("num_members") else APIHelper.SKIP
        org_id = dictionary.get("org_id") if dictionary.get("org_id") else APIHelper.SKIP
        site_id = dictionary.get("site_id") if dictionary.get("site_id") else APIHelper.SKIP
        timestamp = dictionary.get("timestamp") if dictionary.get("timestamp") else APIHelper.SKIP
        mtype = dictionary.get("type") if dictionary.get("type") else APIHelper.SKIP
        uptime = dictionary.get("uptime") if dictionary.get("uptime") else APIHelper.SKIP
        version = dictionary.get("version") if dictionary.get("version") else APIHelper.SKIP
        # Return an object of this model
        return cls(ext_ip,
                   hostname,
                   ip,
                   last_hostname,
                   mac,
                   model,
                   num_members,
                   org_id,
                   site_id,
                   timestamp,
                   mtype,
                   uptime,
                   version)
