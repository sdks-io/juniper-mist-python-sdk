# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mistapi.api_helper import APIHelper


class AssetOfInterest(object):

    """Implementation of the 'AssetOfInterest' model.

    TODO: type model description here.

    Attributes:
        checkpoint_prep (float): TODO: type description here.
        checkpoint_preparer (float): TODO: type description here.
        checkpoint_scan (float): TODO: type description here.
        timestamp (float): TODO: type description here.
        ttl (float): TODO: type description here.
        ap_mac (string): TODO: type description here.
        beam (float): TODO: type description here.
        by (string): TODO: type description here.
        curr_site (string): TODO: type description here.
        device_name (string): TODO: type description here.
        id (string): TODO: type description here.
        last_seen (float): TODO: type description here.
        mac (string): TODO: type description here.
        manufacture (string): TODO: type description here.
        map_id (string): TODO: type description here.
        name (string): TODO: type description here.
        rssi (float): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "checkpoint_prep": '_checkpoint_prep',
        "checkpoint_preparer": '_checkpoint_preparer',
        "checkpoint_scan": '_checkpoint_scan',
        "timestamp": '_timestamp',
        "ttl": '_ttl',
        "ap_mac": 'ap_mac',
        "beam": 'beam',
        "by": 'by',
        "curr_site": 'curr_site',
        "device_name": 'device_name',
        "id": 'id',
        "last_seen": 'last_seen',
        "mac": 'mac',
        "manufacture": 'manufacture',
        "map_id": 'map_id',
        "name": 'name',
        "rssi": 'rssi'
    }

    _optionals = [
        'checkpoint_prep',
        'checkpoint_preparer',
        'checkpoint_scan',
        'timestamp',
        'ttl',
        'ap_mac',
        'beam',
        'by',
        'curr_site',
        'device_name',
        'id',
        'last_seen',
        'mac',
        'manufacture',
        'map_id',
        'name',
        'rssi',
    ]

    def __init__(self,
                 checkpoint_prep=APIHelper.SKIP,
                 checkpoint_preparer=APIHelper.SKIP,
                 checkpoint_scan=APIHelper.SKIP,
                 timestamp=APIHelper.SKIP,
                 ttl=APIHelper.SKIP,
                 ap_mac=APIHelper.SKIP,
                 beam=APIHelper.SKIP,
                 by=APIHelper.SKIP,
                 curr_site=APIHelper.SKIP,
                 device_name=APIHelper.SKIP,
                 id=APIHelper.SKIP,
                 last_seen=APIHelper.SKIP,
                 mac=APIHelper.SKIP,
                 manufacture=APIHelper.SKIP,
                 map_id=APIHelper.SKIP,
                 name=APIHelper.SKIP,
                 rssi=APIHelper.SKIP):
        """Constructor for the AssetOfInterest class"""

        # Initialize members of the class
        if checkpoint_prep is not APIHelper.SKIP:
            self.checkpoint_prep = checkpoint_prep 
        if checkpoint_preparer is not APIHelper.SKIP:
            self.checkpoint_preparer = checkpoint_preparer 
        if checkpoint_scan is not APIHelper.SKIP:
            self.checkpoint_scan = checkpoint_scan 
        if timestamp is not APIHelper.SKIP:
            self.timestamp = timestamp 
        if ttl is not APIHelper.SKIP:
            self.ttl = ttl 
        if ap_mac is not APIHelper.SKIP:
            self.ap_mac = ap_mac 
        if beam is not APIHelper.SKIP:
            self.beam = beam 
        if by is not APIHelper.SKIP:
            self.by = by 
        if curr_site is not APIHelper.SKIP:
            self.curr_site = curr_site 
        if device_name is not APIHelper.SKIP:
            self.device_name = device_name 
        if id is not APIHelper.SKIP:
            self.id = id 
        if last_seen is not APIHelper.SKIP:
            self.last_seen = last_seen 
        if mac is not APIHelper.SKIP:
            self.mac = mac 
        if manufacture is not APIHelper.SKIP:
            self.manufacture = manufacture 
        if map_id is not APIHelper.SKIP:
            self.map_id = map_id 
        if name is not APIHelper.SKIP:
            self.name = name 
        if rssi is not APIHelper.SKIP:
            self.rssi = rssi 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        checkpoint_prep = dictionary.get("_checkpoint_prep") if dictionary.get("_checkpoint_prep") else APIHelper.SKIP
        checkpoint_preparer = dictionary.get("_checkpoint_preparer") if dictionary.get("_checkpoint_preparer") else APIHelper.SKIP
        checkpoint_scan = dictionary.get("_checkpoint_scan") if dictionary.get("_checkpoint_scan") else APIHelper.SKIP
        timestamp = dictionary.get("_timestamp") if dictionary.get("_timestamp") else APIHelper.SKIP
        ttl = dictionary.get("_ttl") if dictionary.get("_ttl") else APIHelper.SKIP
        ap_mac = dictionary.get("ap_mac") if dictionary.get("ap_mac") else APIHelper.SKIP
        beam = dictionary.get("beam") if dictionary.get("beam") else APIHelper.SKIP
        by = dictionary.get("by") if dictionary.get("by") else APIHelper.SKIP
        curr_site = dictionary.get("curr_site") if dictionary.get("curr_site") else APIHelper.SKIP
        device_name = dictionary.get("device_name") if dictionary.get("device_name") else APIHelper.SKIP
        id = dictionary.get("id") if dictionary.get("id") else APIHelper.SKIP
        last_seen = dictionary.get("last_seen") if dictionary.get("last_seen") else APIHelper.SKIP
        mac = dictionary.get("mac") if dictionary.get("mac") else APIHelper.SKIP
        manufacture = dictionary.get("manufacture") if dictionary.get("manufacture") else APIHelper.SKIP
        map_id = dictionary.get("map_id") if dictionary.get("map_id") else APIHelper.SKIP
        name = dictionary.get("name") if dictionary.get("name") else APIHelper.SKIP
        rssi = dictionary.get("rssi") if dictionary.get("rssi") else APIHelper.SKIP
        # Return an object of this model
        return cls(checkpoint_prep,
                   checkpoint_preparer,
                   checkpoint_scan,
                   timestamp,
                   ttl,
                   ap_mac,
                   beam,
                   by,
                   curr_site,
                   device_name,
                   id,
                   last_seen,
                   mac,
                   manufacture,
                   map_id,
                   name,
                   rssi)
