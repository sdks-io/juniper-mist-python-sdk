# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mistapi.api_helper import APIHelper
from mistapi.models.content_1 import Content1


class SecurityToGroup(object):

    """Implementation of the 'SecurityToGroup' model.

    TODO: type model description here.

    Attributes:
        content (list of Content1): TODO: type description here.
        security_model (SecurityModelEnum): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "content": 'content',
        "security_model": 'security_model'
    }

    _optionals = [
        'content',
        'security_model',
    ]

    def __init__(self,
                 content=APIHelper.SKIP,
                 security_model=APIHelper.SKIP):
        """Constructor for the SecurityToGroup class"""

        # Initialize members of the class
        if content is not APIHelper.SKIP:
            self.content = content 
        if security_model is not APIHelper.SKIP:
            self.security_model = security_model 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        content = None
        if dictionary.get('content') is not None:
            content = [Content1.from_dictionary(x) for x in dictionary.get('content')]
        else:
            content = APIHelper.SKIP
        security_model = dictionary.get("security_model") if dictionary.get("security_model") else APIHelper.SKIP
        # Return an object of this model
        return cls(content,
                   security_model)
