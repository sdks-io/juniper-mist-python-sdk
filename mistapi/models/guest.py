# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mistapi.api_helper import APIHelper


class Guest(object):

    """Implementation of the 'guest' model.

    Guest

    Attributes:
        authorized (bool): whether the guest is current authorized
        authorized_expiring_time (int): when the authorization would expire
        authorized_time (int): when the guest was authorized
        company (string): optional, the info provided by user
        email (string): optional, the info provided by user
        field_1 (string): optional, the info provided by user
        field_2 (string): TODO: type description here.
        field_3 (string): TODO: type description here.
        field_4 (string): TODO: type description here.
        mac (string): mac
        minutes (int): minutes, the maximum is 259200 (180 days)
        name (string): optional, the info provided by user
        ssid (string): TODO: type description here.
        wlan_id (uuid|string): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "authorized": 'authorized',
        "authorized_expiring_time": 'authorized_expiring_time',
        "authorized_time": 'authorized_time',
        "company": 'company',
        "email": 'email',
        "field_1": 'field1',
        "field_2": 'field2',
        "field_3": 'field3',
        "field_4": 'field4',
        "mac": 'mac',
        "minutes": 'minutes',
        "name": 'name',
        "ssid": 'ssid',
        "wlan_id": 'wlan_id'
    }

    _optionals = [
        'authorized',
        'authorized_expiring_time',
        'authorized_time',
        'company',
        'email',
        'field_1',
        'field_2',
        'field_3',
        'field_4',
        'mac',
        'minutes',
        'name',
        'ssid',
        'wlan_id',
    ]

    def __init__(self,
                 authorized=APIHelper.SKIP,
                 authorized_expiring_time=APIHelper.SKIP,
                 authorized_time=APIHelper.SKIP,
                 company=APIHelper.SKIP,
                 email=APIHelper.SKIP,
                 field_1=APIHelper.SKIP,
                 field_2=APIHelper.SKIP,
                 field_3=APIHelper.SKIP,
                 field_4=APIHelper.SKIP,
                 mac=APIHelper.SKIP,
                 minutes=APIHelper.SKIP,
                 name=APIHelper.SKIP,
                 ssid=APIHelper.SKIP,
                 wlan_id=APIHelper.SKIP):
        """Constructor for the Guest class"""

        # Initialize members of the class
        if authorized is not APIHelper.SKIP:
            self.authorized = authorized 
        if authorized_expiring_time is not APIHelper.SKIP:
            self.authorized_expiring_time = authorized_expiring_time 
        if authorized_time is not APIHelper.SKIP:
            self.authorized_time = authorized_time 
        if company is not APIHelper.SKIP:
            self.company = company 
        if email is not APIHelper.SKIP:
            self.email = email 
        if field_1 is not APIHelper.SKIP:
            self.field_1 = field_1 
        if field_2 is not APIHelper.SKIP:
            self.field_2 = field_2 
        if field_3 is not APIHelper.SKIP:
            self.field_3 = field_3 
        if field_4 is not APIHelper.SKIP:
            self.field_4 = field_4 
        if mac is not APIHelper.SKIP:
            self.mac = mac 
        if minutes is not APIHelper.SKIP:
            self.minutes = minutes 
        if name is not APIHelper.SKIP:
            self.name = name 
        if ssid is not APIHelper.SKIP:
            self.ssid = ssid 
        if wlan_id is not APIHelper.SKIP:
            self.wlan_id = wlan_id 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        authorized = dictionary.get("authorized") if "authorized" in dictionary.keys() else APIHelper.SKIP
        authorized_expiring_time = dictionary.get("authorized_expiring_time") if dictionary.get("authorized_expiring_time") else APIHelper.SKIP
        authorized_time = dictionary.get("authorized_time") if dictionary.get("authorized_time") else APIHelper.SKIP
        company = dictionary.get("company") if dictionary.get("company") else APIHelper.SKIP
        email = dictionary.get("email") if dictionary.get("email") else APIHelper.SKIP
        field_1 = dictionary.get("field1") if dictionary.get("field1") else APIHelper.SKIP
        field_2 = dictionary.get("field2") if dictionary.get("field2") else APIHelper.SKIP
        field_3 = dictionary.get("field3") if dictionary.get("field3") else APIHelper.SKIP
        field_4 = dictionary.get("field4") if dictionary.get("field4") else APIHelper.SKIP
        mac = dictionary.get("mac") if dictionary.get("mac") else APIHelper.SKIP
        minutes = dictionary.get("minutes") if dictionary.get("minutes") else APIHelper.SKIP
        name = dictionary.get("name") if dictionary.get("name") else APIHelper.SKIP
        ssid = dictionary.get("ssid") if dictionary.get("ssid") else APIHelper.SKIP
        wlan_id = dictionary.get("wlan_id") if dictionary.get("wlan_id") else APIHelper.SKIP
        # Return an object of this model
        return cls(authorized,
                   authorized_expiring_time,
                   authorized_time,
                   company,
                   email,
                   field_1,
                   field_2,
                   field_3,
                   field_4,
                   mac,
                   minutes,
                   name,
                   ssid,
                   wlan_id)
