# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mistapi.api_helper import APIHelper


class ApiV1SitesDevicesCheckRadiusServerRequest(object):

    """Implementation of the 'Api V1 Sites Devices Check Radius Server Request' model.

    TODO: type model description here.

    Attributes:
        password (string): Specify the password associated with the username
        profile (string): Specify the access profile associated with the
            subscriber
        user (string): Specify the subscriber username to test

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "password": 'password',
        "user": 'user',
        "profile": 'profile'
    }

    _optionals = [
        'profile',
    ]

    def __init__(self,
                 password=None,
                 user=None,
                 profile='dot1x'):
        """Constructor for the ApiV1SitesDevicesCheckRadiusServerRequest class"""

        # Initialize members of the class
        self.password = password 
        self.profile = profile 
        self.user = user 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        password = dictionary.get("password") if dictionary.get("password") else None
        user = dictionary.get("user") if dictionary.get("user") else None
        profile = dictionary.get("profile") if dictionary.get("profile") else 'dot1x'
        # Return an object of this model
        return cls(password,
                   user,
                   profile)
