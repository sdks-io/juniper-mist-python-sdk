# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class AlertEvent(object):

    """Implementation of the 'AlertEvent' model.

    TODO: type model description here.

    Attributes:
        current_occupancy (int): TODO: type description here.
        map_id (uuid|string): TODO: type description here.
        occupancy_limit (int): TODO: type description here.
        org_id (uuid|string): TODO: type description here.
        timestamp (float): TODO: type description here.
        mtype (Type42Enum): event type (COMPLIANCE-VIOLATION / COMPLIANCE-OK)
        zone_id (uuid|string): TODO: type description here.
        zone_name (string): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "current_occupancy": 'current_occupancy',
        "map_id": 'map_id',
        "occupancy_limit": 'occupancy_limit',
        "org_id": 'org_id',
        "timestamp": 'timestamp',
        "mtype": 'type',
        "zone_id": 'zone_id',
        "zone_name": 'zone_name'
    }

    def __init__(self,
                 current_occupancy=None,
                 map_id=None,
                 occupancy_limit=None,
                 org_id=None,
                 timestamp=None,
                 mtype=None,
                 zone_id=None,
                 zone_name=None):
        """Constructor for the AlertEvent class"""

        # Initialize members of the class
        self.current_occupancy = current_occupancy 
        self.map_id = map_id 
        self.occupancy_limit = occupancy_limit 
        self.org_id = org_id 
        self.timestamp = timestamp 
        self.mtype = mtype 
        self.zone_id = zone_id 
        self.zone_name = zone_name 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        current_occupancy = dictionary.get("current_occupancy") if dictionary.get("current_occupancy") else None
        map_id = dictionary.get("map_id") if dictionary.get("map_id") else None
        occupancy_limit = dictionary.get("occupancy_limit") if dictionary.get("occupancy_limit") else None
        org_id = dictionary.get("org_id") if dictionary.get("org_id") else None
        timestamp = dictionary.get("timestamp") if dictionary.get("timestamp") else None
        mtype = dictionary.get("type") if dictionary.get("type") else None
        zone_id = dictionary.get("zone_id") if dictionary.get("zone_id") else None
        zone_name = dictionary.get("zone_name") if dictionary.get("zone_name") else None
        # Return an object of this model
        return cls(current_occupancy,
                   map_id,
                   occupancy_limit,
                   org_id,
                   timestamp,
                   mtype,
                   zone_id,
                   zone_name)
