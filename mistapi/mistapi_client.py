# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from apimatic_core.configurations.global_configuration import GlobalConfiguration
from apimatic_core.decorators.lazy_property import LazyProperty
from mistapi.configuration import Configuration
from mistapi.controllers.base_controller import BaseController
from mistapi.configuration import Environment
from mistapi.http.auth.custom_header_authentication import CustomHeaderAuthentication
from mistapi.controllers.login_controller import LoginController
from mistapi.controllers.login_with_o_auth_2_controller\
    import LoginWithOAuth2Controller
from mistapi.controllers.api_token_controller import APITokenController
from mistapi.controllers.installer_controller import InstallerController
from mistapi.controllers.admin_controller import AdminController
from mistapi.controllers.mobile_controller import MobileController
from mistapi.controllers.msps_controller import MspsController
from mistapi.controllers.msps_admins_controller import MspsAdminsController
from mistapi.controllers.msps_inventory_controller\
    import MspsInventoryController
from mistapi.controllers.msps_invites_controller import MspsInvitesController
from mistapi.controllers.msps_logo_controller import MspsLogoController
from mistapi.controllers.msps_logs_controller import MspsLogsController
from mistapi.controllers.msps_licenses_controller import MspsLicensesController
from mistapi.controllers.msps_marvis_controller import MspsMarvisController
from mistapi.controllers.msps_org_groups_controller\
    import MspsOrgGroupsController
from mistapi.controllers.msps_orgs_controller import MspsOrgsController
from mistapi.controllers.msps_sl_es_controller import MspsSLEsController
from mistapi.controllers.msps_sso_roles_controller\
    import MspsSSORolesController
from mistapi.controllers.msps_sso_controller import MspsSSOController
from mistapi.controllers.msps_stats_controller import MspsStatsController
from mistapi.controllers.msps_tickets_controller import MspsTicketsController
from mistapi.controllers.orgs_admins_controller import OrgsAdminsController
from mistapi.controllers.sites_controller import SitesController
from mistapi.controllers.sites_alarms_controller import SitesAlarmsController
from mistapi.controllers.sites_applications_controller\
    import SitesApplicationsController
from mistapi.controllers.sites_anomaly_controller import SitesAnomalyController
from mistapi.controllers.sites_asset_filters_controller\
    import SitesAssetFiltersController
from mistapi.controllers.sites_assets_controller import SitesAssetsController
from mistapi.controllers.sites_beacons_controller import SitesBeaconsController
from mistapi.controllers.sites_calls_controller import SitesCallsController
from mistapi.controllers.sites_clients_wan_controller\
    import SitesClientsWanController
from mistapi.controllers.sites_clients_wired_controller\
    import SitesClientsWiredController
from mistapi.controllers.sites_clients_wireless_controller\
    import SitesClientsWirelessController
from mistapi.controllers.sites_devices_controller import SitesDevicesController
from mistapi.controllers.sites_devices_wireless_controller\
    import SitesDevicesWirelessController
from mistapi.controllers.sites_devices_others_controller\
    import SitesDevicesOthersController
from mistapi.controllers.sites_devices_wired_controller\
    import SitesDevicesWiredController
from mistapi.controllers.sites_devices_wired_virtual_chassis_controller\
    import SitesDevicesWiredVirtualChassisController
from mistapi.controllers.sites_devices_wan_controller\
    import SitesDevicesWANController
from mistapi.controllers.sites_devices_wanha_controller\
    import SitesDevicesWANHAController
from mistapi.controllers.sites_devices_stats_controller\
    import SitesDevicesStatsController
from mistapi.controllers.sites_devices_upgrades_controller\
    import SitesDevicesUpgradesController
from mistapi.controllers.sites_devices_utilities_controller\
    import SitesDevicesUtilitiesController
from mistapi.controllers.sites_events_controller import SitesEventsController
from mistapi.controllers.sites_evpn_topologies_controller\
    import SitesEVPNTopologiesController
from mistapi.controllers.sites_guests_controller import SitesGuestsController
from mistapi.controllers.sites_insights_controller\
    import SitesInsightsController
from mistapi.controllers.sites_licenses_controller\
    import SitesLicensesController
from mistapi.controllers.sites_location_controller\
    import SitesLocationController
from mistapi.controllers.sites_maps_controller import SitesMapsController
from mistapi.controllers.sites_maps_auto_orientation_controller\
    import SitesMapsAutoOrientationController
from mistapi.controllers.sites_maps_auto_placement_controller\
    import SitesMapsAutoPlacementController
from mistapi.controllers.sites_mx_edges_controller\
    import SitesMxEdgesController
from mistapi.controllers.sites_mx_tunnels_controller\
    import SitesMxTunnelsController
from mistapi.controllers.sites_networks_controller\
    import SitesNetworksController
from mistapi.controllers.sites_pcaps_controller import SitesPcapsController
from mistapi.controllers.sites_psks_controller import SitesPsksController
from mistapi.controllers.sites_rfdiags_controller import SitesRfdiagsController
from mistapi.controllers.sites_rogues_controller import SitesRoguesController
from mistapi.controllers.sites_rrm_controller import SitesRRMController
from mistapi.controllers.sites_rssizones_controller\
    import SitesRssizonesController
from mistapi.controllers.sites_services_controller\
    import SitesServicesController
from mistapi.controllers.sites_service_policies_controller\
    import SitesServicePoliciesController
from mistapi.controllers.sites_setting_controller import SitesSettingController
from mistapi.controllers.sites_skyatp_controller import SitesSkyatpController
from mistapi.controllers.sites_sl_es_controller import SitesSLEsController
from mistapi.controllers.sites_stats_controller import SitesStatsController
from mistapi.controllers.sites_subscriptions_controller\
    import SitesSubscriptionsController
from mistapi.controllers.sites_synthetic_tests_controller\
    import SitesSyntheticTestsController
from mistapi.controllers.sites_ui_settings_controller\
    import SitesUISettingsController
from mistapi.controllers.sites_v_beacons_controller\
    import SitesVBeaconsController
from mistapi.controllers.sites_vp_ns_controller import SitesVPNsController
from mistapi.controllers.sites_webhooks_controller\
    import SitesWebhooksController
from mistapi.controllers.sites_wlans_controller import SitesWlansController
from mistapi.controllers.sites_wx_rules_controller\
    import SitesWxRulesController
from mistapi.controllers.sites_wx_tags_controller import SitesWxTagsController
from mistapi.controllers.sites_wx_tunnels_controller\
    import SitesWxTunnelsController
from mistapi.controllers.sites_zones_controller import SitesZonesController
from mistapi.controllers.constants_controller import ConstantsController
from mistapi.controllers.self_controller import SelfController
from mistapi.controllers.webhook_samples_controller\
    import WebhookSamplesController
from mistapi.controllers.orgs_admin_controller import OrgsAdminController


class MistapiClient(object):

    @LazyProperty
    def login(self):
        return LoginController(self.global_configuration)

    @LazyProperty
    def login_with_o_auth_2(self):
        return LoginWithOAuth2Controller(self.global_configuration)

    @LazyProperty
    def api_token(self):
        return APITokenController(self.global_configuration)

    @LazyProperty
    def installer(self):
        return InstallerController(self.global_configuration)

    @LazyProperty
    def admin(self):
        return AdminController(self.global_configuration)

    @LazyProperty
    def mobile(self):
        return MobileController(self.global_configuration)

    @LazyProperty
    def msps(self):
        return MspsController(self.global_configuration)

    @LazyProperty
    def msps_admins(self):
        return MspsAdminsController(self.global_configuration)

    @LazyProperty
    def msps_inventory(self):
        return MspsInventoryController(self.global_configuration)

    @LazyProperty
    def msps_invites(self):
        return MspsInvitesController(self.global_configuration)

    @LazyProperty
    def msps_logo(self):
        return MspsLogoController(self.global_configuration)

    @LazyProperty
    def msps_logs(self):
        return MspsLogsController(self.global_configuration)

    @LazyProperty
    def msps_licenses(self):
        return MspsLicensesController(self.global_configuration)

    @LazyProperty
    def msps_marvis(self):
        return MspsMarvisController(self.global_configuration)

    @LazyProperty
    def msps_org_groups(self):
        return MspsOrgGroupsController(self.global_configuration)

    @LazyProperty
    def msps_orgs(self):
        return MspsOrgsController(self.global_configuration)

    @LazyProperty
    def msps_sl_es(self):
        return MspsSLEsController(self.global_configuration)

    @LazyProperty
    def msps_sso_roles(self):
        return MspsSSORolesController(self.global_configuration)

    @LazyProperty
    def msps_sso(self):
        return MspsSSOController(self.global_configuration)

    @LazyProperty
    def msps_stats(self):
        return MspsStatsController(self.global_configuration)

    @LazyProperty
    def msps_tickets(self):
        return MspsTicketsController(self.global_configuration)

    @LazyProperty
    def orgs_admins(self):
        return OrgsAdminsController(self.global_configuration)

    @LazyProperty
    def sites(self):
        return SitesController(self.global_configuration)

    @LazyProperty
    def sites_alarms(self):
        return SitesAlarmsController(self.global_configuration)

    @LazyProperty
    def sites_applications(self):
        return SitesApplicationsController(self.global_configuration)

    @LazyProperty
    def sites_anomaly(self):
        return SitesAnomalyController(self.global_configuration)

    @LazyProperty
    def sites_asset_filters(self):
        return SitesAssetFiltersController(self.global_configuration)

    @LazyProperty
    def sites_assets(self):
        return SitesAssetsController(self.global_configuration)

    @LazyProperty
    def sites_beacons(self):
        return SitesBeaconsController(self.global_configuration)

    @LazyProperty
    def sites_calls(self):
        return SitesCallsController(self.global_configuration)

    @LazyProperty
    def sites_clients_wan(self):
        return SitesClientsWanController(self.global_configuration)

    @LazyProperty
    def sites_clients_wired(self):
        return SitesClientsWiredController(self.global_configuration)

    @LazyProperty
    def sites_clients_wireless(self):
        return SitesClientsWirelessController(self.global_configuration)

    @LazyProperty
    def sites_devices(self):
        return SitesDevicesController(self.global_configuration)

    @LazyProperty
    def sites_devices_wireless(self):
        return SitesDevicesWirelessController(self.global_configuration)

    @LazyProperty
    def sites_devices_others(self):
        return SitesDevicesOthersController(self.global_configuration)

    @LazyProperty
    def sites_devices_wired(self):
        return SitesDevicesWiredController(self.global_configuration)

    @LazyProperty
    def sites_devices_wired_virtual_chassis(self):
        return SitesDevicesWiredVirtualChassisController(self.global_configuration)

    @LazyProperty
    def sites_devices_wan(self):
        return SitesDevicesWANController(self.global_configuration)

    @LazyProperty
    def sites_devices_wan_ha(self):
        return SitesDevicesWANHAController(self.global_configuration)

    @LazyProperty
    def sites_devices_stats(self):
        return SitesDevicesStatsController(self.global_configuration)

    @LazyProperty
    def sites_devices_upgrades(self):
        return SitesDevicesUpgradesController(self.global_configuration)

    @LazyProperty
    def sites_devices_utilities(self):
        return SitesDevicesUtilitiesController(self.global_configuration)

    @LazyProperty
    def sites_events(self):
        return SitesEventsController(self.global_configuration)

    @LazyProperty
    def sites_evpn_topologies(self):
        return SitesEVPNTopologiesController(self.global_configuration)

    @LazyProperty
    def sites_guests(self):
        return SitesGuestsController(self.global_configuration)

    @LazyProperty
    def sites_insights(self):
        return SitesInsightsController(self.global_configuration)

    @LazyProperty
    def sites_licenses(self):
        return SitesLicensesController(self.global_configuration)

    @LazyProperty
    def sites_location(self):
        return SitesLocationController(self.global_configuration)

    @LazyProperty
    def sites_maps(self):
        return SitesMapsController(self.global_configuration)

    @LazyProperty
    def sites_maps_auto_orientation(self):
        return SitesMapsAutoOrientationController(self.global_configuration)

    @LazyProperty
    def sites_maps_auto_placement(self):
        return SitesMapsAutoPlacementController(self.global_configuration)

    @LazyProperty
    def sites_mx_edges(self):
        return SitesMxEdgesController(self.global_configuration)

    @LazyProperty
    def sites_mx_tunnels(self):
        return SitesMxTunnelsController(self.global_configuration)

    @LazyProperty
    def sites_networks(self):
        return SitesNetworksController(self.global_configuration)

    @LazyProperty
    def sites_pcaps(self):
        return SitesPcapsController(self.global_configuration)

    @LazyProperty
    def sites_psks(self):
        return SitesPsksController(self.global_configuration)

    @LazyProperty
    def sites_rfdiags(self):
        return SitesRfdiagsController(self.global_configuration)

    @LazyProperty
    def sites_rogues(self):
        return SitesRoguesController(self.global_configuration)

    @LazyProperty
    def sites_rrm(self):
        return SitesRRMController(self.global_configuration)

    @LazyProperty
    def sites_rssizones(self):
        return SitesRssizonesController(self.global_configuration)

    @LazyProperty
    def sites_services(self):
        return SitesServicesController(self.global_configuration)

    @LazyProperty
    def sites_service_policies(self):
        return SitesServicePoliciesController(self.global_configuration)

    @LazyProperty
    def sites_setting(self):
        return SitesSettingController(self.global_configuration)

    @LazyProperty
    def sites_skyatp(self):
        return SitesSkyatpController(self.global_configuration)

    @LazyProperty
    def sites_sl_es(self):
        return SitesSLEsController(self.global_configuration)

    @LazyProperty
    def sites_stats(self):
        return SitesStatsController(self.global_configuration)

    @LazyProperty
    def sites_subscriptions(self):
        return SitesSubscriptionsController(self.global_configuration)

    @LazyProperty
    def sites_synthetic_tests(self):
        return SitesSyntheticTestsController(self.global_configuration)

    @LazyProperty
    def sites_ui_settings(self):
        return SitesUISettingsController(self.global_configuration)

    @LazyProperty
    def sites_v_beacons(self):
        return SitesVBeaconsController(self.global_configuration)

    @LazyProperty
    def sites_vp_ns(self):
        return SitesVPNsController(self.global_configuration)

    @LazyProperty
    def sites_webhooks(self):
        return SitesWebhooksController(self.global_configuration)

    @LazyProperty
    def sites_wlans(self):
        return SitesWlansController(self.global_configuration)

    @LazyProperty
    def sites_wx_rules(self):
        return SitesWxRulesController(self.global_configuration)

    @LazyProperty
    def sites_wx_tags(self):
        return SitesWxTagsController(self.global_configuration)

    @LazyProperty
    def sites_wx_tunnels(self):
        return SitesWxTunnelsController(self.global_configuration)

    @LazyProperty
    def sites_zones(self):
        return SitesZonesController(self.global_configuration)

    @LazyProperty
    def constants(self):
        return ConstantsController(self.global_configuration)

    @LazyProperty
    def self(self):
        return SelfController(self.global_configuration)

    @LazyProperty
    def webhook_samples(self):
        return WebhookSamplesController(self.global_configuration)

    @LazyProperty
    def orgs_admin(self):
        return OrgsAdminController(self.global_configuration)

    def __init__(self, http_client_instance=None,
                 override_http_client_configuration=False, http_call_back=None,
                 timeout=60, max_retries=0, backoff_factor=2,
                 retry_statuses=[408, 413, 429, 500, 502, 503, 504, 521, 522, 524],
                 retry_methods=['GET', 'PUT'],
                 environment=Environment.PRODUCTION,
                 authorization='Token {x-auth-key}', config=None):
        if config is None:
            self.config = Configuration(
                                         http_client_instance=http_client_instance,
                                         override_http_client_configuration=override_http_client_configuration,
                                         http_call_back=http_call_back,
                                         timeout=timeout,
                                         max_retries=max_retries,
                                         backoff_factor=backoff_factor,
                                         retry_statuses=retry_statuses,
                                         retry_methods=retry_methods,
                                         environment=environment,
                                         authorization=authorization)
        else:
            self.config = config

        self.global_configuration = GlobalConfiguration(self.config)\
            .global_errors(BaseController.global_errors())\
            .base_uri_executor(self.config.get_base_uri)\
            .user_agent(BaseController.user_agent(), BaseController.user_agent_parameters())
        self.initialize_auth_managers(self.global_configuration)

        self.global_configuration = self.global_configuration.auth_managers(self.auth_managers)

    def initialize_auth_managers(self, global_config):
        http_client_config = global_config.get_http_client_configuration()
        self.auth_managers = { key: None for key in ['global']}
        self.auth_managers['global'] = CustomHeaderAuthentication(http_client_config.authorization)
        return self.auth_managers
