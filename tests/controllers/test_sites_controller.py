# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

import json
import dateutil.parser

from tests.controllers.controller_test_base import ControllerTestBase
from apimatic_core.utilities.comparison_helper import ComparisonHelper
from mistapi.api_helper import APIHelper
from mistapi.models.site import Site


class SitesControllerTests(ControllerTestBase):

    @classmethod
    def setUpClass(cls):
        super(SitesControllerTests, cls).setUpClass()
        cls.controller = cls.client.sites
        cls.response_catcher = cls.controller.http_call_back

    # Delete Site
    def test_delete_site(self):
        # Parameters for the API call
        site_id = '000000ab-00ab-00ab-00ab-0000000000ab'

        # Perform the API call through the SDK function
        result = self.controller.delete_site(site_id)

        # Test response code
        assert self.response_catcher.response.status_code == 200

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = 'application/json'

        assert ComparisonHelper.match_headers(expected_headers, self.response_catcher.response.headers)


    # Get Site Info
    def test_get_site_info(self):
        # Parameters for the API call
        site_id = '000000ab-00ab-00ab-00ab-0000000000ab'

        # Perform the API call through the SDK function
        result = self.controller.get_site_info(site_id)

        # Test response code
        assert self.response_catcher.response.status_code == 200

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = 'application/json'

        assert ComparisonHelper.match_headers(expected_headers, self.response_catcher.response.headers)

        
        # Test whether the captured response is as we expected
        assert result is not None
        expected_body = APIHelper.json_deserialize('{"address":"1601 S. Deanza Blvd., Cupertino, CA, 95014","alarmtemp'
            'late_id":"684dfc5c-fe77-2290-eb1d-ef3d677fe168","apporttemplate_id'
            '":"string","aptemplate_id":"16bdf952-ade2-4491-80b0-85ce506c760b",'
            '"country_code":"US","created_time":0,"gatewaytemplate_id":"6f9b2e7'
            '5-9b2f-b5ae-81e3-e14c76f1a90f","id":"497f6eca-6276-5005-bfeb-53cbb'
            'bba6f17","latlng":{"lat":37.295833,"lng":-122.032946},"modified_ti'
            'me":0,"name":"Mist Office","networktemplate_id":"12ae9bd2-e0ab-107'
            'b-72e8-a7a005565ec2","notes":"string","org_id":"a40f5d1f-d889-42e9'
            '-94ea-b9b33585fc6b","rftemplate_id":"bb8a9017-1e36-5d6c-6f2b-551ab'
            'e8a76a2","secpolicy_id":"3bcd0beb-5d0a-4cbd-92c1-14aea91e98ef","si'
            'tegroup_ids":["497f6eca-6276-5006-bfeb-53cbbbba6f18"],"timezone":"'
            'America/Los_Angeles"}')
        received_body = APIHelper.json_deserialize(self.response_catcher.response.text)
        assert ComparisonHelper.match_body(expected_body, received_body)

    # Update Site Info
    def test_update_site_info(self):
        # Parameters for the API call
        site_id = '000000ab-00ab-00ab-00ab-0000000000ab'
        body = APIHelper.json_deserialize('{"address":"string","alarmtemplate_id":"b069b358-4c97-5319-1f8c-7c'
            '5ca64d6ab1","country_code":"string","latlng":{"lat":0,"lng":0},"na'
            'me":"string","networktemplate_id":"b069b358-4c97-5319-1f8c-7c5ca64'
            'd6ab1","notes":"string","rftemplate_id":"b069b358-4c97-5319-1f8c-7'
            'c5ca64d6ab1","secpolicy_id":"b069b358-4c97-5319-1f8c-7c5ca64d6ab1"'
            ',"sitegroup_ids":["b069b358-4c97-5319-1f8c-7c5ca64d6ab1"],"timezon'
            'e":"string"}', Site.from_dictionary)

        # Perform the API call through the SDK function
        result = self.controller.update_site_info(site_id, body)

        # Test response code
        assert self.response_catcher.response.status_code == 200

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = 'application/json'

        assert ComparisonHelper.match_headers(expected_headers, self.response_catcher.response.headers)

        
        # Test whether the captured response is as we expected
        assert result is not None
        expected_body = APIHelper.json_deserialize('{"address":"1601 S. Deanza Blvd., Cupertino, CA, 95014","alarmtemp'
            'late_id":"684dfc5c-fe77-2290-eb1d-ef3d677fe168","apporttemplate_id'
            '":"string","aptemplate_id":"16bdf952-ade2-4491-80b0-85ce506c760b",'
            '"country_code":"US","created_time":0,"gatewaytemplate_id":"6f9b2e7'
            '5-9b2f-b5ae-81e3-e14c76f1a90f","id":"497f6eca-6276-5005-bfeb-53cbb'
            'bba6f17","latlng":{"lat":37.295833,"lng":-122.032946},"modified_ti'
            'me":0,"name":"Mist Office","networktemplate_id":"12ae9bd2-e0ab-107'
            'b-72e8-a7a005565ec2","notes":"string","org_id":"a40f5d1f-d889-42e9'
            '-94ea-b9b33585fc6b","rftemplate_id":"bb8a9017-1e36-5d6c-6f2b-551ab'
            'e8a76a2","secpolicy_id":"3bcd0beb-5d0a-4cbd-92c1-14aea91e98ef","si'
            'tegroup_ids":["497f6eca-6276-5006-bfeb-53cbbbba6f18"],"timezone":"'
            'America/Los_Angeles"}')
        received_body = APIHelper.json_deserialize(self.response_catcher.response.text)
        assert ComparisonHelper.match_body(expected_body, received_body)

