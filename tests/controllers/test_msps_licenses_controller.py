# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

import json
import dateutil.parser

from tests.controllers.controller_test_base import ControllerTestBase
from apimatic_core.utilities.comparison_helper import ComparisonHelper
from mistapi.api_helper import APIHelper
from mistapi.models.api_v_1_msps_claim_request import ApiV1MspsClaimRequest
from mistapi.models.api_v_1_msps_licenses_request import ApiV1MspsLicensesRequest


class MspsLicensesControllerTests(ControllerTestBase):

    @classmethod
    def setUpClass(cls):
        super(MspsLicensesControllerTests, cls).setUpClass()
        cls.controller = cls.client.msps_licenses
        cls.response_catcher = cls.controller.http_call_back

    # Claim an Order by Activation Code
    def test_claim_msp_licence(self):
        # Parameters for the API call
        msp_id = '000000ab-00ab-00ab-00ab-0000000000ab'
        body = APIHelper.json_deserialize('{"code":"ZHT3K-H36DT-MG85D-M61AC"}', ApiV1MspsClaimRequest.from_dictionary)

        # Perform the API call through the SDK function
        result = self.controller.claim_msp_licence(msp_id, body)

        # Test response code
        assert self.response_catcher.response.status_code == 200

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = 'application/json'

        assert ComparisonHelper.match_headers(expected_headers, self.response_catcher.response.headers)

        
        # Test whether the captured response is as we expected
        assert result is not None
        expected_body = APIHelper.json_deserialize('{"inventory_added":[{"mac":"5c5b35000018","magic":"6JG8EPTFV2A9Z2N'
            '","model":"AP41","serial":"FXLH2015150025","type":"ap"}],"inventor'
            'y_duplicated":[{"mac":"5c5b35000012","magic":"DVH4VSNMSZPDXBR","mo'
            'del":"AP41","serial":"FXLH2015150027","type":"ap"}],"license_added'
            '":[{"end":1520380800,"quantity":180,"start":1504828800,"type":"SUB'
            '-MAN"},{"end":1520380800,"quantity":120,"start":1504828800,"type":'
            '"SUB-LOC"}],"license_duplicated":[{"end":1520380800,"quantity":180'
            ',"start":1504828800,"type":"SUB-MAN"}],"license_error":[{"order":"'
            '00000464","reason":""}]}')
        received_body = APIHelper.json_deserialize(self.response_catcher.response.text)
        assert ComparisonHelper.match_body(expected_body, received_body)

    # Get List of Msp Licenses
    def test_list_msp_licenses(self):
        # Parameters for the API call
        msp_id = '000000ab-00ab-00ab-00ab-0000000000ab'

        # Perform the API call through the SDK function
        result = self.controller.list_msp_licenses(msp_id)

        # Test response code
        assert self.response_catcher.response.status_code == 200

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = 'application/json'

        assert ComparisonHelper.match_headers(expected_headers, self.response_catcher.response.headers)

        
        # Test whether the captured response is as we expected
        assert result is not None
        expected_body = APIHelper.json_deserialize('{"amendments":[{"created_time":1644684842,"end_time":1744156799,"i'
            'd":"ff0a14f6-1234-5678-90ab-c8e64d4bc6c6","modified_time":16446848'
            '42,"quantity":-1,"start_time":1632873600,"subscription_id":"VNA-00'
            '0000af","type":"SUB-VNA"},{"created_time":1644684842,"end_time":17'
            '44156799,"id":"c1c28812-1234-5678-90ab-dc95680da61e","modified_tim'
            'e":1644684842,"quantity":-1,"start_time":1632873600,"subscription_'
            'id":"MAN-000008be","type":"SUB-MAN"},{"created_time":1644684842,"e'
            'nd_time":1744243199,"id":"96c0a41f-1234-5678-90ab-afe74817e9fd","m'
            'odified_time":1644684842,"quantity":-1,"start_time":1586476800,"su'
            'bscription_id":"EX24-000000bc","type":"SUB-EX24"}],"entitled":{"SU'
            'B-ENG":26,"SUB-EX24":9,"SUB-MAN":26,"SUB-VNA":26},"licenses":[{"cr'
            'eated_time":1555353534,"end_time":1586822399,"id":"693a41a6-1234-5'
            '678-90ab-f53dbd3a31c0","modified_time":1555353534,"order_id":"0000'
            '0000","org_id":"9777c1a0-1234-5678-90ab-02e208b2d34f","quantity":2'
            ',"remaining_quantity":0,"start_time":1555286400,"subscription_id":'
            '"VNA-000000aa","type":"SUB-VNA"},{"created_time":1576132516,"end_t'
            'ime":1586822399,"id":"656607cf-1234-5678-90ab-fc9035614ea5","modif'
            'ied_time":1576132516,"order_id":"00000000","org_id":"9777c1a0-1234'
            '-5678-90ab-02e208b2d34f","quantity":8,"remaining_quantity":0,"star'
            't_time":1576022400,"subscription_id":"VNA-000000ab","type":"SUB-VN'
            'A"},{"created_time":1579204568,"end_time":1730764800,"id":"db50d0b'
            'c-1234-5678-90ab-e439958cb06b","modified_time":1579204568,"order_i'
            'd":"00000000","org_id":"9777c1a0-1234-5678-90ab-02e208b2d34f","qua'
            'ntity":2,"remaining_quantity":2,"start_time":1572998400,"subscript'
            'ion_id":"MAN-000000ac","type":"SUB-MAN"},{"created_time":157920456'
            '8,"end_time":1730764800,"id":"2ff9e84a-1234-5678-90ab-fb9ec0726e01'
            '","modified_time":1579204568,"order_id":"00000000","org_id":"9777c'
            '1a0-1234-5678-90ab-02e208b2d34f","quantity":2,"remaining_quantity"'
            ':2,"start_time":1572998400,"subscription_id":"ENG-000000ad","type"'
            ':"SUB-ENG"},{"created_time":1579204568,"end_time":1730764800,"id":'
            '"16df7ea6-1234-5678-90ab-78018cd4024d","modified_time":1579204568,'
            '"order_id":"00000000","org_id":"9777c1a0-1234-5678-90ab-02e208b2d3'
            '4f","quantity":2,"remaining_quantity":2,"start_time":1572998400,"s'
            'ubscription_id":"VNA-000000ae","type":"SUB-VNA"},{"created_time":1'
            '586237081,"end_time":1744243199,"id":"1b6f68d5-1234-5678-90ab-70d3'
            'e6d18c73","modified_time":1586237081,"order_id":"00000000","org_id'
            '":"9777c1a0-1234-5678-90ab-02e208b2d34f","quantity":14,"remaining_'
            'quantity":14,"start_time":1586563200,"subscription_id":"VNA-000000'
            'af","type":"SUB-VNA"},{"created_time":1586237097,"end_time":174424'
            '3199,"id":"1375c9bf-1234-5678-90ab-9c636708c89e","modified_time":1'
            '586237097,"order_id":"00000000","org_id":"9777c1a0-1234-5678-90ab-'
            '02e208b2d34f","quantity":14,"remaining_quantity":14,"start_time":1'
            '586563200,"subscription_id":"MAN-000000ba","type":"SUB-MAN"},{"cre'
            'ated_time":1586237137,"end_time":1744243199,"id":"5974e979-1234-56'
            '78-90ab-438f833ec1c9","modified_time":1586237137,"order_id":"00000'
            '000","org_id":"9777c1a0-1234-5678-90ab-02e208b2d34f","quantity":14'
            ',"remaining_quantity":14,"start_time":1586563200,"subscription_id"'
            ':"ENG-000000bb","type":"SUB-ENG"},{"created_time":1629947267,"end_'
            'time":1744243199,"id":"340a9cb3-1234-5678-90ab-b009344dbf3c","modi'
            'fied_time":1629947267,"order_id":"00000000","org_id":"9777c1a0-123'
            '4-5678-90ab-02e208b2d34f","quantity":10,"remaining_quantity":9,"st'
            'art_time":1586476800,"subscription_id":"EX24-000000bc","type":"SUB'
            '-EX24"},{"created_time":1632941870,"end_time":1744156799,"id":"9b5'
            '99b0f-1234-5678-90ab-406081b58e7f","modified_time":1632941870,"ord'
            'er_id":"00000000","org_id":"9777c1a0-1234-5678-90ab-02e208b2d34f",'
            '"quantity":10,"remaining_quantity":10,"start_time":1632873600,"sub'
            'scription_id":"ENG-000000bd","type":"SUB-ENG"},{"created_time":163'
            '2941882,"end_time":1744156799,"id":"d6d8ead3-1234-5678-90ab-98bade'
            'ac7287","modified_time":1632941882,"order_id":"00000000","org_id":'
            '"9777c1a0-1234-5678-90ab-02e208b2d34f","quantity":11,"remaining_qu'
            'antity":9,"start_time":1632873600,"subscription_id":"MAN-000008be"'
            ',"type":"SUB-MAN"}],"summary":{"SUB-ENG":18,"SUB-EX24":3,"SUB-MAN"'
            ':22,"SUB-VNA":20}}')
        received_body = APIHelper.json_deserialize(self.response_catcher.response.text)
        assert ComparisonHelper.match_body(expected_body, received_body)

    # Move or Delete MSP Licenses
    def test_move_or_delete_msp_license_to_another_org(self):
        # Parameters for the API call
        msp_id = '000000ab-00ab-00ab-00ab-0000000000ab'
        body = APIHelper.json_deserialize('{"op":"delete","subscription_id":"SUB-0000144"}', ApiV1MspsLicensesRequest.from_dictionary)

        # Perform the API call through the SDK function
        result = self.controller.move_or_delete_msp_license_to_another_org(msp_id, body)

        # Test response code
        assert self.response_catcher.response.status_code == 200

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = 'application/json'

        assert ComparisonHelper.match_headers(expected_headers, self.response_catcher.response.headers)


