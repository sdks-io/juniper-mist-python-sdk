# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

import json
import dateutil.parser

from tests.controllers.controller_test_base import ControllerTestBase
from apimatic_core.utilities.comparison_helper import ComparisonHelper
from mistapi.api_helper import APIHelper


class MspsLogsControllerTests(ControllerTestBase):

    @classmethod
    def setUpClass(cls):
        super(MspsLogsControllerTests, cls).setUpClass()
        cls.controller = cls.client.msps_logs
        cls.response_catcher = cls.controller.http_call_back

    # Get list of change logs for the current MSP
    def test_list_msp_logs(self):
        # Parameters for the API call
        msp_id = '000000ab-00ab-00ab-00ab-0000000000ab'
        site_id = None
        admin_name = None
        message = None
        sort = None
        start = 0
        end = 0
        limit = 100
        page = 1
        duration = '1d'

        # Perform the API call through the SDK function
        result = self.controller.list_msp_logs(msp_id, site_id, admin_name, message, sort, start, end, limit, page, duration)

        # Test response code
        assert self.response_catcher.response.status_code == 200

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = 'application/json'

        assert ComparisonHelper.match_headers(expected_headers, self.response_catcher.response.headers)

        
        # Test whether the captured response is as we expected
        assert result is not None
        expected_body = APIHelper.json_deserialize('{"end":1428954000,"limit":100,"results":[{"admin_id":"72bfa2bd-e58'
            'a-4670-9d20-a1468f7a6f58","admin_name":"test@mistsys.com","id":"c6'
            'f9347b-b0a4-4a23-b927-fa9249f2ffb2","message":"TEST AUDIT","org_id'
            '":"469f6eca-6276-4993-bfeb-53cbbbba6f58","site_id":"4ac1dcf4-9d8b-'
            '7211-65c4-057819f0862b","timestamp":1431382121}],"start":142893960'
            '0,"total":135}')
        received_body = APIHelper.json_deserialize(self.response_catcher.response.text)
        assert ComparisonHelper.match_body(expected_body, received_body)

    # Count by Distinct Attributes of Audit Logs
    def test_count_msp_logs(self):
        # Parameters for the API call
        msp_id = '000000ab-00ab-00ab-00ab-0000000000ab'
        distinct = 'admin_name'

        # Perform the API call through the SDK function
        result = self.controller.count_msp_logs(msp_id, distinct)

        # Test response code
        assert self.response_catcher.response.status_code == 200

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = 'application/json'

        assert ComparisonHelper.match_headers(expected_headers, self.response_catcher.response.headers)

        
        # Test whether the captured response is as we expected
        assert result is not None
        expected_body = APIHelper.json_deserialize('{"distinct":"string","end":0,"limit":0,"percentage":0,"results":[{'
            '"count":0,"property":"string"}],"start":0,"total":0}')
        received_body = APIHelper.json_deserialize(self.response_catcher.response.text)
        assert ComparisonHelper.match_body(expected_body, received_body)

