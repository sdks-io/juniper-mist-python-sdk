# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

import json
import dateutil.parser

from tests.controllers.controller_test_base import ControllerTestBase
from apimatic_core.utilities.comparison_helper import ComparisonHelper
from mistapi.api_helper import APIHelper
from mistapi.models.ssorole import Ssorole


class MspsSSORolesControllerTests(ControllerTestBase):

    @classmethod
    def setUpClass(cls):
        super(MspsSSORolesControllerTests, cls).setUpClass()
        cls.controller = cls.client.msps_sso_roles
        cls.response_catcher = cls.controller.http_call_back

    # Get List of MSP SSO Roles
    def test_list_msp_sso_roles(self):
        # Parameters for the API call
        msp_id = '000000ab-00ab-00ab-00ab-0000000000ab'

        # Perform the API call through the SDK function
        result = self.controller.list_msp_sso_roles(msp_id)

        # Test response code
        assert self.response_catcher.response.status_code == 200

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = 'application/json'

        assert ComparisonHelper.match_headers(expected_headers, self.response_catcher.response.headers)


    # Create MSP Role
    def test_create_msp_sso_role(self):
        # Parameters for the API call
        msp_id = '000000ab-00ab-00ab-00ab-0000000000ab'
        body = None

        # Perform the API call through the SDK function
        result = self.controller.create_msp_sso_role(msp_id, body)

        # Test response code
        assert self.response_catcher.response.status_code == 200

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = 'application/json'

        assert ComparisonHelper.match_headers(expected_headers, self.response_catcher.response.headers)

        
        # Test whether the captured response is as we expected
        assert result is not None
        expected_body = APIHelper.json_deserialize('{"created_time":0,"id":"b069b358-4c97-5319-1f8c-7c5ca64d6ab1","mod'
            'ified_time":0,"msp_id":"b069b358-4c97-5319-1f8c-7c5ca64d6ab1","nam'
            'e":"string","org_id":"b069b358-4c97-5319-1f8c-7c5ca64d6ab1","privi'
            'leges":[{"msp_id":"b069b358-4c97-5319-1f8c-7c5ca64d6ab1","msp_name'
            '":"string","name":"string","org_id":"b069b358-4c97-5319-1f8c-7c5ca'
            '64d6ab1","org_name":"string","orggroup_ids":["b069b358-4c97-5319-1'
            'f8c-7c5ca64d6ab1"],"role":"admin","scope":"org","site_id":"b069b35'
            '8-4c97-5319-1f8c-7c5ca64d6ab1","sitegroup_ids":["6f4bf402-45f9-2a5'
            '6-6c8b-7f83d3bc98e9"]}],"site_id":"b069b358-4c97-5319-1f8c-7c5ca64'
            'd6ab1"}')
        received_body = APIHelper.json_deserialize(self.response_catcher.response.text)
        assert ComparisonHelper.match_body(expected_body, received_body)

    # Delete MSP SSO Roles
    def test_delete_msp_sso_role(self):
        # Parameters for the API call
        msp_id = '000000ab-00ab-00ab-00ab-0000000000ab'
        ssorole_id = '000000ab-00ab-00ab-00ab-0000000000ab'

        # Perform the API call through the SDK function
        result = self.controller.delete_msp_sso_role(msp_id, ssorole_id)

        # Test response code
        assert self.response_catcher.response.status_code == 200

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = 'application/json'

        assert ComparisonHelper.match_headers(expected_headers, self.response_catcher.response.headers)


    # Update SSO Role
    def test_update_msp_sso_role(self):
        # Parameters for the API call
        msp_id = '000000ab-00ab-00ab-00ab-0000000000ab'
        ssorole_id = '000000ab-00ab-00ab-00ab-0000000000ab'
        body = None

        # Perform the API call through the SDK function
        result = self.controller.update_msp_sso_role(msp_id, ssorole_id, body)

        # Test response code
        assert self.response_catcher.response.status_code == 200

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = 'application/json'

        assert ComparisonHelper.match_headers(expected_headers, self.response_catcher.response.headers)

        
        # Test whether the captured response is as we expected
        assert result is not None
        expected_body = APIHelper.json_deserialize('{"created_time":0,"id":"b069b358-4c97-5319-1f8c-7c5ca64d6ab1","mod'
            'ified_time":0,"msp_id":"b069b358-4c97-5319-1f8c-7c5ca64d6ab1","nam'
            'e":"string","org_id":"b069b358-4c97-5319-1f8c-7c5ca64d6ab1","privi'
            'leges":[{"msp_id":"b069b358-4c97-5319-1f8c-7c5ca64d6ab1","msp_name'
            '":"string","name":"string","org_id":"b069b358-4c97-5319-1f8c-7c5ca'
            '64d6ab1","org_name":"string","orggroup_ids":["b069b358-4c97-5319-1'
            'f8c-7c5ca64d6ab1"],"role":"admin","scope":"org","site_id":"b069b35'
            '8-4c97-5319-1f8c-7c5ca64d6ab1","sitegroup_ids":["6f4bf402-45f9-2a5'
            '6-6c8b-7f83d3bc98e9"]}],"site_id":"b069b358-4c97-5319-1f8c-7c5ca64'
            'd6ab1"}')
        received_body = APIHelper.json_deserialize(self.response_catcher.response.text)
        assert ComparisonHelper.match_body(expected_body, received_body)

