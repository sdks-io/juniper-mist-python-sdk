# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

import json
import dateutil.parser

from tests.controllers.controller_test_base import ControllerTestBase
from apimatic_core.utilities.comparison_helper import ComparisonHelper
from mistapi.api_helper import APIHelper


class SitesSkyatpControllerTests(ControllerTestBase):

    @classmethod
    def setUpClass(cls):
        super(SitesSkyatpControllerTests, cls).setUpClass()
        cls.controller = cls.client.sites_skyatp
        cls.response_catcher = cls.controller.http_call_back

    # Count by Distinct Attributes of Skyatp Events (WIP)
    def test_count_site_skyatp_events(self):
        # Parameters for the API call
        site_id = '000000ab-00ab-00ab-00ab-0000000000ab'
        distinct = 'type'
        mtype = None
        mac = None
        device_mac = None
        threat_level = None
        ip_address = '192.168.1.1'
        page = 1
        limit = 100
        start = 0
        end = 0
        duration = '1d'

        # Perform the API call through the SDK function
        result = self.controller.count_site_skyatp_events(site_id, distinct, mtype, mac, device_mac, threat_level, ip_address, page, limit, start, end, duration)

        # Test response code
        assert self.response_catcher.response.status_code == 200

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = 'application/json'

        assert ComparisonHelper.match_headers(expected_headers, self.response_catcher.response.headers)

        
        # Test whether the captured response is as we expected
        assert result is not None
        expected_body = APIHelper.json_deserialize('{"distinct":"string","end":0,"limit":0,"percentage":0,"results":[{'
            '"count":0,"property":"string"}],"start":0,"total":0}')
        received_body = APIHelper.json_deserialize(self.response_catcher.response.text)
        assert ComparisonHelper.match_body(expected_body, received_body)

    # Search Skyatp Events (WIP)
    def test_search_site_skyatp_events(self):
        # Parameters for the API call
        site_id = '000000ab-00ab-00ab-00ab-0000000000ab'
        mtype = None
        mac = None
        device_mac = None
        threat_level = None
        ip_address = '192.168.1.1'
        limit = 100
        start = 0
        end = 0
        duration = '1d'

        # Perform the API call through the SDK function
        result = self.controller.search_site_skyatp_events(site_id, mtype, mac, device_mac, threat_level, ip_address, limit, start, end, duration)

        # Test response code
        assert self.response_catcher.response.status_code == 200

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = 'application/json'

        assert ComparisonHelper.match_headers(expected_headers, self.response_catcher.response.headers)

        
        # Test whether the captured response is as we expected
        assert result is not None
        expected_body = APIHelper.json_deserialize('{"end":1513176951,"limit":10,"results":[{"device_mac":"658279bb1fa'
            '4","ip":"172.16.0.11","mac":"b019c66c8348","org_id":"3139f2c2-fac6'
            '-11e5-8156-0242ac110006","site_id":"70e0f468-fc13-11e5-85ad-0242ac'
            '110008","threat_level":7,"timestamp":1592524478,"type":"cc"}],"sta'
            'rt":1512572151,"total":1}')
        received_body = APIHelper.json_deserialize(self.response_catcher.response.text)
        assert ComparisonHelper.match_body(expected_body, received_body)

