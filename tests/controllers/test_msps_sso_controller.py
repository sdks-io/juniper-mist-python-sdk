# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

import json
import dateutil.parser

from tests.controllers.controller_test_base import ControllerTestBase
from apimatic_core.utilities.comparison_helper import ComparisonHelper
from mistapi.api_helper import APIHelper
from mistapi.models.sso import Sso


class MspsSSOControllerTests(ControllerTestBase):

    @classmethod
    def setUpClass(cls):
        super(MspsSSOControllerTests, cls).setUpClass()
        cls.controller = cls.client.msps_sso
        cls.response_catcher = cls.controller.http_call_back

    # List MSP SSO Configs
    def test_list_msp_ssos(self):
        # Parameters for the API call
        msp_id = '000000ab-00ab-00ab-00ab-0000000000ab'

        # Perform the API call through the SDK function
        result = self.controller.list_msp_ssos(msp_id)

        # Test response code
        assert self.response_catcher.response.status_code == 200

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = 'application/json'

        assert ComparisonHelper.match_headers(expected_headers, self.response_catcher.response.headers)

        
        # Test whether the captured response is as we expected
        assert result is not None
        expected_body = APIHelper.json_deserialize('[{"created_time":0,"custom_logout_url":"string","default_role":"st'
            'ring","domain":"string","id":"b069b358-4c97-5319-1f8c-7c5ca64d6ab1'
            '","idp_cert":"string","idp_sign_algo":"string","idp_sso_url":"stri'
            'ng","ignore_unmatched_roles":true,"issuer":"string","modified_time'
            '":0,"msp_id":"b069b358-4c97-5319-1f8c-7c5ca64d6ab1","name":"string'
            '","nameid_format":"email","org_id":"b069b358-4c97-5319-1f8c-7c5ca6'
            '4d6ab1","site_id":"b069b358-4c97-5319-1f8c-7c5ca64d6ab1","type":"s'
            'tring"}]')
        received_body = APIHelper.json_deserialize(self.response_catcher.response.text)
        assert ComparisonHelper.match_body(expected_body, received_body)

    # Create MSP SSO profile
    def test_create_msp_sso(self):
        # Parameters for the API call
        msp_id = '000000ab-00ab-00ab-00ab-0000000000ab'
        body = None

        # Perform the API call through the SDK function
        result = self.controller.create_msp_sso(msp_id, body)

        # Test response code
        assert self.response_catcher.response.status_code == 200

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = 'application/json'

        assert ComparisonHelper.match_headers(expected_headers, self.response_catcher.response.headers)

        
        # Test whether the captured response is as we expected
        assert result is not None
        expected_body = APIHelper.json_deserialize('{"created_time":0,"custom_logout_url":"string","default_role":"str'
            'ing","domain":"string","id":"b069b358-4c97-5319-1f8c-7c5ca64d6ab1"'
            ',"idp_cert":"string","idp_sign_algo":"string","idp_sso_url":"strin'
            'g","ignore_unmatched_roles":true,"issuer":"string","modified_time"'
            ':0,"msp_id":"b069b358-4c97-5319-1f8c-7c5ca64d6ab1","name":"string"'
            ',"nameid_format":"email","org_id":"b069b358-4c97-5319-1f8c-7c5ca64'
            'd6ab1","site_id":"b069b358-4c97-5319-1f8c-7c5ca64d6ab1","type":"st'
            'ring"}')
        received_body = APIHelper.json_deserialize(self.response_catcher.response.text)
        assert ComparisonHelper.match_body(expected_body, received_body)

    # Delete MSP SSO Config
    def test_delete_msp_sso(self):
        # Parameters for the API call
        msp_id = '000000ab-00ab-00ab-00ab-0000000000ab'
        sso_id = '000000ab-00ab-00ab-00ab-0000000000ab'

        # Perform the API call through the SDK function
        result = self.controller.delete_msp_sso(msp_id, sso_id)

        # Test response code
        assert self.response_catcher.response.status_code == 200

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = 'application/json'

        assert ComparisonHelper.match_headers(expected_headers, self.response_catcher.response.headers)


    # Get MSP SSO Config
    def test_get_msp_sso(self):
        # Parameters for the API call
        msp_id = '000000ab-00ab-00ab-00ab-0000000000ab'
        sso_id = '000000ab-00ab-00ab-00ab-0000000000ab'

        # Perform the API call through the SDK function
        result = self.controller.get_msp_sso(msp_id, sso_id)

        # Test response code
        assert self.response_catcher.response.status_code == 200

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = 'application/json'

        assert ComparisonHelper.match_headers(expected_headers, self.response_catcher.response.headers)

        
        # Test whether the captured response is as we expected
        assert result is not None
        expected_body = APIHelper.json_deserialize('{"created_time":0,"custom_logout_url":"string","default_role":"str'
            'ing","domain":"string","id":"b069b358-4c97-5319-1f8c-7c5ca64d6ab1"'
            ',"idp_cert":"string","idp_sign_algo":"string","idp_sso_url":"strin'
            'g","ignore_unmatched_roles":true,"issuer":"string","modified_time"'
            ':0,"msp_id":"b069b358-4c97-5319-1f8c-7c5ca64d6ab1","name":"string"'
            ',"nameid_format":"email","org_id":"b069b358-4c97-5319-1f8c-7c5ca64'
            'd6ab1","site_id":"b069b358-4c97-5319-1f8c-7c5ca64d6ab1","type":"st'
            'ring"}')
        received_body = APIHelper.json_deserialize(self.response_catcher.response.text)
        assert ComparisonHelper.match_body(expected_body, received_body)

    # Update MSP SSO config
    def test_update_msp_sso(self):
        # Parameters for the API call
        msp_id = '000000ab-00ab-00ab-00ab-0000000000ab'
        sso_id = '000000ab-00ab-00ab-00ab-0000000000ab'
        body = APIHelper.json_deserialize('{"custom_logout_url":"string","idp_cert":"string","idp_sign_algo":'
            '"string","idp_sso_url":"string","ignore_unmatched_roles":true,"iss'
            'uer":"string","name":"string","nameid_format":"email"}', Sso.from_dictionary)

        # Perform the API call through the SDK function
        result = self.controller.update_msp_sso(msp_id, sso_id, body)

        # Test response code
        assert self.response_catcher.response.status_code == 200

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = 'application/json'

        assert ComparisonHelper.match_headers(expected_headers, self.response_catcher.response.headers)

        
        # Test whether the captured response is as we expected
        assert result is not None
        expected_body = APIHelper.json_deserialize('{"created_time":0,"custom_logout_url":"string","default_role":"str'
            'ing","domain":"string","id":"b069b358-4c97-5319-1f8c-7c5ca64d6ab1"'
            ',"idp_cert":"string","idp_sign_algo":"string","idp_sso_url":"strin'
            'g","ignore_unmatched_roles":true,"issuer":"string","modified_time"'
            ':0,"msp_id":"b069b358-4c97-5319-1f8c-7c5ca64d6ab1","name":"string"'
            ',"nameid_format":"email","org_id":"b069b358-4c97-5319-1f8c-7c5ca64'
            'd6ab1","site_id":"b069b358-4c97-5319-1f8c-7c5ca64d6ab1","type":"st'
            'ring"}')
        received_body = APIHelper.json_deserialize(self.response_catcher.response.text)
        assert ComparisonHelper.match_body(expected_body, received_body)

    # Get List of MSP SSO Latest Failures
    def test_list_msp_sso_latest_failures(self):
        # Parameters for the API call
        msp_id = '000000ab-00ab-00ab-00ab-0000000000ab'
        sso_id = '000000ab-00ab-00ab-00ab-0000000000ab'

        # Perform the API call through the SDK function
        result = self.controller.list_msp_sso_latest_failures(msp_id, sso_id)

        # Test response code
        assert self.response_catcher.response.status_code == 200

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = 'application/json'

        assert ComparisonHelper.match_headers(expected_headers, self.response_catcher.response.headers)

        
        # Test whether the captured response is as we expected
        assert result is not None
        expected_body = APIHelper.json_deserialize('{"results":[{"detail":"string","saml_assertion_xml":"string","time'
            'stamp":0}]}')
        received_body = APIHelper.json_deserialize(self.response_catcher.response.text)
        assert ComparisonHelper.match_body(expected_body, received_body)

    # Get MSP SSO SAML Metadata
    def test_get_msp_sso_saml_metadata(self):
        # Parameters for the API call
        msp_id = '000000ab-00ab-00ab-00ab-0000000000ab'
        sso_id = '000000ab-00ab-00ab-00ab-0000000000ab'

        # Perform the API call through the SDK function
        result = self.controller.get_msp_sso_saml_metadata(msp_id, sso_id)

        # Test response code
        assert self.response_catcher.response.status_code == 200

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = 'application/json'

        assert ComparisonHelper.match_headers(expected_headers, self.response_catcher.response.headers)

        
        # Test whether the captured response is as we expected
        assert result is not None
        expected_body = APIHelper.json_deserialize('{"acs_url":"https://api.mist.com/api/v1/saml/llDfa13f/login","enti'
            'ty_id":"https://api.mist.com/api/v1/saml/llDfa13f/login","logout_u'
            'rl":"https://api.mist.com/api/v1/saml/llDfa13f/logout","metadata_x'
            'ml":"<?xml version=\"1.0\" encoding=\"UTF-8\"?><md:EntityDescripto'
            'r xmlns:md=\"urn:oasis:names:tc:SAML:2.0:metadata\" entityID=\"htt'
            'ps://api.mist.com/api/v1/saml/llDfa13f/login\" validUntil=\"2027-1'
            '0-12T21:59:01Z\" xmlns:ds=\"http://www.w3.org/2000/09/xmldsig#\"><'
            'md:SPSSODescriptor AuthnRequestsSigned=\"false\" WantAssertionsSig'
            'ned=\"true\" protocolSupportEnumeration=\"urn:oasis:names:tc:SAML:'
            '2.0:protocol\"><md:NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid'
            '-format:unspecified</md:NameIDFormat><md:AssertionConsumerService '
            'Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\" Locatio'
            'n=\"https://api.mist.com/api/v1/saml/llDfa13f/login\" index=\"0\" '
            'isDefault=\"true\"/></md:SPSSODescriptor></md:EntityDescriptor>"}')
        received_body = APIHelper.json_deserialize(self.response_catcher.response.text)
        assert ComparisonHelper.match_body(expected_body, received_body)

    # Download MSP SSO SAML Metadata
    #
    #Example of metadata.xml:
    #```xml
    #<?xml version="1.0" encoding="UTF-8"?><md:EntityDescriptor xmlns:md="urn:oasis:names:tc:SAML:2.0:metadata" entityID="https://api.mist.com/api/v1/saml/5hdF5g/login" validUntil="2027-10-12T21:59:01Z" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">
    #    <md:SPSSODescriptor AuthnRequestsSigned="false" WantAssertionsSigned="true" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">
    #        <md:SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://api.mist.com/api/v1/saml/5hdF5g/logout" />
    #        <md:NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</md:NameIDFormat>
    #        <md:AssertionConsumerService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://api.mist.com/api/v1/saml/5hdF5g/login" index="0" isDefault="true"/>
    #        <md:AttributeConsumingService index="0">
    #            <md:ServiceName xml:lang="en-US">Mist</md:ServiceName>
    #            <md:RequestedAttribute Name="Role" NameFormat="urn:oasis:names:tc:SAML:2.0:attrname-format:basic" isRequired="true"/>
    #            <md:RequestedAttribute Name="FirstName" NameFormat="urn:oasis:names:tc:SAML:2.0:attrname-format:basic" isRequired="false"/>
    #            <md:RequestedAttribute Name="LastName" NameFormat="urn:oasis:names:tc:SAML:2.0:attrname-format:basic" isRequired="false"/>
    #        </md:AttributeConsumingService>
    #    </md:SPSSODescriptor>
    #</md:EntityDescriptor>
    #```
    def test_download_msp_sso_saml_metadata(self):
        # Parameters for the API call
        msp_id = '000000ab-00ab-00ab-00ab-0000000000ab'
        sso_id = '000000ab-00ab-00ab-00ab-0000000000ab'

        # Perform the API call through the SDK function
        result = self.controller.download_msp_sso_saml_metadata(msp_id, sso_id)

        # Test response code
        assert self.response_catcher.response.status_code == 200

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = 'application/json'

        assert ComparisonHelper.match_headers(expected_headers, self.response_catcher.response.headers)


