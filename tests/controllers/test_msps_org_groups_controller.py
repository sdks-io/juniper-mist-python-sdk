# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

import json
import dateutil.parser

from tests.controllers.controller_test_base import ControllerTestBase
from apimatic_core.utilities.comparison_helper import ComparisonHelper
from mistapi.api_helper import APIHelper
from mistapi.models.orggroup import Orggroup


class MspsOrgGroupsControllerTests(ControllerTestBase):

    @classmethod
    def setUpClass(cls):
        super(MspsOrgGroupsControllerTests, cls).setUpClass()
        cls.controller = cls.client.msps_org_groups
        cls.response_catcher = cls.controller.http_call_back

    # Get List of MSP Org Groups
    def test_list_msp_org_groups(self):
        # Parameters for the API call
        msp_id = '000000ab-00ab-00ab-00ab-0000000000ab'

        # Perform the API call through the SDK function
        result = self.controller.list_msp_org_groups(msp_id)

        # Test response code
        assert self.response_catcher.response.status_code == 200

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = 'application/json'

        assert ComparisonHelper.match_headers(expected_headers, self.response_catcher.response.headers)

        
        # Test whether the captured response is as we expected
        assert result is not None
        expected_body = APIHelper.json_deserialize('[{"created_time":0,"id":"b069b358-4c97-5319-1f8c-7c5ca64d6ab1","mo'
            'dified_time":0,"msp_id":"b069b358-4c97-5319-1f8c-7c5ca64d6ab1","na'
            'me":"string","org_ids":["b069b358-4c97-5319-1f8c-7c5ca64d6ab1"]}]')
        received_body = APIHelper.json_deserialize(self.response_catcher.response.text)
        assert ComparisonHelper.match_body(expected_body, received_body)

    # Create MSP Org Group
    def test_create_msp_org_group(self):
        # Parameters for the API call
        msp_id = '000000ab-00ab-00ab-00ab-0000000000ab'
        body = APIHelper.json_deserialize('{"msp_id":"b069b358-4c97-5319-1f8c-7c5ca64d6ab1","name":"string","'
            'org_ids":["b069b358-4c97-5319-1f8c-7c5ca64d6ab1"]}', Orggroup.from_dictionary)

        # Perform the API call through the SDK function
        result = self.controller.create_msp_org_group(msp_id, body)

        # Test response code
        assert self.response_catcher.response.status_code == 200

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = 'application/json'

        assert ComparisonHelper.match_headers(expected_headers, self.response_catcher.response.headers)

        
        # Test whether the captured response is as we expected
        assert result is not None
        expected_body = APIHelper.json_deserialize('{"created_time":0,"id":"b069b358-4c97-5319-1f8c-7c5ca64d6ab1","mod'
            'ified_time":0,"msp_id":"b069b358-4c97-5319-1f8c-7c5ca64d6ab1","nam'
            'e":"string","org_ids":["b069b358-4c97-5319-1f8c-7c5ca64d6ab1"]}')
        received_body = APIHelper.json_deserialize(self.response_catcher.response.text)
        assert ComparisonHelper.match_body(expected_body, received_body)

    # Delete MSP Org Group
    def test_delete_msp_org_group(self):
        # Parameters for the API call
        msp_id = '000000ab-00ab-00ab-00ab-0000000000ab'
        orggroup_id = '000000ab-00ab-00ab-00ab-0000000000ab'

        # Perform the API call through the SDK function
        result = self.controller.delete_msp_org_group(msp_id, orggroup_id)

        # Test response code
        assert self.response_catcher.response.status_code == 200

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = 'application/json'

        assert ComparisonHelper.match_headers(expected_headers, self.response_catcher.response.headers)


    # Get MSP Org Group Details
    def test_get_msp_org_group(self):
        # Parameters for the API call
        msp_id = '000000ab-00ab-00ab-00ab-0000000000ab'
        orggroup_id = '000000ab-00ab-00ab-00ab-0000000000ab'

        # Perform the API call through the SDK function
        result = self.controller.get_msp_org_group(msp_id, orggroup_id)

        # Test response code
        assert self.response_catcher.response.status_code == 200

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = 'application/json'

        assert ComparisonHelper.match_headers(expected_headers, self.response_catcher.response.headers)

        
        # Test whether the captured response is as we expected
        assert result is not None
        expected_body = APIHelper.json_deserialize('{"created_time":0,"id":"b069b358-4c97-5319-1f8c-7c5ca64d6ab1","mod'
            'ified_time":0,"msp_id":"b069b358-4c97-5319-1f8c-7c5ca64d6ab1","nam'
            'e":"string","org_ids":["b069b358-4c97-5319-1f8c-7c5ca64d6ab1"]}')
        received_body = APIHelper.json_deserialize(self.response_catcher.response.text)
        assert ComparisonHelper.match_body(expected_body, received_body)

    # Update MSP Org Group
    def test_update_msp_org_group(self):
        # Parameters for the API call
        msp_id = '000000ab-00ab-00ab-00ab-0000000000ab'
        orggroup_id = '000000ab-00ab-00ab-00ab-0000000000ab'
        body = None

        # Perform the API call through the SDK function
        result = self.controller.update_msp_org_group(msp_id, orggroup_id, body)

        # Test response code
        assert self.response_catcher.response.status_code == 200

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = 'application/json'

        assert ComparisonHelper.match_headers(expected_headers, self.response_catcher.response.headers)

        
        # Test whether the captured response is as we expected
        assert result is not None
        expected_body = APIHelper.json_deserialize('{"created_time":0,"id":"b069b358-4c97-5319-1f8c-7c5ca64d6ab1","mod'
            'ified_time":0,"msp_id":"b069b358-4c97-5319-1f8c-7c5ca64d6ab1","nam'
            'e":"string","org_ids":["b069b358-4c97-5319-1f8c-7c5ca64d6ab1"]}')
        received_body = APIHelper.json_deserialize(self.response_catcher.response.text)
        assert ComparisonHelper.match_body(expected_body, received_body)

    # Search in MSP Orgs
    def test_search_msp_org_group(self):
        # Parameters for the API call
        msp_id = '000000ab-00ab-00ab-00ab-0000000000ab'
        mtype = 'orgs'
        q = 'search'
        limit = 100
        start = 0
        end = 0
        duration = '1d'

        # Perform the API call through the SDK function
        result = self.controller.search_msp_org_group(msp_id, mtype, q, limit, start, end, duration)

        # Test response code
        assert self.response_catcher.response.status_code == 200

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = 'application/json'

        assert ComparisonHelper.match_headers(expected_headers, self.response_catcher.response.headers)

        
        # Test whether the captured response is as we expected
        assert result is not None
        expected_body = APIHelper.json_deserialize('{"limit":0,"page":0,"results":[{"id":"b069b358-4c97-5319-1f8c-7c5c'
            'a64d6ab1","text":"string","type":"string"}],"total":0}')
        received_body = APIHelper.json_deserialize(self.response_catcher.response.text)
        assert ComparisonHelper.match_body(expected_body, received_body)

