# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

import json
import dateutil.parser

from tests.controllers.controller_test_base import ControllerTestBase
from apimatic_core.utilities.comparison_helper import ComparisonHelper
from mistapi.api_helper import APIHelper
from mistapi.models.org import Org
from mistapi.models.api_v_1_msps_orgs_request import ApiV1MspsOrgsRequest


class MspsOrgsControllerTests(ControllerTestBase):

    @classmethod
    def setUpClass(cls):
        super(MspsOrgsControllerTests, cls).setUpClass()
        cls.controller = cls.client.msps_orgs
        cls.response_catcher = cls.controller.http_call_back

    # Get List of MSP Orgs
    def test_list_msp_orgs(self):
        # Parameters for the API call
        msp_id = '000000ab-00ab-00ab-00ab-0000000000ab'

        # Perform the API call through the SDK function
        result = self.controller.list_msp_orgs(msp_id)

        # Test response code
        assert self.response_catcher.response.status_code == 200

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = 'application/json'

        assert ComparisonHelper.match_headers(expected_headers, self.response_catcher.response.headers)

        
        # Test whether the captured response is as we expected
        assert result is not None
        expected_body = APIHelper.json_deserialize('[{"alarmtemplate_id":"b069b358-4c97-5319-1f8c-7c5ca64d6ab1","allow'
            '_mist":true,"created_time":0,"id":"b069b358-4c97-5319-1f8c-7c5ca64'
            'd6ab1","modified_time":0,"msp_id":"b069b358-4c97-5319-1f8c-7c5ca64'
            'd6ab1","name":"string","orggroup_ids":["b069b358-4c97-5319-1f8c-7c'
            '5ca64d6ab1"],"session_expiry":0}]')
        received_body = APIHelper.json_deserialize(self.response_catcher.response.text)
        assert ComparisonHelper.match_body(expected_body, received_body)

    # Create an Org under MSP
    def test_create_msp_org(self):
        # Parameters for the API call
        msp_id = '000000ab-00ab-00ab-00ab-0000000000ab'
        body = APIHelper.json_deserialize('{"alarmtemplate_id":"b069b358-4c97-5319-1f8c-7c5ca64d6ab1","allow_'
            'mist":true,"name":"string","orggroup_ids":["b069b358-4c97-5319-1f8'
            'c-7c5ca64d6ab1"],"session_expiry":10}', Org.from_dictionary)

        # Perform the API call through the SDK function
        result = self.controller.create_msp_org(msp_id, body)

        # Test response code
        assert self.response_catcher.response.status_code == 200

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = 'application/json'

        assert ComparisonHelper.match_headers(expected_headers, self.response_catcher.response.headers)

        
        # Test whether the captured response is as we expected
        assert result is not None
        expected_body = APIHelper.json_deserialize('{"alarmtemplate_id":"b069b358-4c97-5319-1f8c-7c5ca64d6ab1","allow_'
            'mist":true,"created_time":0,"id":"b069b358-4c97-5319-1f8c-7c5ca64d'
            '6ab1","modified_time":0,"msp_id":"b069b358-4c97-5319-1f8c-7c5ca64d'
            '6ab1","name":"string","orggroup_ids":["b069b358-4c97-5319-1f8c-7c5'
            'ca64d6ab1"],"session_expiry":0}')
        received_body = APIHelper.json_deserialize(self.response_catcher.response.text)
        assert ComparisonHelper.match_body(expected_body, received_body)

    # Assign or Unassign Orgs to an MSP account
    def test_manage_msp_orgs(self):
        # Parameters for the API call
        msp_id = '000000ab-00ab-00ab-00ab-0000000000ab'
        body = APIHelper.json_deserialize('{"op":"assign","org_ids":["2b069b358-4c97-5319-1f8c-7c5ca64d6ab1"]'
            '}', ApiV1MspsOrgsRequest.from_dictionary)

        # Perform the API call through the SDK function
        result = self.controller.manage_msp_orgs(msp_id, body)

        # Test response code
        assert self.response_catcher.response.status_code == 200

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = 'application/json'

        assert ComparisonHelper.match_headers(expected_headers, self.response_catcher.response.headers)


    # Search Org in MSP
    def test_search_msp_orgs(self):
        # Parameters for the API call
        msp_id = '000000ab-00ab-00ab-00ab-0000000000ab'
        name = None
        org_id = None
        sub_insufficient = None
        trial_enabled = None
        usage_types = None
        limit = 100

        # Perform the API call through the SDK function
        result = self.controller.search_msp_orgs(msp_id, name, org_id, sub_insufficient, trial_enabled, usage_types, limit)

        # Test response code
        assert self.response_catcher.response.status_code == 200

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = 'application/json'

        assert ComparisonHelper.match_headers(expected_headers, self.response_catcher.response.headers)

        
        # Test whether the captured response is as we expected
        assert result is not None
        expected_body = APIHelper.json_deserialize('{"end":1614383378.4365287,"limit":10,"results":[{"msp_id":"d287e62'
            'f-0000-0000-0000-f2b9ba0a531f","name":"Test Org","num_aps":9,"num_'
            'sites":5,"num_switches":1,"num_unassigned_aps":1,"org_id":"bb1a8bf'
            '6-0000-0000-0000-8053a663cf65","sub_ana_required":9,"sub_ast_entit'
            'led":5,"sub_ast_required":3,"sub_eng_required":3,"sub_ex12_require'
            'd":1,"sub_insufficient":true,"sub_man_required":9,"sub_vna_entitle'
            'd":1,"timestamp":1614322563.513937,"trial_enabled":false,"usage_ty'
            'pes":["sub_eng"]},{"msp_id":"d287e62f-0000-0000-0000-f2b9ba0a531f"'
            ',"name":"Rogue Test1","num_aps":1,"num_sites":1,"org_id":"0fb81690'
            '-0000-0000-0000-9596d1d1534f","sub_ana_entitled":1,"sub_ana_requir'
            'ed":1,"sub_insufficient":false,"sub_man_entitled":1,"sub_man_requi'
            'red":1,"timestamp":1614309876.5009551}],"start":1613778578.4365668'
            ',"total":2}')
        received_body = APIHelper.json_deserialize(self.response_catcher.response.text)
        assert ComparisonHelper.match_body(expected_body, received_body)

    # Get MSP Org Details
    def test_get_msp_org(self):
        # Parameters for the API call
        msp_id = '000000ab-00ab-00ab-00ab-0000000000ab'
        org_id = '000000ab-00ab-00ab-00ab-0000000000ab'

        # Perform the API call through the SDK function
        result = self.controller.get_msp_org(msp_id, org_id)

        # Test response code
        assert self.response_catcher.response.status_code == 200

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = 'application/json'

        assert ComparisonHelper.match_headers(expected_headers, self.response_catcher.response.headers)

        
        # Test whether the captured response is as we expected
        assert result is not None
        expected_body = APIHelper.json_deserialize('{"alarmtemplate_id":"b069b358-4c97-5319-1f8c-7c5ca64d6ab1","allow_'
            'mist":true,"created_time":0,"id":"b069b358-4c97-5319-1f8c-7c5ca64d'
            '6ab1","modified_time":0,"msp_id":"b069b358-4c97-5319-1f8c-7c5ca64d'
            '6ab1","name":"string","orggroup_ids":["b069b358-4c97-5319-1f8c-7c5'
            'ca64d6ab1"],"session_expiry":0}')
        received_body = APIHelper.json_deserialize(self.response_catcher.response.text)
        assert ComparisonHelper.match_body(expected_body, received_body)

