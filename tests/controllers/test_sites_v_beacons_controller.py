# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

import json
import dateutil.parser

from tests.controllers.controller_test_base import ControllerTestBase
from apimatic_core.utilities.comparison_helper import ComparisonHelper
from mistapi.api_helper import APIHelper
from mistapi.models.vbeacon import Vbeacon


class SitesVBeaconsControllerTests(ControllerTestBase):

    @classmethod
    def setUpClass(cls):
        super(SitesVBeaconsControllerTests, cls).setUpClass()
        cls.controller = cls.client.sites_v_beacons
        cls.response_catcher = cls.controller.http_call_back

    # Get List of Site Virtual Beacons
    def test_list_site_v_beacons(self):
        # Parameters for the API call
        site_id = '000000ab-00ab-00ab-00ab-0000000000ab'

        # Perform the API call through the SDK function
        result = self.controller.list_site_v_beacons(site_id)

        # Test response code
        assert self.response_catcher.response.status_code == 200

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = 'application/json'

        assert ComparisonHelper.match_headers(expected_headers, self.response_catcher.response.headers)

        
        # Test whether the captured response is as we expected
        assert result is not None
        expected_body = APIHelper.json_deserialize('[{"created_time":0,"id":"b069b358-4c97-5319-1f8c-7c5ca64d6ab1","ma'
            'jor":0,"map_id":"b069b358-4c97-5319-1f8c-7c5ca64d6ab1","message":"'
            'string","minor":0,"modified_time":0,"name":"string","org_id":"b069'
            'b358-4c97-5319-1f8c-7c5ca64d6ab1","power":4,"power_mode":"default"'
            ',"site_id":"b069b358-4c97-5319-1f8c-7c5ca64d6ab1","url":"string","'
            'uuid":"b069b358-4c97-5319-1f8c-7c5ca64d6ab1","wayfinding_nodename"'
            ':"string","x":0,"y":0}]')
        received_body = APIHelper.json_deserialize(self.response_catcher.response.text)
        assert ComparisonHelper.match_body(expected_body, received_body)

    # Create Virtual Beacon
    def test_create_site_v_beacon(self):
        # Parameters for the API call
        site_id = '000000ab-00ab-00ab-00ab-0000000000ab'
        body = APIHelper.json_deserialize('{"major":0,"map_id":"b069b358-4c97-5319-1f8c-7c5ca64d6ab1","messag'
            'e":"string","minor":0,"name":"string","power":4,"power_mode":"defa'
            'ult","url":"string","uuid":"6f4bf402-45f9-2a56-6c8b-7f83d3bc98e9",'
            '"wayfinding_nodename":"string","x":0,"y":0}', Vbeacon.from_dictionary)

        # Perform the API call through the SDK function
        result = self.controller.create_site_v_beacon(site_id, body)

        # Test response code
        assert self.response_catcher.response.status_code == 200

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = 'application/json'

        assert ComparisonHelper.match_headers(expected_headers, self.response_catcher.response.headers)

        
        # Test whether the captured response is as we expected
        assert result is not None
        expected_body = APIHelper.json_deserialize('{"created_time":0,"id":"b069b358-4c97-5319-1f8c-7c5ca64d6ab1","maj'
            'or":0,"map_id":"b069b358-4c97-5319-1f8c-7c5ca64d6ab1","message":"s'
            'tring","minor":0,"modified_time":0,"name":"string","org_id":"b069b'
            '358-4c97-5319-1f8c-7c5ca64d6ab1","power":4,"power_mode":"default",'
            '"site_id":"b069b358-4c97-5319-1f8c-7c5ca64d6ab1","url":"string","u'
            'uid":"b069b358-4c97-5319-1f8c-7c5ca64d6ab1","wayfinding_nodename":'
            '"string","x":0,"y":0}')
        received_body = APIHelper.json_deserialize(self.response_catcher.response.text)
        assert ComparisonHelper.match_body(expected_body, received_body)

    # Delete Site Virtual Beacon
    def test_delete_site_v_beacon(self):
        # Parameters for the API call
        site_id = '000000ab-00ab-00ab-00ab-0000000000ab'
        vbeacon_id = '000000ab-00ab-00ab-00ab-0000000000ab'

        # Perform the API call through the SDK function
        result = self.controller.delete_site_v_beacon(site_id, vbeacon_id)

        # Test response code
        assert self.response_catcher.response.status_code == 200

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = 'application/json'

        assert ComparisonHelper.match_headers(expected_headers, self.response_catcher.response.headers)


    # Get Site Virtual Beacon Details
    def test_get_site_v_beacon(self):
        # Parameters for the API call
        site_id = '000000ab-00ab-00ab-00ab-0000000000ab'
        vbeacon_id = '000000ab-00ab-00ab-00ab-0000000000ab'

        # Perform the API call through the SDK function
        result = self.controller.get_site_v_beacon(site_id, vbeacon_id)

        # Test response code
        assert self.response_catcher.response.status_code == 200

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = 'application/json'

        assert ComparisonHelper.match_headers(expected_headers, self.response_catcher.response.headers)

        
        # Test whether the captured response is as we expected
        assert result is not None
        expected_body = APIHelper.json_deserialize('{"created_time":0,"id":"b069b358-4c97-5319-1f8c-7c5ca64d6ab1","maj'
            'or":0,"map_id":"b069b358-4c97-5319-1f8c-7c5ca64d6ab1","message":"s'
            'tring","minor":0,"modified_time":0,"name":"string","org_id":"b069b'
            '358-4c97-5319-1f8c-7c5ca64d6ab1","power":4,"power_mode":"default",'
            '"site_id":"b069b358-4c97-5319-1f8c-7c5ca64d6ab1","url":"string","u'
            'uid":"b069b358-4c97-5319-1f8c-7c5ca64d6ab1","wayfinding_nodename":'
            '"string","x":0,"y":0}')
        received_body = APIHelper.json_deserialize(self.response_catcher.response.text)
        assert ComparisonHelper.match_body(expected_body, received_body)

    # Update Site Virtual Beacon
    def test_update_site_v_beacon(self):
        # Parameters for the API call
        site_id = '000000ab-00ab-00ab-00ab-0000000000ab'
        vbeacon_id = '000000ab-00ab-00ab-00ab-0000000000ab'
        body = APIHelper.json_deserialize('{"major":0,"map_id":"b069b358-4c97-5319-1f8c-7c5ca64d6ab1","messag'
            'e":"string","minor":0,"name":"string","power":4,"power_mode":"defa'
            'ult","url":"string","uuid":"6f4bf402-45f9-2a56-6c8b-7f83d3bc98e9",'
            '"wayfinding_nodename":"string","x":0,"y":0}', Vbeacon.from_dictionary)

        # Perform the API call through the SDK function
        result = self.controller.update_site_v_beacon(site_id, vbeacon_id, body)

        # Test response code
        assert self.response_catcher.response.status_code == 200

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = 'application/json'

        assert ComparisonHelper.match_headers(expected_headers, self.response_catcher.response.headers)

        
        # Test whether the captured response is as we expected
        assert result is not None
        expected_body = APIHelper.json_deserialize('{"created_time":0,"id":"b069b358-4c97-5319-1f8c-7c5ca64d6ab1","maj'
            'or":0,"map_id":"b069b358-4c97-5319-1f8c-7c5ca64d6ab1","message":"s'
            'tring","minor":0,"modified_time":0,"name":"string","org_id":"b069b'
            '358-4c97-5319-1f8c-7c5ca64d6ab1","power":4,"power_mode":"default",'
            '"site_id":"b069b358-4c97-5319-1f8c-7c5ca64d6ab1","url":"string","u'
            'uid":"b069b358-4c97-5319-1f8c-7c5ca64d6ab1","wayfinding_nodename":'
            '"string","x":0,"y":0}')
        received_body = APIHelper.json_deserialize(self.response_catcher.response.text)
        assert ComparisonHelper.match_body(expected_body, received_body)

