# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

import json
import dateutil.parser

from tests.controllers.controller_test_base import ControllerTestBase
from apimatic_core.utilities.comparison_helper import ComparisonHelper
from mistapi.api_helper import APIHelper
from mistapi.models.admin import Admin


class MspsAdminsControllerTests(ControllerTestBase):

    @classmethod
    def setUpClass(cls):
        super(MspsAdminsControllerTests, cls).setUpClass()
        cls.controller = cls.client.msps_admins
        cls.response_catcher = cls.controller.http_call_back

    # Get List of MSP Admins
    def test_list_msp_admins(self):
        # Parameters for the API call
        msp_id = '000000ab-00ab-00ab-00ab-0000000000ab'

        # Perform the API call through the SDK function
        result = self.controller.list_msp_admins(msp_id)

        # Test response code
        assert self.response_catcher.response.status_code == 200

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = 'application/json'

        assert ComparisonHelper.match_headers(expected_headers, self.response_catcher.response.headers)

        
        # Test whether the captured response is as we expected
        assert result is not None
        expected_body = APIHelper.json_deserialize('[{"admin_id":"456b7016-a916-a4b1-78dd-72b947c152b7","email":"jsmit'
            'h@mycorp.org","first_name":"Joe","last_name":"Smith","privileges":'
            '[{"role":"admin","scope":"msp"},{"org_id":"b069b358-4c97-5319-1f8c'
            '-7c5ca64d6ab1","role":"admin","scope":"org"},{"orggroup_id":"507f1'
            'bab-13ba-73e2-f291-2bcb8d1362b0","role":"read","scope":"orggroup"}'
            ']}]')
        received_body = APIHelper.json_deserialize(self.response_catcher.response.text)
        assert ComparisonHelper.match_body(expected_body, received_body)

    # This removes all privileges this admin has against the MSP. This goes deep all the way to the sites
    def test_revoke_msp_admin(self):
        # Parameters for the API call
        msp_id = '000000ab-00ab-00ab-00ab-0000000000ab'
        admin_id = '000000ab-00ab-00ab-00ab-0000000000ab'

        # Perform the API call through the SDK function
        result = self.controller.revoke_msp_admin(msp_id, admin_id)

        # Test response code
        assert self.response_catcher.response.status_code == 200

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = 'application/json'

        assert ComparisonHelper.match_headers(expected_headers, self.response_catcher.response.headers)


    # Get MSP Admins
    def test_get_msp_admin(self):
        # Parameters for the API call
        msp_id = '000000ab-00ab-00ab-00ab-0000000000ab'
        admin_id = '000000ab-00ab-00ab-00ab-0000000000ab'

        # Perform the API call through the SDK function
        result = self.controller.get_msp_admin(msp_id, admin_id)

        # Test response code
        assert self.response_catcher.response.status_code == 200

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = 'application/json'

        assert ComparisonHelper.match_headers(expected_headers, self.response_catcher.response.headers)

        
        # Test whether the captured response is as we expected
        assert result is not None
        expected_body = APIHelper.json_deserialize('{"admin_id":"b069b358-4c97-5319-1f8c-7c5ca64d6ab1","email":"user@e'
            'xample.com","first_name":"string","last_name":"string","privileges'
            '":[{"msp_id":"b069b358-4c97-5319-1f8c-7c5ca64d6ab1","msp_name":"st'
            'ring","name":"string","org_id":"b069b358-4c97-5319-1f8c-7c5ca64d6a'
            'b1","org_name":"string","orggroup_ids":["b069b358-4c97-5319-1f8c-7'
            'c5ca64d6ab1"],"role":"admin","scope":"org","site_id":"b069b358-4c9'
            '7-5319-1f8c-7c5ca64d6ab1","sitegroup_ids":["6f4bf402-45f9-2a56-6c8'
            'b-7f83d3bc98e9"]}]}')
        received_body = APIHelper.json_deserialize(self.response_catcher.response.text)
        assert ComparisonHelper.match_body(expected_body, received_body)

    # Update MSP Admin
    def test_update_msp_admin(self):
        # Parameters for the API call
        msp_id = '000000ab-00ab-00ab-00ab-0000000000ab'
        admin_id = '000000ab-00ab-00ab-00ab-0000000000ab'
        body = APIHelper.json_deserialize('{"admin_id":"919c4da0-421a-479a-918d-df80e426d3bf","email":"user@e'
            'xample.com","enable_two_factor":true,"first_name":"string","last_n'
            'ame":"string","oauth_google":true,"privileges":[{"for_site":true,"'
            'msp_id":"b069b358-4c97-5319-1f8c-7c5ca64d6ab1","msp_name":"string"'
            ',"name":"string","org_id":"b069b358-4c97-5319-1f8c-7c5ca64d6ab1","'
            'org_name":"string","orggroup_ids":["b069b358-4c97-5319-1f8c-7c5ca6'
            '4d6ab1"],"role":"admin","scope":"org","site_id":"b069b358-4c97-531'
            '9-1f8c-7c5ca64d6ab1","sitegroup_ids":["b069b358-4c97-5319-1f8c-7c5'
            'ca64d6ab1"]}],"session_expiry":0,"tags":["string"],"two_factor_ver'
            'ified":true}', Admin.from_dictionary)

        # Perform the API call through the SDK function
        result = self.controller.update_msp_admin(msp_id, admin_id, body)

        # Test response code
        assert self.response_catcher.response.status_code == 200

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = 'application/json'

        assert ComparisonHelper.match_headers(expected_headers, self.response_catcher.response.headers)

        
        # Test whether the captured response is as we expected
        assert result is not None
        expected_body = APIHelper.json_deserialize('{"admin_id":"b069b358-4c97-5319-1f8c-7c5ca64d6ab1","email":"user@e'
            'xample.com","first_name":"string","last_name":"string","privileges'
            '":[{"msp_id":"b069b358-4c97-5319-1f8c-7c5ca64d6ab1","msp_name":"st'
            'ring","name":"string","org_id":"b069b358-4c97-5319-1f8c-7c5ca64d6a'
            'b1","org_name":"string","orggroup_ids":["b069b358-4c97-5319-1f8c-7'
            'c5ca64d6ab1"],"role":"admin","scope":"org","site_id":"b069b358-4c9'
            '7-5319-1f8c-7c5ca64d6ab1","sitegroup_ids":["6f4bf402-45f9-2a56-6c8'
            'b-7f83d3bc98e9"]}]}')
        received_body = APIHelper.json_deserialize(self.response_catcher.response.text)
        assert ComparisonHelper.match_body(expected_body, received_body)

