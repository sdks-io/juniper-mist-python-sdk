# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

import json
import dateutil.parser

from tests.controllers.controller_test_base import ControllerTestBase
from apimatic_core.utilities.comparison_helper import ComparisonHelper
from mistapi.api_helper import APIHelper
from mistapi.models.wlan import Wlan
from mistapi.models.wlan_portal_template import WlanPortalTemplate
from mistapi.models.api_v_1_utils_test_twilio_request import ApiV1UtilsTestTwilioRequest


class SitesWlansControllerTests(ControllerTestBase):

    @classmethod
    def setUpClass(cls):
        super(SitesWlansControllerTests, cls).setUpClass()
        cls.controller = cls.client.sites_wlans
        cls.response_catcher = cls.controller.http_call_back

    # Get List of Site WLANs
    def test_list_site_wlans(self):
        # Parameters for the API call
        site_id = '000000ab-00ab-00ab-00ab-0000000000ab'

        # Perform the API call through the SDK function
        result = self.controller.list_site_wlans(site_id)

        # Test response code
        assert self.response_catcher.response.status_code == 200

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = 'application/json'

        assert ComparisonHelper.match_headers(expected_headers, self.response_catcher.response.headers)

        
        # Test whether the captured response is as we expected
        assert result is not None
        expected_body = APIHelper.json_deserialize('[{"acct_interim_interval":0,"acct_servers":[{"host":"string","port'
            '":0,"secret":"string"}],"airwatch":{"api_key":"string","console_ur'
            'l":"string","enabled":true,"password":"string","username":"string"'
            '},"allow_ipv6_ndp":true,"allow_mdns":true,"ap_ids":["b069b358-4c97'
            '-5319-1f8c-7c5ca64d6ab1"],"app_limit":{"apps":{},"enabled":true,"w'
            'xtag_ids":{}},"app_qos":{"apps":{"skype-business-video":{"dscp":0,'
            '"dst_subnet":"string","src_subnet":"string"},"skype-business-voice'
            '":{"dscp":0}},"enabled":true,"others":[{"dscp":0,"dst_subnet":"str'
            'ing","port_ranges":"string","protocol":"string","src_subnet":"stri'
            'ng"}]},"apply_to":"site","arp_filter":true,"auth":{"eap_reauth":tr'
            'ue,"enable_mac_auth":true,"key_idx":1,"keys":["string"],"multi_psk'
            '_only":true,"owe":"string","pairwise":["string"],"private_wlan":tr'
            'ue,"psk":"string123","type":"open","wep_as_secondary_auth":true},"'
            'auth_server_selection":"ordered","auth_servers":[{"host":"string",'
            '"port":0,"secret":"string"}],"auth_servers_nas_id":"string","auth_'
            'servers_nas_ip":"string","auth_servers_retries":0,"auth_servers_ti'
            'meout":0,"band":"string","band_steer":true,"band_steer_force_band5'
            '":true,"block_blacklist_clients":true,"bonjour":{"additional_vlan_'
            'ids":[0],"enabled":true,"services":{"property1":{"disable_local":t'
            'rue,"radius_groups":["string"],"scope":"string"},"property2":{"dis'
            'able_local":true,"radius_groups":["string"],"scope":"string"}}},"c'
            'isco_cwa":{"allowed_hostnames":["string"],"allowed_subnets":["stri'
            'ng"],"enabled":true},"client_limit_down":0,"client_limit_down_enab'
            'led":true,"client_limit_up":0,"client_limit_up_enabled":true,"coa_'
            'servers":[{"disable_event_timestamp_check":true,"enabled":true,"ip'
            '":"192.168.1.1","port":"3799","secret":"string"}],"created_time":0'
            ',"disable_11ax":true,"disable_uapsd":true,"disable_wmm":true,"dns_'
            'server_rewrite":{"enabled":true,"radius_groups":{}},"dtim":0,"dyna'
            'mic_psk":{"default_vlan_id":1,"enabled":true,"source":"radius","vl'
            'an_ids":[1]},"dynamic_vlan":{"default_vlan_id":1,"enabled":true,"l'
            'ocal_vlan_ids":[1],"type":"standard","vlans":{}},"enable_wireless_'
            'bridging":true,"enabled":true,"hide_ssid":true,"hostname_ie":true,'
            '"hotspot20":{"enabled":true,"operators":["string"],"venue_name":"s'
            'tring"},"id":"b069b358-4c97-5319-1f8c-7c5ca64d6ab1","interface":"a'
            'll","isolation":true,"legacy_overds":true,"limit_bcast":true,"limi'
            't_probe_response":true,"max_idletime":60,"modified_time":0,"msp_id'
            '":"b069b358-4c97-5319-1f8c-7c5ca64d6ab1","mxtunnel_id":"b069b358-4'
            'c97-5319-1f8c-7c5ca64d6ab1","no_static_dns":true,"no_static_ip":tr'
            'ue,"org_id":"b069b358-4c97-5319-1f8c-7c5ca64d6ab1","portal":{"amaz'
            'on_client_id":"string","amazon_client_secret":"string","amazon_ema'
            'il_domains":["string"],"amazon_enabled":true,"auth":"none","azure_'
            'client_id":"string","azure_client_secret":"string","azure_enabled"'
            ':true,"azure_tenant_id":"string","bypass_when_cloud_down":true,"em'
            'ail_enabled":true,"enabled":true,"expire":0,"external_portal_url":'
            '"string","facebook_client_id":"string","facebook_client_secret":"s'
            'tring","facebook_email_domains":["string"],"facebook_enabled":true'
            ',"forward":true,"forward_url":"string","google_email_domains":["st'
            'ring"],"google_enabled":true,"microsoft_client_id":"string","micro'
            'soft_client_secret":"string","microsoft_email_domains":["string"],'
            '"microsoft_enabled":true,"passphrase_enabled":true,"password":"str'
            'ing","portal_allowed_hostnames":"string","portal_allowed_subnets":'
            '"string","portal_api_secret":"string","portal_denied_hostnames":"s'
            'tring","portal_image":"string","portal_sso_url":"string","privacy"'
            ':true,"sms_enabled":true,"sms_provider":"manual","sponsor_email_do'
            'mains":["string"],"sponsor_enabled":true,"sponsor_link_validity_du'
            'ration":"60","sponsors":{"property1":"string","property2":"string"'
            '},"sso_default_role":"string","sso_idp_cert":"string","sso_idp_sig'
            'n_algo":"string","sso_idp_sso_url":"string","sso_issuer":"string",'
            '"thumbnail":"string","twilio_auth_token":"string","twilio_phone_nu'
            'mber":"string","twilio_sid":"string"},"portal_allowed_hostnames":['
            '"string"],"portal_allowed_subnets":["string"],"portal_api_secret":'
            '"string","portal_denied_hostnames":["string"],"portal_image":"http'
            '://example.com","portal_sso_url":"string","portal_template_url":"s'
            'tring","qos":{"class":"best_effort","overwrite":true},"radsec":{"e'
            'nabled":true,"server_name":"string","servers":[{"host":"string","p'
            'ort":0}],"use_mxedge":true},"rateset":{"24":{"ht":"string","legacy'
            '":["string"],"min_rssi":0,"template":"string","vht":"string"},"5":'
            '{"ht":"string","legacy":["string"],"min_rssi":0,"template":"string'
            '","vht":"string"}},"roam_mode":"11r","schedule":{"enabled":true,"h'
            'ours":{}},"site_id":"b069b358-4c97-5319-1f8c-7c5ca64d6ab1","sle_ex'
            'cluded":true,"ssid":"string","thumbnail":"http://example.com","use'
            '_eapol_v1":true,"vlan_enabled":true,"vlan_id":1,"vlan_ids":[1],"vl'
            'an_pooling":true,"wlan_limit_down":0,"wlan_limit_down_enabled":tru'
            'e,"wlan_limit_up":0,"wlan_limit_up_enabled":true,"wxtag_ids":["b06'
            '9b358-4c97-5319-1f8c-7c5ca64d6ab1"],"wxtunnel_id":"b069b358-4c97-5'
            '319-1f8c-7c5ca64d6ab1","wxtunnel_remote_id":"string"}]')
        received_body = APIHelper.json_deserialize(self.response_catcher.response.text)
        assert ComparisonHelper.match_body(expected_body, received_body)

    # Create Site WLAN
    def test_create_site_wlan(self):
        # Parameters for the API call
        site_id = '000000ab-00ab-00ab-00ab-0000000000ab'
        body = APIHelper.json_deserialize('{"acct_interim_interval":0,"acct_servers":[{"host":"string","port"'
            ':0,"secret":"string"}],"airwatch":{"api_key":"string","console_url'
            '":"string","enabled":true,"password":"string","username":"string"}'
            ',"allow_ipv6_ndp":true,"allow_mdns":true,"ap_ids":["b069b358-4c97-'
            '5319-1f8c-7c5ca64d6ab1"],"app_limit":{"apps":{},"enabled":true,"wx'
            'tag_ids":{}},"app_qos":{"apps":{"skype-business-video":{"dscp":0,"'
            'dst_subnet":"string","src_subnet":"string"},"skype-business-voice"'
            ':{"dscp":0}},"enabled":true,"others":[{"dscp":0,"dst_subnet":"stri'
            'ng","port_ranges":"string","protocol":"string","src_subnet":"strin'
            'g"}]},"apply_to":"site","arp_filter":true,"auth":{"eap_reauth":tru'
            'e,"enable_mac_auth":true,"key_idx":1,"keys":["string"],"multi_psk_'
            'only":true,"owe":"string","pairwise":["string"],"private_wlan":tru'
            'e,"psk":"string123","type":"open","wep_as_secondary_auth":true},"a'
            'uth_server_selection":"ordered","auth_servers":[{"host":"string","'
            'port":0,"secret":"string"}],"auth_servers_nas_id":"string","auth_s'
            'ervers_nas_ip":"string","auth_servers_retries":0,"auth_servers_tim'
            'eout":0,"band":"string","band_steer":true,"band_steer_force_band5"'
            ':true,"block_blacklist_clients":true,"bonjour":{"additional_vlan_i'
            'ds":[0],"enabled":true,"services":{"service_name2":{"disable_local'
            '":true,"radius_groups":["string"],"scope":"string"}}},"cisco_cwa":'
            '{"allowed_hostnames":["string"],"allowed_subnets":["string"],"enab'
            'led":true},"client_limit_down":0,"client_limit_down_enabled":true,'
            '"client_limit_up":0,"client_limit_up_enabled":true,"coa_servers":['
            '{"disable_event_timestamp_check":true,"enabled":true,"ip":"192.168'
            '.1.1","port":"3799","secret":"string"}],"disable_11ax":true,"disab'
            'le_uapsd":true,"disable_wmm":true,"dns_server_rewrite":{"enabled":'
            'true,"radius_groups":{}},"dtim":0,"dynamic_psk":{"enabled":true},"'
            'dynamic_vlan":{"default_vlan_id":1,"enabled":true,"local_vlan_ids"'
            ':[1],"type":"standard","vlans":{}},"enable_wireless_bridging":true'
            ',"enabled":true,"hide_ssid":true,"hostname_ie":true,"hotspot20":{"'
            'enabled":true,"operators":["string"],"venue_name":"string"},"inter'
            'face":"all","isolation":true,"legacy_overds":true,"limit_bcast":tr'
            'ue,"limit_probe_response":true,"max_idletime":60,"mxtunnel_id":"b0'
            '69b358-4c97-5319-1f8c-7c5ca64d6ab1","no_static_dns":true,"no_stati'
            'c_ip":true,"portal":{"amazon_client_id":"string","amazon_client_se'
            'cret":"string","amazon_email_domains":["string"],"amazon_enabled":'
            'true,"auth":"none","azure_client_id":"string","azure_client_secret'
            '":"string","azure_enabled":true,"azure_tenant_id":"string","bypass'
            '_when_cloud_down":true,"email_enabled":true,"enabled":true,"expire'
            '":0,"external_portal_url":"string","facebook_client_id":"string","'
            'facebook_client_secret":"string","facebook_email_domains":["string'
            '"],"facebook_enabled":true,"forward":true,"forward_url":"string","'
            'google_email_domains":["string"],"google_enabled":true,"microsoft_'
            'client_id":"string","microsoft_client_secret":"string","microsoft_'
            'email_domains":["string"],"microsoft_enabled":true,"passphrase_ena'
            'bled":true,"password":"string","portal_allowed_hostnames":"string"'
            ',"portal_allowed_subnets":"string","portal_api_secret":"string","p'
            'ortal_denied_hostnames":"string","portal_image":"string","portal_s'
            'so_url":"string","privacy":true,"sms_enabled":true,"sms_provider":'
            '"manual","sponsor_email_domains":["string"],"sponsor_enabled":true'
            ',"sponsor_link_validity_duration":"60","sso_default_role":"string"'
            ',"sso_idp_cert":"string","sso_idp_sign_algo":"string","sso_idp_sso'
            '_url":"string","sso_issuer":"string","thumbnail":"string","twilio_'
            'auth_token":"string","twilio_phone_number":"string","twilio_sid":"'
            'string"},"portal_allowed_hostnames":["string"],"portal_allowed_sub'
            'nets":["string"],"portal_api_secret":"string","portal_denied_hostn'
            'ames":["string"],"portal_image":"http://example.com","portal_sso_u'
            'rl":"string","portal_template_url":"string","qos":{"class":"best_e'
            'ffort","overwrite":true},"radsec":{"enabled":true,"server_name":"s'
            'tring","servers":[{"host":"string","port":0}]},"rateset":{"24":{"h'
            't":"string","legacy":["string"],"min_rssi":0,"template":"string","'
            'vht":"string"},"5":{"ht":"string","legacy":["string"],"min_rssi":0'
            ',"template":"string","vht":"string"}},"roam_mode":"11r","schedule"'
            ':{"enabled":true,"hours":{}},"sle_excluded":true,"ssid":"string","'
            'thumbnail":"http://example.com","use_eapol_v1":true,"vlan_enabled"'
            ':true,"vlan_id":1,"vlan_ids":[1],"vlan_pooling":true,"wlan_limit_d'
            'own":0,"wlan_limit_down_enabled":true,"wlan_limit_up":0,"wlan_limi'
            't_up_enabled":true,"wxtag_ids":["b069b358-4c97-5319-1f8c-7c5ca64d6'
            'ab1"],"wxtunnel_id":"6f4bf402-45f9-2a56-6c8b-7f83d3bc98e9","wxtunn'
            'el_remote_id":"string"}', Wlan.from_dictionary)

        # Perform the API call through the SDK function
        result = self.controller.create_site_wlan(site_id, body)

        # Test response code
        assert self.response_catcher.response.status_code == 200

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = 'application/json'

        assert ComparisonHelper.match_headers(expected_headers, self.response_catcher.response.headers)

        
        # Test whether the captured response is as we expected
        assert result is not None
        expected_body = APIHelper.json_deserialize('{"acct_interim_interval":0,"acct_servers":[{"host":"string","port"'
            ':1813,"secret":"string"}],"airwatch":{"api_key":"string","console_'
            'url":"string","enabled":true,"password":"string","username":"strin'
            'g"},"allow_ipv6_ndp":true,"allow_mdns":false,"ap_ids":["097f6eca-6'
            '276-4993-bfeb-53cbbbba6f08"],"app_limit":{"apps":{},"enabled":true'
            ',"wxtag_ids":{}},"app_qos":{"apps":{"skype-business-video":{"dscp"'
            ':0,"dst_subnet":"string","src_subnet":"string"},"skype-business-vo'
            'ice":{"dscp":0}},"enabled":true,"others":[{"dscp":0,"dst_subnet":"'
            'string","port_ranges":"string","protocol":"string","src_subnet":"s'
            'tring"}]},"apply_to":"site","arp_filter":false,"auth":{"eap_reauth'
            '":false,"enable_mac_auth":false,"key_idx":1,"keys":["string"],"mul'
            'ti_psk_only":false,"owe":"string","pairwise":["wpa2-ccmp"],"privat'
            'e_wlan":true,"psk":"stringst","type":"open","wep_as_secondary_auth'
            '":true},"auth_server_selection":"ordered","auth_servers":[{"host":'
            '"string","port":1812,"secret":"string"}],"auth_servers_nas_id":"st'
            'ring","auth_servers_nas_ip":"string","auth_servers_retries":3,"aut'
            'h_servers_timeout":5,"band":"string","band_steer":false,"band_stee'
            'r_force_band5":false,"block_blacklist_clients":true,"bonjour":{"ad'
            'ditional_vlan_ids":[0],"enabled":false,"services":{"property1":{"d'
            'isable_local":false,"radius_groups":["string"],"scope":"string"},"'
            'property2":{"disable_local":false,"radius_groups":["string"],"scop'
            'e":"string"}}},"cisco_cwa":{"allowed_hostnames":["string"],"allowe'
            'd_subnets":["string"],"enabled":true},"client_limit_down":0,"clien'
            't_limit_down_enabled":false,"client_limit_up":0,"client_limit_up_e'
            'nabled":false,"coa_servers":[{"disable_event_timestamp_check":true'
            ',"enabled":true,"ip":"192.168.0.1","port":"string","secret":"strin'
            'g"}],"created_time":0,"disable_11ax":false,"disable_ht_vht_rates":'
            'false,"disable_uapsd":false,"disable_wmm":false,"dns_server_rewrit'
            'e":{"enabled":true,"radius_groups":{}},"dtim":2,"dynamic_psk":{"de'
            'fault_psk":"stringst","default_vlan_id":0,"enabled":true,"source":'
            '"radius","vlan_ids":[1]},"dynamic_vlan":{"default_vlan_id":999,"en'
            'abled":false,"local_vlan_ids":[1],"type":"standard","vlans":{"prop'
            'erty1":"string","property2":"string"}},"enable_wireless_bridging":'
            'true,"enabled":true,"for_site":true,"hide_ssid":false,"hostname_ie'
            '":false,"hotspot20":{"enabled":true,"operators":["string"],"venue_'
            'name":"string"},"id":"197f6eca-6276-4993-bfeb-53cbbbba6f08","inter'
            'face":"all","isolation":false,"legacy_overds":true,"limit_bcast":f'
            'alse,"limit_probe_response":true,"max_idletime":1800,"modified_tim'
            'e":0,"msp_id":"c0cf23fc-d82f-4219-988c-82fb61d8c875","mxtunnel":{}'
            ',"mxtunnel_id":"6741baab-cbd6-45bd-9e5b-93e8eede3c80","mxtunnel_na'
            'me":["default"],"no_static_dns":false,"no_static_ip":false,"org_id'
            '":"a40f5d1f-d889-42e9-94ea-b9b33585fc6b","portal":{"amazon_client_'
            'id":"string","amazon_client_secret":"string","amazon_email_domains'
            '":["string"],"amazon_enabled":true,"auth":"none","azure_client_id"'
            ':"string","azure_client_secret":"string","azure_enabled":true,"azu'
            're_tenant_id":"string","broadnet_password":"string","broadnet_sid"'
            ':"string","broadnet_user_id":"string","bypass_when_cloud_down":fal'
            'se,"clickatell_api_key":"string","email_enabled":true,"enabled":fa'
            'lse,"expire":1440,"external_portal_url":"string","facebook_client_'
            'id":"string","facebook_client_secret":"string","facebook_email_dom'
            'ains":["string"],"facebook_enabled":true,"forward":false,"forward_'
            'url":"string","google_client_id":"string","google_client_secret":"'
            'string","google_email_domains":["string"],"google_enabled":true,"g'
            'upshup_password":"string","gupshup_userid":"string","microsoft_cli'
            'ent_id":"string","microsoft_client_secret":"string","microsoft_ema'
            'il_domains":["string"],"microsoft_enabled":true,"passphrase_enable'
            'd":true,"password":"string","portal_allowed_hostnames":"string","p'
            'ortal_allowed_subnets":"string","portal_api_secret":"string","port'
            'al_denied_hostnames":"string","portal_image":"string","portal_sso_'
            'url":"string","predefined_sponsors_enabled":true,"privacy":true,"p'
            'uzzel_password":"string","puzzel_service_id":"string","puzzel_user'
            'name":"string","smsMessageFormat":"string","sms_enabled":true,"sms'
            '_provider":"manual","sponsor_email_domains":["string"],"sponsor_en'
            'abled":true,"sponsor_link_validity_duration":"string","sponsor_not'
            'ify_all":false,"sponsors":{"property1":"string","property2":"strin'
            'g"},"sso_default_role":"string","sso_forced_role":"string","sso_id'
            'p_cert":"string","sso_idp_sign_algo":"string","sso_idp_sso_url":"s'
            'tring","sso_issuer":"string","sso_nameid_format":"email","thumbnai'
            'l":"string","twilio_auth_token":"string","twilio_phone_number":"st'
            'ring","twilio_sid":"string"},"portal_allowed_hostnames":["string"]'
            ',"portal_allowed_subnets":["string"],"portal_api_secret":"string",'
            '"portal_denied_hostnames":["string"],"portal_image":"http://exampl'
            'e.com","portal_sso_url":"string","portal_template_url":"string","q'
            'os":{"class":"best_effort","overwrite":false},"radsec":{"enabled":'
            'true,"idle_timeout":0,"server_name":"string","servers":[{"host":"s'
            'tring","port":0}],"use_mxedge":true},"rateset":{"24":{"ht":"string'
            '","legacy":["string"],"min_rssi":0,"template":"string","vht":"stri'
            'ng"},"5":{"ht":"string","legacy":["string"],"min_rssi":0,"template'
            '":"string","vht":"string"}},"roam_mode":"none","schedule":{"enable'
            'd":false,"hours":{}},"site_id":"72771e6a-6f5e-4de4-a5b9-1266c41978'
            '11","sle_excluded":false,"ssid":"string","template_id":"c6d67e98-8'
            '3ea-49f0-8812-e4abae2b68bc","thumbnail":"http://example.com","use_'
            'eapol_v1":false,"vlan_enabled":false,"vlan_id":1,"vlan_ids":[1],"v'
            'lan_pooling":false,"wlan_limit_down":0,"wlan_limit_down_enabled":f'
            'alse,"wlan_limit_up":0,"wlan_limit_up_enabled":false,"wxtag_ids":['
            '"297f6eca-6276-4993-bfeb-53cbbbba6f08"],"wxtunnel_id":"string","wx'
            'tunnel_remote_id":"string"}')
        received_body = APIHelper.json_deserialize(self.response_catcher.response.text)
        assert ComparisonHelper.match_body(expected_body, received_body)

    # Get Wlans Derived
    def test_list_site_wlan_derived(self):
        # Parameters for the API call
        site_id = '000000ab-00ab-00ab-00ab-0000000000ab'
        resolve = False

        # Perform the API call through the SDK function
        result = self.controller.list_site_wlan_derived(site_id, resolve)

        # Test response code
        assert self.response_catcher.response.status_code == 200

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = 'application/json'

        assert ComparisonHelper.match_headers(expected_headers, self.response_catcher.response.headers)

        
        # Test whether the captured response is as we expected
        assert result is not None
        expected_body = APIHelper.json_deserialize('[{"acct_interim_interval":0,"acct_servers":[{"host":"string","port'
            '":0,"secret":"string"}],"airwatch":{"api_key":"string","console_ur'
            'l":"string","enabled":true,"password":"string","username":"string"'
            '},"allow_ipv6_ndp":true,"allow_mdns":true,"ap_ids":["b069b358-4c97'
            '-5319-1f8c-7c5ca64d6ab1"],"app_limit":{"apps":{},"enabled":true,"w'
            'xtag_ids":{}},"app_qos":{"apps":{"skype-business-video":{"dscp":0,'
            '"dst_subnet":"string","src_subnet":"string"},"skype-business-voice'
            '":{"dscp":0}},"enabled":true,"others":[{"dscp":0,"dst_subnet":"str'
            'ing","port_ranges":"string","protocol":"string","src_subnet":"stri'
            'ng"}]},"apply_to":"site","arp_filter":true,"auth":{"eap_reauth":tr'
            'ue,"enable_mac_auth":true,"key_idx":1,"keys":["string"],"multi_psk'
            '_only":true,"owe":"string","pairwise":["string"],"private_wlan":tr'
            'ue,"psk":"string123","type":"open","wep_as_secondary_auth":true},"'
            'auth_server_selection":"ordered","auth_servers":[{"host":"string",'
            '"port":0,"secret":"string"}],"auth_servers_nas_id":"string","auth_'
            'servers_nas_ip":"string","auth_servers_retries":0,"auth_servers_ti'
            'meout":0,"band":"string","band_steer":true,"band_steer_force_band5'
            '":true,"block_blacklist_clients":true,"bonjour":{"additional_vlan_'
            'ids":[0],"enabled":true,"services":{"property1":{"disable_local":t'
            'rue,"radius_groups":["string"],"scope":"string"},"property2":{"dis'
            'able_local":true,"radius_groups":["string"],"scope":"string"}}},"c'
            'isco_cwa":{"allowed_hostnames":["string"],"allowed_subnets":["stri'
            'ng"],"enabled":true},"client_limit_down":0,"client_limit_down_enab'
            'led":true,"client_limit_up":0,"client_limit_up_enabled":true,"coa_'
            'servers":[{"disable_event_timestamp_check":true,"enabled":true,"ip'
            '":"192.168.1.1","port":"3799","secret":"string"}],"created_time":0'
            ',"disable_11ax":true,"disable_uapsd":true,"disable_wmm":true,"dns_'
            'server_rewrite":{"enabled":true,"radius_groups":{}},"dtim":0,"dyna'
            'mic_psk":{"default_vlan_id":1,"enabled":true,"source":"radius","vl'
            'an_ids":[1]},"dynamic_vlan":{"default_vlan_id":1,"enabled":true,"l'
            'ocal_vlan_ids":[1],"type":"standard","vlans":{}},"enable_wireless_'
            'bridging":true,"enabled":true,"hide_ssid":true,"hostname_ie":true,'
            '"hotspot20":{"enabled":true,"operators":["string"],"venue_name":"s'
            'tring"},"id":"b069b358-4c97-5319-1f8c-7c5ca64d6ab1","interface":"a'
            'll","isolation":true,"legacy_overds":true,"limit_bcast":true,"limi'
            't_probe_response":true,"max_idletime":60,"modified_time":0,"msp_id'
            '":"b069b358-4c97-5319-1f8c-7c5ca64d6ab1","mxtunnel_id":"b069b358-4'
            'c97-5319-1f8c-7c5ca64d6ab1","no_static_dns":true,"no_static_ip":tr'
            'ue,"org_id":"b069b358-4c97-5319-1f8c-7c5ca64d6ab1","portal":{"amaz'
            'on_client_id":"string","amazon_client_secret":"string","amazon_ema'
            'il_domains":["string"],"amazon_enabled":true,"auth":"none","azure_'
            'client_id":"string","azure_client_secret":"string","azure_enabled"'
            ':true,"azure_tenant_id":"string","bypass_when_cloud_down":true,"em'
            'ail_enabled":true,"enabled":true,"expire":0,"external_portal_url":'
            '"string","facebook_client_id":"string","facebook_client_secret":"s'
            'tring","facebook_email_domains":["string"],"facebook_enabled":true'
            ',"forward":true,"forward_url":"string","google_email_domains":["st'
            'ring"],"google_enabled":true,"microsoft_client_id":"string","micro'
            'soft_client_secret":"string","microsoft_email_domains":["string"],'
            '"microsoft_enabled":true,"passphrase_enabled":true,"password":"str'
            'ing","portal_allowed_hostnames":"string","portal_allowed_subnets":'
            '"string","portal_api_secret":"string","portal_denied_hostnames":"s'
            'tring","portal_image":"string","portal_sso_url":"string","privacy"'
            ':true,"sms_enabled":true,"sms_provider":"manual","sponsor_email_do'
            'mains":["string"],"sponsor_enabled":true,"sponsor_link_validity_du'
            'ration":"60","sponsors":{"property1":"string","property2":"string"'
            '},"sso_default_role":"string","sso_idp_cert":"string","sso_idp_sig'
            'n_algo":"string","sso_idp_sso_url":"string","sso_issuer":"string",'
            '"thumbnail":"string","twilio_auth_token":"string","twilio_phone_nu'
            'mber":"string","twilio_sid":"string"},"portal_allowed_hostnames":['
            '"string"],"portal_allowed_subnets":["string"],"portal_api_secret":'
            '"string","portal_denied_hostnames":["string"],"portal_image":"http'
            '://example.com","portal_sso_url":"string","portal_template_url":"s'
            'tring","qos":{"class":"best_effort","overwrite":true},"radsec":{"e'
            'nabled":true,"server_name":"string","servers":[{"host":"string","p'
            'ort":0}],"use_mxedge":true},"rateset":{"24":{"ht":"string","legacy'
            '":["string"],"min_rssi":0,"template":"string","vht":"string"},"5":'
            '{"ht":"string","legacy":["string"],"min_rssi":0,"template":"string'
            '","vht":"string"}},"roam_mode":"11r","schedule":{"enabled":true,"h'
            'ours":{}},"site_id":"b069b358-4c97-5319-1f8c-7c5ca64d6ab1","sle_ex'
            'cluded":true,"ssid":"string","thumbnail":"http://example.com","use'
            '_eapol_v1":true,"vlan_enabled":true,"vlan_id":1,"vlan_ids":[1],"vl'
            'an_pooling":true,"wlan_limit_down":0,"wlan_limit_down_enabled":tru'
            'e,"wlan_limit_up":0,"wlan_limit_up_enabled":true,"wxtag_ids":["b06'
            '9b358-4c97-5319-1f8c-7c5ca64d6ab1"],"wxtunnel_id":"b069b358-4c97-5'
            '319-1f8c-7c5ca64d6ab1","wxtunnel_remote_id":"string"}]')
        received_body = APIHelper.json_deserialize(self.response_catcher.response.text)
        assert ComparisonHelper.match_body(expected_body, received_body)

    # Delete Site WLAN
    def test_delete_site_wlan(self):
        # Parameters for the API call
        site_id = '000000ab-00ab-00ab-00ab-0000000000ab'
        wlan_id = '000000ab-00ab-00ab-00ab-0000000000ab'

        # Perform the API call through the SDK function
        result = self.controller.delete_site_wlan(site_id, wlan_id)

        # Test response code
        assert self.response_catcher.response.status_code == 200

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = 'application/json'

        assert ComparisonHelper.match_headers(expected_headers, self.response_catcher.response.headers)


    # Get Site WLAN
    def test_get_site_wlan(self):
        # Parameters for the API call
        site_id = '000000ab-00ab-00ab-00ab-0000000000ab'
        wlan_id = '000000ab-00ab-00ab-00ab-0000000000ab'

        # Perform the API call through the SDK function
        result = self.controller.get_site_wlan(site_id, wlan_id)

        # Test response code
        assert self.response_catcher.response.status_code == 200

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = 'application/json'

        assert ComparisonHelper.match_headers(expected_headers, self.response_catcher.response.headers)

        
        # Test whether the captured response is as we expected
        assert result is not None
        expected_body = APIHelper.json_deserialize('{"acct_interim_interval":0,"acct_servers":[{"host":"string","port"'
            ':1813,"secret":"string"}],"airwatch":{"api_key":"string","console_'
            'url":"string","enabled":true,"password":"string","username":"strin'
            'g"},"allow_ipv6_ndp":true,"allow_mdns":false,"ap_ids":["097f6eca-6'
            '276-4993-bfeb-53cbbbba6f08"],"app_limit":{"apps":{},"enabled":true'
            ',"wxtag_ids":{}},"app_qos":{"apps":{"skype-business-video":{"dscp"'
            ':0,"dst_subnet":"string","src_subnet":"string"},"skype-business-vo'
            'ice":{"dscp":0}},"enabled":true,"others":[{"dscp":0,"dst_subnet":"'
            'string","port_ranges":"string","protocol":"string","src_subnet":"s'
            'tring"}]},"apply_to":"site","arp_filter":false,"auth":{"eap_reauth'
            '":false,"enable_mac_auth":false,"key_idx":1,"keys":["string"],"mul'
            'ti_psk_only":false,"owe":"string","pairwise":["wpa2-ccmp"],"privat'
            'e_wlan":true,"psk":"stringst","type":"open","wep_as_secondary_auth'
            '":true},"auth_server_selection":"ordered","auth_servers":[{"host":'
            '"string","port":1812,"secret":"string"}],"auth_servers_nas_id":"st'
            'ring","auth_servers_nas_ip":"string","auth_servers_retries":3,"aut'
            'h_servers_timeout":5,"band":"string","band_steer":false,"band_stee'
            'r_force_band5":false,"block_blacklist_clients":true,"bonjour":{"ad'
            'ditional_vlan_ids":[0],"enabled":false,"services":{"property1":{"d'
            'isable_local":false,"radius_groups":["string"],"scope":"string"},"'
            'property2":{"disable_local":false,"radius_groups":["string"],"scop'
            'e":"string"}}},"cisco_cwa":{"allowed_hostnames":["string"],"allowe'
            'd_subnets":["string"],"enabled":true},"client_limit_down":0,"clien'
            't_limit_down_enabled":false,"client_limit_up":0,"client_limit_up_e'
            'nabled":false,"coa_servers":[{"disable_event_timestamp_check":true'
            ',"enabled":true,"ip":"192.168.0.1","port":"string","secret":"strin'
            'g"}],"created_time":0,"disable_11ax":false,"disable_ht_vht_rates":'
            'false,"disable_uapsd":false,"disable_wmm":false,"dns_server_rewrit'
            'e":{"enabled":true,"radius_groups":{}},"dtim":2,"dynamic_psk":{"de'
            'fault_psk":"stringst","default_vlan_id":0,"enabled":true,"source":'
            '"radius","vlan_ids":[1]},"dynamic_vlan":{"default_vlan_id":999,"en'
            'abled":false,"local_vlan_ids":[1],"type":"standard","vlans":{"prop'
            'erty1":"string","property2":"string"}},"enable_wireless_bridging":'
            'true,"enabled":true,"for_site":true,"hide_ssid":false,"hostname_ie'
            '":false,"hotspot20":{"enabled":true,"operators":["string"],"venue_'
            'name":"string"},"id":"197f6eca-6276-4993-bfeb-53cbbbba6f08","inter'
            'face":"all","isolation":false,"legacy_overds":true,"limit_bcast":f'
            'alse,"limit_probe_response":true,"max_idletime":1800,"modified_tim'
            'e":0,"msp_id":"c0cf23fc-d82f-4219-988c-82fb61d8c875","mxtunnel":{}'
            ',"mxtunnel_id":"6741baab-cbd6-45bd-9e5b-93e8eede3c80","mxtunnel_na'
            'me":["default"],"no_static_dns":false,"no_static_ip":false,"org_id'
            '":"a40f5d1f-d889-42e9-94ea-b9b33585fc6b","portal":{"amazon_client_'
            'id":"string","amazon_client_secret":"string","amazon_email_domains'
            '":["string"],"amazon_enabled":true,"auth":"none","azure_client_id"'
            ':"string","azure_client_secret":"string","azure_enabled":true,"azu'
            're_tenant_id":"string","broadnet_password":"string","broadnet_sid"'
            ':"string","broadnet_user_id":"string","bypass_when_cloud_down":fal'
            'se,"clickatell_api_key":"string","email_enabled":true,"enabled":fa'
            'lse,"expire":1440,"external_portal_url":"string","facebook_client_'
            'id":"string","facebook_client_secret":"string","facebook_email_dom'
            'ains":["string"],"facebook_enabled":true,"forward":false,"forward_'
            'url":"string","google_client_id":"string","google_client_secret":"'
            'string","google_email_domains":["string"],"google_enabled":true,"g'
            'upshup_password":"string","gupshup_userid":"string","microsoft_cli'
            'ent_id":"string","microsoft_client_secret":"string","microsoft_ema'
            'il_domains":["string"],"microsoft_enabled":true,"passphrase_enable'
            'd":true,"password":"string","portal_allowed_hostnames":"string","p'
            'ortal_allowed_subnets":"string","portal_api_secret":"string","port'
            'al_denied_hostnames":"string","portal_image":"string","portal_sso_'
            'url":"string","predefined_sponsors_enabled":true,"privacy":true,"p'
            'uzzel_password":"string","puzzel_service_id":"string","puzzel_user'
            'name":"string","smsMessageFormat":"string","sms_enabled":true,"sms'
            '_provider":"manual","sponsor_email_domains":["string"],"sponsor_en'
            'abled":true,"sponsor_link_validity_duration":"string","sponsor_not'
            'ify_all":false,"sponsors":{"property1":"string","property2":"strin'
            'g"},"sso_default_role":"string","sso_forced_role":"string","sso_id'
            'p_cert":"string","sso_idp_sign_algo":"string","sso_idp_sso_url":"s'
            'tring","sso_issuer":"string","sso_nameid_format":"email","thumbnai'
            'l":"string","twilio_auth_token":"string","twilio_phone_number":"st'
            'ring","twilio_sid":"string"},"portal_allowed_hostnames":["string"]'
            ',"portal_allowed_subnets":["string"],"portal_api_secret":"string",'
            '"portal_denied_hostnames":["string"],"portal_image":"http://exampl'
            'e.com","portal_sso_url":"string","portal_template_url":"string","q'
            'os":{"class":"best_effort","overwrite":false},"radsec":{"enabled":'
            'true,"idle_timeout":0,"server_name":"string","servers":[{"host":"s'
            'tring","port":0}],"use_mxedge":true},"rateset":{"24":{"ht":"string'
            '","legacy":["string"],"min_rssi":0,"template":"string","vht":"stri'
            'ng"},"5":{"ht":"string","legacy":["string"],"min_rssi":0,"template'
            '":"string","vht":"string"}},"roam_mode":"none","schedule":{"enable'
            'd":false,"hours":{}},"site_id":"72771e6a-6f5e-4de4-a5b9-1266c41978'
            '11","sle_excluded":false,"ssid":"string","template_id":"c6d67e98-8'
            '3ea-49f0-8812-e4abae2b68bc","thumbnail":"http://example.com","use_'
            'eapol_v1":false,"vlan_enabled":false,"vlan_id":1,"vlan_ids":[1],"v'
            'lan_pooling":false,"wlan_limit_down":0,"wlan_limit_down_enabled":f'
            'alse,"wlan_limit_up":0,"wlan_limit_up_enabled":false,"wxtag_ids":['
            '"297f6eca-6276-4993-bfeb-53cbbbba6f08"],"wxtunnel_id":"string","wx'
            'tunnel_remote_id":"string"}')
        received_body = APIHelper.json_deserialize(self.response_catcher.response.text)
        assert ComparisonHelper.match_body(expected_body, received_body)

    # Update Site WLAN
    def test_update_site_wlan(self):
        # Parameters for the API call
        site_id = '000000ab-00ab-00ab-00ab-0000000000ab'
        wlan_id = '000000ab-00ab-00ab-00ab-0000000000ab'
        body = APIHelper.json_deserialize('{"acct_interim_interval":0,"acct_servers":[{"host":"string","port"'
            ':0,"secret":"string"}],"airwatch":{"api_key":"string","console_url'
            '":"string","enabled":true,"password":"string","username":"string"}'
            ',"allow_ipv6_ndp":true,"allow_mdns":true,"ap_ids":["b069b358-4c97-'
            '5319-1f8c-7c5ca64d6ab1"],"app_limit":{"apps":{},"enabled":true,"wx'
            'tag_ids":{}},"app_qos":{"apps":{"skype-business-video":{"dscp":0,"'
            'dst_subnet":"string","src_subnet":"string"},"skype-business-voice"'
            ':{"dscp":0}},"enabled":true,"others":[{"dscp":0,"dst_subnet":"stri'
            'ng","port_ranges":"string","protocol":"string","src_subnet":"strin'
            'g"}]},"apply_to":"site","arp_filter":true,"auth":{"eap_reauth":tru'
            'e,"enable_mac_auth":true,"key_idx":1,"keys":["string"],"multi_psk_'
            'only":true,"owe":"string","pairwise":["string"],"private_wlan":tru'
            'e,"psk":"string123","type":"open","wep_as_secondary_auth":true},"a'
            'uth_server_selection":"ordered","auth_servers":[{"host":"string","'
            'port":0,"secret":"string"}],"auth_servers_nas_id":"string","auth_s'
            'ervers_nas_ip":"string","auth_servers_retries":0,"auth_servers_tim'
            'eout":0,"band":"string","band_steer":true,"band_steer_force_band5"'
            ':true,"block_blacklist_clients":true,"bonjour":{"additional_vlan_i'
            'ds":[0],"enabled":true,"services":{"service_name2":{"disable_local'
            '":true,"radius_groups":["string"],"scope":"string"}}},"cisco_cwa":'
            '{"allowed_hostnames":["string"],"allowed_subnets":["string"],"enab'
            'led":true},"client_limit_down":0,"client_limit_down_enabled":true,'
            '"client_limit_up":0,"client_limit_up_enabled":true,"coa_servers":['
            '{"disable_event_timestamp_check":true,"enabled":true,"ip":"192.168'
            '.1.1","port":"3799","secret":"string"}],"disable_11ax":true,"disab'
            'le_uapsd":true,"disable_wmm":true,"dns_server_rewrite":{"enabled":'
            'true,"radius_groups":{}},"dtim":0,"dynamic_psk":{"enabled":true},"'
            'dynamic_vlan":{"default_vlan_id":1,"enabled":true,"local_vlan_ids"'
            ':[1],"type":"standard","vlans":{}},"enable_wireless_bridging":true'
            ',"enabled":true,"hide_ssid":true,"hostname_ie":true,"hotspot20":{"'
            'enabled":true,"operators":["string"],"venue_name":"string"},"inter'
            'face":"all","isolation":true,"legacy_overds":true,"limit_bcast":tr'
            'ue,"limit_probe_response":true,"max_idletime":60,"mxtunnel_id":"b0'
            '69b358-4c97-5319-1f8c-7c5ca64d6ab1","no_static_dns":true,"no_stati'
            'c_ip":true,"portal":{"amazon_client_id":"string","amazon_client_se'
            'cret":"string","amazon_email_domains":["string"],"amazon_enabled":'
            'true,"auth":"none","azure_client_id":"string","azure_client_secret'
            '":"string","azure_enabled":true,"azure_tenant_id":"string","bypass'
            '_when_cloud_down":true,"email_enabled":true,"enabled":true,"expire'
            '":0,"external_portal_url":"string","facebook_client_id":"string","'
            'facebook_client_secret":"string","facebook_email_domains":["string'
            '"],"facebook_enabled":true,"forward":true,"forward_url":"string","'
            'google_email_domains":["string"],"google_enabled":true,"microsoft_'
            'client_id":"string","microsoft_client_secret":"string","microsoft_'
            'email_domains":["string"],"microsoft_enabled":true,"passphrase_ena'
            'bled":true,"password":"string","portal_allowed_hostnames":"string"'
            ',"portal_allowed_subnets":"string","portal_api_secret":"string","p'
            'ortal_denied_hostnames":"string","portal_image":"string","portal_s'
            'so_url":"string","privacy":true,"sms_enabled":true,"sms_provider":'
            '"manual","sponsor_email_domains":["string"],"sponsor_enabled":true'
            ',"sponsor_link_validity_duration":"60","sso_default_role":"string"'
            ',"sso_idp_cert":"string","sso_idp_sign_algo":"string","sso_idp_sso'
            '_url":"string","sso_issuer":"string","thumbnail":"string","twilio_'
            'auth_token":"string","twilio_phone_number":"string","twilio_sid":"'
            'string"},"portal_allowed_hostnames":["string"],"portal_allowed_sub'
            'nets":["string"],"portal_api_secret":"string","portal_denied_hostn'
            'ames":["string"],"portal_image":"http://example.com","portal_sso_u'
            'rl":"string","portal_template_url":"string","qos":{"class":"best_e'
            'ffort","overwrite":true},"radsec":{"enabled":true,"server_name":"s'
            'tring","servers":[{"host":"string","port":0}]},"rateset":{"24":{"h'
            't":"string","legacy":["string"],"min_rssi":0,"template":"string","'
            'vht":"string"},"5":{"ht":"string","legacy":["string"],"min_rssi":0'
            ',"template":"string","vht":"string"}},"roam_mode":"11r","schedule"'
            ':{"enabled":true,"hours":{}},"sle_excluded":true,"ssid":"string","'
            'thumbnail":"http://example.com","use_eapol_v1":true,"vlan_enabled"'
            ':true,"vlan_id":1,"vlan_ids":[1],"vlan_pooling":true,"wlan_limit_d'
            'own":0,"wlan_limit_down_enabled":true,"wlan_limit_up":0,"wlan_limi'
            't_up_enabled":true,"wxtag_ids":["b069b358-4c97-5319-1f8c-7c5ca64d6'
            'ab1"],"wxtunnel_id":"6f4bf402-45f9-2a56-6c8b-7f83d3bc98e9","wxtunn'
            'el_remote_id":"string"}', Wlan.from_dictionary)

        # Perform the API call through the SDK function
        result = self.controller.update_site_wlan(site_id, wlan_id, body)

        # Test response code
        assert self.response_catcher.response.status_code == 200

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = 'application/json'

        assert ComparisonHelper.match_headers(expected_headers, self.response_catcher.response.headers)

        
        # Test whether the captured response is as we expected
        assert result is not None
        expected_body = APIHelper.json_deserialize('{"acct_interim_interval":0,"acct_servers":[{"host":"string","port"'
            ':1813,"secret":"string"}],"airwatch":{"api_key":"string","console_'
            'url":"string","enabled":true,"password":"string","username":"strin'
            'g"},"allow_ipv6_ndp":true,"allow_mdns":false,"ap_ids":["097f6eca-6'
            '276-4993-bfeb-53cbbbba6f08"],"app_limit":{"apps":{},"enabled":true'
            ',"wxtag_ids":{}},"app_qos":{"apps":{"skype-business-video":{"dscp"'
            ':0,"dst_subnet":"string","src_subnet":"string"},"skype-business-vo'
            'ice":{"dscp":0}},"enabled":true,"others":[{"dscp":0,"dst_subnet":"'
            'string","port_ranges":"string","protocol":"string","src_subnet":"s'
            'tring"}]},"apply_to":"site","arp_filter":false,"auth":{"eap_reauth'
            '":false,"enable_mac_auth":false,"key_idx":1,"keys":["string"],"mul'
            'ti_psk_only":false,"owe":"string","pairwise":["wpa2-ccmp"],"privat'
            'e_wlan":true,"psk":"stringst","type":"open","wep_as_secondary_auth'
            '":true},"auth_server_selection":"ordered","auth_servers":[{"host":'
            '"string","port":1812,"secret":"string"}],"auth_servers_nas_id":"st'
            'ring","auth_servers_nas_ip":"string","auth_servers_retries":3,"aut'
            'h_servers_timeout":5,"band":"string","band_steer":false,"band_stee'
            'r_force_band5":false,"block_blacklist_clients":true,"bonjour":{"ad'
            'ditional_vlan_ids":[0],"enabled":false,"services":{"property1":{"d'
            'isable_local":false,"radius_groups":["string"],"scope":"string"},"'
            'property2":{"disable_local":false,"radius_groups":["string"],"scop'
            'e":"string"}}},"cisco_cwa":{"allowed_hostnames":["string"],"allowe'
            'd_subnets":["string"],"enabled":true},"client_limit_down":0,"clien'
            't_limit_down_enabled":false,"client_limit_up":0,"client_limit_up_e'
            'nabled":false,"coa_servers":[{"disable_event_timestamp_check":true'
            ',"enabled":true,"ip":"192.168.0.1","port":"string","secret":"strin'
            'g"}],"created_time":0,"disable_11ax":false,"disable_ht_vht_rates":'
            'false,"disable_uapsd":false,"disable_wmm":false,"dns_server_rewrit'
            'e":{"enabled":true,"radius_groups":{}},"dtim":2,"dynamic_psk":{"de'
            'fault_psk":"stringst","default_vlan_id":0,"enabled":true,"source":'
            '"radius","vlan_ids":[1]},"dynamic_vlan":{"default_vlan_id":999,"en'
            'abled":false,"local_vlan_ids":[1],"type":"standard","vlans":{"prop'
            'erty1":"string","property2":"string"}},"enable_wireless_bridging":'
            'true,"enabled":true,"for_site":true,"hide_ssid":false,"hostname_ie'
            '":false,"hotspot20":{"enabled":true,"operators":["string"],"venue_'
            'name":"string"},"id":"197f6eca-6276-4993-bfeb-53cbbbba6f08","inter'
            'face":"all","isolation":false,"legacy_overds":true,"limit_bcast":f'
            'alse,"limit_probe_response":true,"max_idletime":1800,"modified_tim'
            'e":0,"msp_id":"c0cf23fc-d82f-4219-988c-82fb61d8c875","mxtunnel":{}'
            ',"mxtunnel_id":"6741baab-cbd6-45bd-9e5b-93e8eede3c80","mxtunnel_na'
            'me":["default"],"no_static_dns":false,"no_static_ip":false,"org_id'
            '":"a40f5d1f-d889-42e9-94ea-b9b33585fc6b","portal":{"amazon_client_'
            'id":"string","amazon_client_secret":"string","amazon_email_domains'
            '":["string"],"amazon_enabled":true,"auth":"none","azure_client_id"'
            ':"string","azure_client_secret":"string","azure_enabled":true,"azu'
            're_tenant_id":"string","broadnet_password":"string","broadnet_sid"'
            ':"string","broadnet_user_id":"string","bypass_when_cloud_down":fal'
            'se,"clickatell_api_key":"string","email_enabled":true,"enabled":fa'
            'lse,"expire":1440,"external_portal_url":"string","facebook_client_'
            'id":"string","facebook_client_secret":"string","facebook_email_dom'
            'ains":["string"],"facebook_enabled":true,"forward":false,"forward_'
            'url":"string","google_client_id":"string","google_client_secret":"'
            'string","google_email_domains":["string"],"google_enabled":true,"g'
            'upshup_password":"string","gupshup_userid":"string","microsoft_cli'
            'ent_id":"string","microsoft_client_secret":"string","microsoft_ema'
            'il_domains":["string"],"microsoft_enabled":true,"passphrase_enable'
            'd":true,"password":"string","portal_allowed_hostnames":"string","p'
            'ortal_allowed_subnets":"string","portal_api_secret":"string","port'
            'al_denied_hostnames":"string","portal_image":"string","portal_sso_'
            'url":"string","predefined_sponsors_enabled":true,"privacy":true,"p'
            'uzzel_password":"string","puzzel_service_id":"string","puzzel_user'
            'name":"string","smsMessageFormat":"string","sms_enabled":true,"sms'
            '_provider":"manual","sponsor_email_domains":["string"],"sponsor_en'
            'abled":true,"sponsor_link_validity_duration":"string","sponsor_not'
            'ify_all":false,"sponsors":{"property1":"string","property2":"strin'
            'g"},"sso_default_role":"string","sso_forced_role":"string","sso_id'
            'p_cert":"string","sso_idp_sign_algo":"string","sso_idp_sso_url":"s'
            'tring","sso_issuer":"string","sso_nameid_format":"email","thumbnai'
            'l":"string","twilio_auth_token":"string","twilio_phone_number":"st'
            'ring","twilio_sid":"string"},"portal_allowed_hostnames":["string"]'
            ',"portal_allowed_subnets":["string"],"portal_api_secret":"string",'
            '"portal_denied_hostnames":["string"],"portal_image":"http://exampl'
            'e.com","portal_sso_url":"string","portal_template_url":"string","q'
            'os":{"class":"best_effort","overwrite":false},"radsec":{"enabled":'
            'true,"idle_timeout":0,"server_name":"string","servers":[{"host":"s'
            'tring","port":0}],"use_mxedge":true},"rateset":{"24":{"ht":"string'
            '","legacy":["string"],"min_rssi":0,"template":"string","vht":"stri'
            'ng"},"5":{"ht":"string","legacy":["string"],"min_rssi":0,"template'
            '":"string","vht":"string"}},"roam_mode":"none","schedule":{"enable'
            'd":false,"hours":{}},"site_id":"72771e6a-6f5e-4de4-a5b9-1266c41978'
            '11","sle_excluded":false,"ssid":"string","template_id":"c6d67e98-8'
            '3ea-49f0-8812-e4abae2b68bc","thumbnail":"http://example.com","use_'
            'eapol_v1":false,"vlan_enabled":false,"vlan_id":1,"vlan_ids":[1],"v'
            'lan_pooling":false,"wlan_limit_down":0,"wlan_limit_down_enabled":f'
            'alse,"wlan_limit_up":0,"wlan_limit_up_enabled":false,"wxtag_ids":['
            '"297f6eca-6276-4993-bfeb-53cbbbba6f08"],"wxtunnel_id":"string","wx'
            'tunnel_remote_id":"string"}')
        received_body = APIHelper.json_deserialize(self.response_catcher.response.text)
        assert ComparisonHelper.match_body(expected_body, received_body)

    # Wlan Portal Image Upload
    def test_upload_site_wlan_portal_image(self):
        # Parameters for the API call
        site_id = '000000ab-00ab-00ab-00ab-0000000000ab'
        wlan_id = '000000ab-00ab-00ab-00ab-0000000000ab'
        file = None
        json = None

        # Perform the API call through the SDK function
        result = self.controller.upload_site_wlan_portal_image(site_id, wlan_id, file, json)

        # Test response code
        assert self.response_catcher.response.status_code == 200

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = 'application/json'

        assert ComparisonHelper.match_headers(expected_headers, self.response_catcher.response.headers)


    # Update a Portal Template
    #
    ##### Sponsor Email Template
    #Sponsor Email Template supports following template variables:
    #
    #| **Name** | **Description** |
    #| --- | --- |
    #| approve_url | Renders URL to approve the request; optionally &minutes=N query param can be appended to change the Authorization period of the guest, where N is a valid integer denoting number of minutes a guest remains authorized |
    #| deny_url | Renders URL to reject the request |
    #| guest_email | Renders Email ID of the guest |
    #| guest_name | Renders Name of the guest |
    #| field1 | Renders value of the Custom Field 1 |
    #| field2 | Renders value of the Custom Field 2 |
    #| company | Renders value of the Company field |
    #| sponsor_link_validity_duration | Renders validity time of the request (i.e. Approve/Deny URL) |
    #| auth_expire_minutes | Renders Wlan-level configured Guest Authorization Expiration time period (in minutes), If not configured then default (1 day in minutes) |
    def test_update_site_wlan_portal_template(self):
        # Parameters for the API call
        site_id = '000000ab-00ab-00ab-00ab-0000000000ab'
        wlan_id = '000000ab-00ab-00ab-00ab-0000000000ab'
        body = APIHelper.json_deserialize('{"accessCodeAlternateEmail":"string","alignment":"string","authBut'
            'tonAmazon":"string","authButtonAzure":"string","authButtonEmail":"'
            'string","authButtonFacebook":"string","authButtonGoogle":"string",'
            '"authButtonMicrosoft":"string","authButtonPassphrase":"string","au'
            'thButtonSms":"string","authButtonSponsor":"string","authLabel":"st'
            'ring","backLink":"string","color":"string","colorDark":"string","c'
            'olorLight":"string","company":true,"companyError":"string","compan'
            'yLabel":"string","email":true,"emailAccessDomainError":"string","e'
            'mailCancel":"string","emailCodeError":"string","emailError":"strin'
            'g","emailFieldLabel":"string","emailLabel":"string","emailMessage"'
            ':"string","emailSubmit":"string","emailTitle":"string","field1":tr'
            'ue,"field1Error":"string","field1Label":"string","field1Required":'
            'true,"field2":true,"field2Error":"string","field2Label":"string","'
            'field2Required":true,"field3":true,"field3Error":"string","field3L'
            'abel":"string","field3Required":true,"field4":true,"field4Error":"'
            'string","field4Label":"string","field4Required":true,"message":"st'
            'ring","name":true,"nameError":"string","nameLabel":"string","optou'
            't":true,"optoutLabel":"string","pageTitle":"string","passphraseCan'
            'cel":"string","passphraseError":"string","passphraseLabel":"string'
            '","passphraseMessage":"string","passphraseSubmit":"string","passph'
            'raseTitle":"string","poweredBy":true,"requiredFieldLabel":"string"'
            ',"signInLabel":"string","smsCarrierDefault":"string","smsCarrierEr'
            'ror":"string","smsCarrierFieldLabel":"string","smsCodeCancel":"str'
            'ing","smsCodeError":"string","smsCodeFieldLabel":"string","smsCode'
            'Message":"string","smsCodeSubmit":"string","smsCodeTitle":"string"'
            ',"smsCountryFieldLabel":"string","smsCountryFormat":"string","smsH'
            'aveAccessCode":"string","smsMessageFormat":"string","smsNumberCanc'
            'el":"string","smsNumberError":"string","smsNumberFieldLabel":"stri'
            'ng","smsNumberFormat":"string","smsNumberMessage":"string","smsNum'
            'berSubmit":"string","smsNumberTitle":"string","smsUsernameFormat":'
            '"string","smsValidityDuration":0,"sponsorBackLink":"string","spons'
            'orCancel":"string","sponsorEmail":"string","sponsorEmailError":"st'
            'ring","sponsorEmailTemplate":"string","sponsorInfoApproved":"strin'
            'g","sponsorInfoDenied":"string","sponsorInfoPending":"string","spo'
            'nsorName":"string","sponsorNameError":"string","sponsorNotePending'
            '":"string","sponsorStatusApproved":"string","sponsorStatusDenied":'
            '"string","sponsorStatusPending":"string","sponsorSubmit":"string",'
            '"tos":true,"tosAcceptLabel":"string","tosError":"string","tosLink"'
            ':"string","tosText":"string"}', WlanPortalTemplate.from_dictionary)

        # Perform the API call through the SDK function
        result = self.controller.update_site_wlan_portal_template(site_id, wlan_id, body)

        # Test response code
        assert self.response_catcher.response.status_code == 200

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = 'application/json'

        assert ComparisonHelper.match_headers(expected_headers, self.response_catcher.response.headers)

        
        # Test whether the captured response is as we expected
        assert result is not None
        expected_body = APIHelper.json_deserialize('{"accessCodeAlternateEmail":"string","alignment":"string","authBut'
            'tonAmazon":"string","authButtonAzure":"string","authButtonEmail":"'
            'string","authButtonFacebook":"string","authButtonGoogle":"string",'
            '"authButtonMicrosoft":"string","authButtonPassphrase":"string","au'
            'thButtonSms":"string","authButtonSponsor":"string","authLabel":"st'
            'ring","backLink":"string","color":"string","colorDark":"string","c'
            'olorLight":"string","company":true,"companyError":"string","compan'
            'yLabel":"string","created_time":0,"email":true,"emailAccessDomainE'
            'rror":"string","emailCancel":"string","emailCodeError":"string","e'
            'mailError":"string","emailFieldLabel":"string","emailLabel":"strin'
            'g","emailMessage":"string","emailSubmit":"string","emailTitle":"st'
            'ring","field1":true,"field1Error":"string","field1Label":"string",'
            '"field1Required":true,"field2":true,"field2Error":"string","field2'
            'Label":"string","field2Required":true,"field3":true,"field3Error":'
            '"string","field3Label":"string","field3Required":true,"field4":tru'
            'e,"field4Error":"string","field4Label":"string","field4Required":t'
            'rue,"id":"b069b358-4c97-5319-1f8c-7c5ca64d6ab1","message":"string"'
            ',"modified_time":0,"name":true,"nameError":"string","nameLabel":"s'
            'tring","optout":true,"optoutLabel":"string","org_id":"b069b358-4c9'
            '7-5319-1f8c-7c5ca64d6ab1","pageTitle":"string","passphraseCancel":'
            '"string","passphraseError":"string","passphraseLabel":"string","pa'
            'ssphraseMessage":"string","passphraseSubmit":"string","passphraseT'
            'itle":"string","poweredBy":true,"requiredFieldLabel":"string","sig'
            'nInLabel":"string","site_id":"b069b358-4c97-5319-1f8c-7c5ca64d6ab1'
            '","smsCarrierDefault":"string","smsCarrierError":"string","smsCarr'
            'ierFieldLabel":"string","smsCodeCancel":"string","smsCodeError":"s'
            'tring","smsCodeFieldLabel":"string","smsCodeMessage":"string","sms'
            'CodeSubmit":"string","smsCodeTitle":"string","smsCountryFieldLabel'
            '":"string","smsCountryFormat":"string","smsHaveAccessCode":"string'
            '","smsMessageFormat":"string","smsNumberCancel":"string","smsNumbe'
            'rError":"string","smsNumberFieldLabel":"string","smsNumberFormat":'
            '"string","smsNumberMessage":"string","smsNumberSubmit":"string","s'
            'msNumberTitle":"string","smsUsernameFormat":"string","smsValidityD'
            'uration":0,"sponsorBackLink":"string","sponsorCancel":"string","sp'
            'onsorEmail":"string","sponsorEmailError":"string","sponsorEmailTem'
            'plate":"string","sponsorInfoApproved":"string","sponsorInfoDenied"'
            ':"string","sponsorInfoPending":"string","sponsorName":"string","sp'
            'onsorNameError":"string","sponsorNotePending":"string","sponsorSta'
            'tusApproved":"string","sponsorStatusDenied":"string","sponsorStatu'
            'sPending":"string","sponsorSubmit":"string","tos":true,"tosAcceptL'
            'abel":"string","tosError":"string","tosLink":"string","tosText":"s'
            'tring"}')
        received_body = APIHelper.json_deserialize(self.response_catcher.response.text)
        assert ComparisonHelper.match_body(expected_body, received_body)

    # Allows validation of Telstra sms gateway credentials.
    #
    #In case of success, a text message confirming successful setup should be received. In case of error, telstra error message are returned.
    def test_test_site_wlan_telstra_setup(self):

        # Perform the API call through the SDK function
        result = self.controller.test_site_wlan_telstra_setup()

        # Test response code
        assert self.response_catcher.response.status_code == 200

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = 'application/json'

        assert ComparisonHelper.match_headers(expected_headers, self.response_catcher.response.headers)


    # Allows validation of twilio setup
    #In case of success, a text message confirming successful setup should be received. In case of error, twilio error code and message are returned.
    def test_test_site_wlan_twilio_setup(self):
        # Parameters for the API call
        body = APIHelper.json_deserialize('{"from":"+185051234567","to":"+19999999999","twilio_auth_token":"2'
            '135be04736a1a0a314bce432d61721a","twilio_sid":"AC5f4366878d193fb48'
            '65ab151739999eb"}', ApiV1UtilsTestTwilioRequest.from_dictionary)

        # Perform the API call through the SDK function
        result = self.controller.test_site_wlan_twilio_setup(body)

        # Test response code
        assert self.response_catcher.response.status_code == 200

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = 'application/json'

        assert ComparisonHelper.match_headers(expected_headers, self.response_catcher.response.headers)


