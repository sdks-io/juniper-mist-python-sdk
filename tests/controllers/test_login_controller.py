# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

import json
import dateutil.parser

from tests.controllers.controller_test_base import ControllerTestBase
from apimatic_core.utilities.comparison_helper import ComparisonHelper
from mistapi.api_helper import APIHelper
from mistapi.models.api_v_1_login_request import ApiV1LoginRequest
from mistapi.models.model_object_email import ModelObjectEmail


class LoginControllerTests(ControllerTestBase):

    @classmethod
    def setUpClass(cls):
        super(LoginControllerTests, cls).setUpClass()
        cls.controller = cls.client.login
        cls.response_catcher = cls.controller.http_call_back

    # Log in with email/password.
    #When 2FA is enabled, there are two ways to login:
    #1. login with two_factor token (with Google Authenticator, etc) 
    #2. login with email/password, generate the token, and use /login/two_factor with the token
    def test_login(self):
        # Parameters for the API call
        body = APIHelper.json_deserialize('{"email":"string","password":"string","two_factor":"string"}', ApiV1LoginRequest.from_dictionary)

        # Perform the API call through the SDK function
        result = self.controller.login(body)

        # Test response code
        assert self.response_catcher.response.status_code == 200

        # Test headers
        expected_headers = {}
        expected_headers['set-cookie'] = None
        expected_headers['content-type'] = 'application/json'

        assert ComparisonHelper.match_headers(expected_headers, self.response_catcher.response.headers)

        
        # Test whether the captured response is as we expected
        assert result is not None
        expected_body = APIHelper.json_deserialize('{"email":"test@mistsys.com","two_factor_passed":false,"two_factor_'
            'required":true}')
        received_body = APIHelper.json_deserialize(self.response_catcher.response.text)
        assert ComparisonHelper.match_body(expected_body, received_body)

    # Login Lookup
    def test_lookup(self):
        # Parameters for the API call
        body = APIHelper.json_deserialize('{"email":"test@mistsys.com"}', ModelObjectEmail.from_dictionary)

        # Perform the API call through the SDK function
        result = self.controller.lookup(body)

        # Test response code
        assert self.response_catcher.response.status_code == 200

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = 'application/json'

        assert ComparisonHelper.match_headers(expected_headers, self.response_catcher.response.headers)

        
        # Test whether the captured response is as we expected
        assert result is not None
        expected_body = APIHelper.json_deserialize('{"sso_url":"https://my.sso/idp_sso_url"}')
        received_body = APIHelper.json_deserialize(self.response_catcher.response.text)
        assert ComparisonHelper.match_body(expected_body, received_body)

    # Logout
    def test_logout(self):

        # Perform the API call through the SDK function
        result = self.controller.logout()

        # Test response code
        assert self.response_catcher.response.status_code == 200

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = 'application/json'

        assert ComparisonHelper.match_headers(expected_headers, self.response_catcher.response.headers)

        
        # Test whether the captured response is as we expected
        assert result is not None
        expected_body = APIHelper.json_deserialize('{"forward_url":"https://my.sso/custom_logout_url"}')
        received_body = APIHelper.json_deserialize(self.response_catcher.response.text)
        assert ComparisonHelper.match_body(expected_body, received_body)

